<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>http://localhost:4000/</title>
   
   <link>http://localhost:4000/</link>
   <description>얼큰우동TV, 쉽게배우는 IT(Programming,Machine Learning,금융)</description>
   <language>en-uk</language>
   
   <title>
   <![CDATA[ IT Technical Training ]]>
   </title>
   <description>
   <![CDATA[ 얼큰우동TV, 쉽게배우는 IT(Programming,Machine Learning,금융) ]]>
   </description>
   <link>http://localhost:4000/</link>
   <image>
   <url>http://localhost:4000/assets/built/images/favicon.jpg</url>
   <title>IT Technical Training</title>
   <link>http://localhost:4000/</link>
   </image>
   <generator>Jekyll 3.6.2</generator>
   <lastBuildDate></lastBuildDate>
   <atom:link href="http://localhost:4000/rss.xml" rel="self" type="application/rss+xml"/>
   <ttl>60</ttl>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Python 데이터분석 라이브러리(10) - Pandas(Exercise)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-exercise</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-12T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-exercise</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas Exercise - 1</strong></p>

<p>Group Lens(미네소타 대학 컴퓨터과의 research lab)에서 수집한 영화 데이터를 이용해
데이터 분석을 해 보자.</p>

<p>영화의 선호 정보를 1~5사이의 점수로 표현 (5에 가까울수록 선호)</p>

<p><a href="https://grouplens.org/datasets/movielens/" target="_blank">Group Lens 사이트</a></p>

<p><a href="/assets/downloads/ml-latest-small.zip" target="_blank">사용할 데이터 파일</a></p>

<blockquote>
  <p><strong>pandas를 사용하여 다음의 문제를 해결합니다. 동률이 있을 경우 오름차순으로 정렬하여 출력합니다.</strong></p>
</blockquote>

<pre><code class="language-txt">
1. 사용자가 평가한 모든 영화의 전체 평균 평점을 출력하세요.

2. 각 사용자별 평균 평점을 구하세요. 출력시 정렬은 userId로 오름차순 정렬합니다.

3. 각 영화별 평균 평점을 구하세요. 출력시 정렬은 movieId로 오름차순 정렬합니다. 

4. 평균 평점이 가장 높은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.

5. Comedy영화 중 가장 평점이 낮은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.

6. 2015년도에 평가된 모든 Romance 영화의 평균 평점은?

</code></pre>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
예상되는 정답.

1. 사용자가 평가한 모든 영화의 전체 평균 평점을 출력하세요.
   =&gt; 3.501556983616962



2. 각 사용자별 평균 평점을 구하세요. 출력시 정렬은 userId로 오름차순 정렬합니다.
   =&gt; userId
      1      4.366379
      2      3.948276
      3      2.435897
      4      3.555556
      5      3.636364
               ...   
      606    3.657399
      607    3.786096
      608    3.134176
      609    3.270270
      610    3.688556
      Name: rating, Length: 610, dtype: float64



3. 각 영화별 평균 평점을 구하세요. 출력시 정렬은 movieId로 오름차순 정렬합니다.
   =&gt; 	movieId	title	rating
      0	1	Toy Story (1995)	3.920930
      1	2	Jumanji (1995)	3.431818
      2	3	Grumpier Old Men (1995)	3.259615
      3	4	Waiting to Exhale (1995)	2.357143
      4	5	Father of the Bride Part II (1995)	3.071429
      ...	...	...	...
      9737	193581	Black Butler: Book of the Atlantic (2017)	4.000000
      9738	193583	No Game No Life: Zero (2017)	3.500000
      9739	193585	Flint (2017)	3.500000
      9740	193587	Bungo Stray Dogs: Dead Apple (2018)	3.500000
      9741	193609	Andrew Dice Clay: Dice Rules (1991)	4.000000
      9742 rows × 3 columns



4. 평균 평점이 가장 높은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.
   =&gt; 	movieId	title	rating
      5690	27751	'Salem's Lot (2004)	5.0
      7332	77846	12 Angry Men (1997)	5.0
      9046	141816	12 Chairs (1976)	5.0
      3893	5468	20 Million Miles to Earth (1957)	5.0
      5639	27373	61* (2001)	5.0
      ...	...	...	...
      9711	187717	Won't You Be My Neighbor? (2018)	5.0
      8355	108795	Wonder Woman (2009)	5.0
      9289	158398	World of Glory (1991)	5.0
      9560	173351	Wow! A Talking Fish! (1983)	5.0
      7521	84273	Zeitgeist: Moving Forward (2011)	5.0
      296 rows × 3 columns



5. Comedy영화 중 가장 평점이 낮은 영화의 제목을 출력하세요.
   단, 동률이 있을 경우 모두 출력하고 title을 기준으로 오름차순 정렬하세요.
   =&gt; 	movieId	title	genres
      8893	134528	Aloha (2015)	Comedy|Drama|Romance
      5777	31422	Are We There Yet? (2005)	Children|Comedy
      7762	91414	Arthur Christmas (2011)	Animation|Children|Comedy|Drama
      9419	165645	Bad Santa 2 (2016)	Comedy
      4439	6557	Born to Be Wild (1995)	Adventure|Children|Comedy|Drama
      5409	25782	Boudu Saved From Drowning (Boudu sauvé des eau...	Comedy
      6554	54934	Brothers Solomon, The (2007)	Comedy
      5453	26095	Carabineers, The (Carabiniers, Les) (1963)	Comedy|Drama|War
      6545	54768	Daddy Day Camp (2007)	Children|Comedy
      4881	7312	Follow Me, Boys! (1966)	Comedy|Drama
      7553	85334	Hard Ticket to Hawaii (1987)	Action|Comedy
      8417	110773	Haunted House 2, A (2014)	Comedy|Horror
      5662	27595	Jesus Christ Vampire Hunter (2001)	Action|Comedy|Horror|Musical
      8984	138798	Joe Dirt 2: Beautiful Loser (2015)	Comedy
      7820	92681	Journey 2: The Mysterious Island (2012)	Action|Adventure|Comedy|Sci-Fi|IMAX
      6160	44243	Leprechaun 4: In Space (1997)	Comedy|Fantasy|Horror|Sci-Fi
      8248	104644	Maria Bamford: The Special Special Special! (2...	Comedy
      7201	72696	Old Dogs (2009)	Comedy
      9056	141994	Saving Christmas (2014)	Children|Comedy
      5258	8632	Secret Society (2002)	Comedy
      9590	175475	The Emoji Movie (2017)	Animation|Children|Comedy
      8908	135216	The Star Wars Holiday Special (1978)	Adventure|Children|Comedy|Sci-Fi
      8676	122246	Tooth Fairy 2 (2012)	Children|Comedy
      5795	31692	Uncle Nino (2003)	Comedy
      6784	60363	Zombie Strippers! (2008)	Comedy|Horror



6. 2015년도에 평가된 모든 Romance 영화의 평균 평점은?
   =&gt; 3.396375098502758


</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas Exercise - 2</strong></p>

<p>R에서 데이터 분석에 사용되는 mpg data set을 이용하여 pandas로 기술분석을
진행합니다.</p>

<p>mpg data set 파일은 아래 링크에서 다운로드 할 수 있습니다.</p>

<p><a href="/assets/downloads/mpg.zip" target="_blank">사용할 mpg 데이터 파일</a></p>

<p>만약 R이 설치되어 있다면 다음의 코드로 데이터파일을 생성할 수 있습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## mpg data set 파일 저장</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">write.csv</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w">
          </span><span class="n">file</span><span class="o">=</span><span class="s2">"C:/notebook_dir/mpg.txt"</span><span class="p">,</span><span class="w">
          </span><span class="n">row.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">
          </span><span class="n">quote</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">
          </span><span class="n">fileEncoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>기본적인 column에 대한 설명은 아래와 같고 더 자세한 설명은 아래에 링크된
사이트로 이동하시면 상세한 설명을 보실 수 있습니다.</p>

<p><a href="https://rpubs.com/shailesh/mpg-exploration" target="_blank">R mpg data set Documentation</a></p>

<pre><code class="language-txt"># 주요컬럼 설명
# manufacturer : 제조회사
# displ : 배기량
# cyl : 실린더 개수
# drv : 구동 방식
# hwy : 고속도로 연비
# class : 자동차 종류
# model : 자동차 모델명
# year : 생산연도
# trans : 변속기 종류
# cty : 도시 연비
# fl : 연료 종류
</code></pre>

<blockquote>
  <p><strong>pandas를 사용하여 다음의 문제를 해결합니다.</strong></p>
</blockquote>

<pre><code class="language-txt">
1. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 
   어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 확인하세요.


2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 한다. 
   "audi"와 "toyota" 중 어느 manufacturer(제조회사)의 cty(도시 연비)가 
   평균적으로 더 높은지 확인하세요.


3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 한다. 
   이 회사들의 데이터를 추출한 후 hwy(고속도로 연비) 평균을 구하세요.


4. "audi"에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 
   높은지 알아보려고 한다. 
   "audi"에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.


5. mpg 데이터는 연비를 나타내는 변수가 2개입니다. 
   두 변수를 각각 활용하는 대신 하나의 통합 연비 변수를 만들어 사용하려 합니다. 
   평균 연비 변수는 두 연비(고속도로와 도시)의 평균을 이용합니다. 
   회사별로 "suv" 자동차의 평균 연비를 구한후 내림차순으로 정렬한 후 1~5위까지 데이터를 출력하세요.


6. mpg 데이터의 class는 "suv", "compact" 등 자동차의 특징에 따라 
   일곱 종류로 분류한 변수입니다. 어떤 차종의 도시 연비가 높은지 비교하려 합니다. 
   class별 cty 평균을 구하고 cty 평균이 높은 순으로 정렬해 출력하세요.


7. 어떤 회사 자동차의 hwy(고속도로 연비)가 가장 높은지 알아보려 합니다. 
   hwy(고속도로 연비) 평균이 가장 높은 회사 세 곳을 출력하세요.


8. 어떤 회사에서 "compact" 차종을 가장 많이 생산하는지 알아보려고 합니다. 
   각 회사별 "compact" 차종 수를 내림차순으로 정렬해 출력하세요.

</code></pre>

<pre><code class="language-txt">
예상되는 정답.

1. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 
   어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 확인하세요.
   =&gt; 배기량 4이하인자동차 : 25.96319018404908
      배기량 5이상인자동차 : 18.07894736842105

2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 한다. 
   "audi"와 "toyota" 중 어느 manufacturer(제조회사)의 cty(도시 연비)가 
   평균적으로 더 높은지 확인하세요.
    =&gt; audi의도시연비평균 : 17.61111111111111
       toyota의도시연비평균 : 18.529411764705884
 
3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 한다. 
   이 회사들의 데이터를 추출한 후 hwy(고속도로 연비) 평균을 구하세요.
    =&gt; hwy(고속도로 연비) 평균 : 22.50943396226415

4. "audi"에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 
   높은지 알아보려고 한다. "audi"에서 생산한 자동차 중 hwy가 1~5위에 해당하는 
   자동차의 데이터를 출력하세요.
    =&gt; manufacturer	model	displ	year	cyl	trans	drv	cty	hwy	fl	class
       2	audi	a4	2.0	2008	4	manual(m6)	f	20	31	p	compact
       3	audi	a4	2.0	2008	4	auto(av)	f	21	30	p	compact
       0	audi	a4	1.8	1999	4	auto(l5)	f	18	29	p	compact
       1	audi	a4	1.8	1999	4	manual(m5)	f	21	29	p	compact
       9	audi	a4 quattro	2.0	2008	4	manual(m6)	4	20	28	p	compact

5. mpg 데이터는 연비를 나타내는 변수가 2개입니다. 
   두 변수를 각각 활용하는 대신 하나의 통합 연비 변수를 만들어 사용하려 합니다. 
   평균 연비 변수는 두 연비(고속도로와 도시)의 평균을 이용합니다. 
   회사별로 "suv" 자동차의 평균 연비를 구한후 내림차순으로 정렬한 후 1~5위까지 데이터를 출력하세요.
   =&gt; 	        avg_fuel_efficiency
     manufacturer	
     subaru	21.916667
     toyota	16.312500
     nissan	15.875000
     mercury	15.625000
     jeep	15.562500
     ford	15.333333
     chevrolet	14.888889
     lincoln	14.166667
     land rover	14.000000
     dodge	13.928571 

6. mpg 데이터의 class는 "suv", "compact" 등 자동차의 특징에 따라 
   일곱 종류로 분류한 변수입니다. 어떤 차종의 도시 연비가 높은지 비교하려 합니다. 
   class별 cty 평균을 구하고 cty 평균이 높은 순으로 정렬해 출력하세요.
   =&gt; class
     subcompact    20.371429
     compact       20.127660
     midsize       18.756098
     minivan       15.818182
     2seater       15.400000
     suv           13.500000
     pickup        13.000000
     Name: cty, dtype: float64

7. 어떤 회사 자동차의 hwy(고속도로 연비)가 가장 높은지 알아보려 합니다. 
   hwy(고속도로 연비) 평균이 가장 높은 회사 세 곳을 출력하세요.
   =&gt; manufacturer
     honda         32.555556
     volkswagen    29.222222
     hyundai       26.857143
     Name: hwy, dtype: float64

8. 어떤 회사에서 "compact" 차종을 가장 많이 생산하는지 알아보려고 합니다. 
   각 회사별 "compact" 차종 수를 내림차순으로 정렬해 출력하세요.
   =&gt; manufacturer
     audi          15
     volkswagen    14
     toyota        12
     subaru         4
     nissan         2
     Name: class, dtype: int64

</code></pre>

<hr />

<p><strong class="subtitle2_fontAwesome">Pandas Exercise - 3</strong></p>

<p>본격적으로 데이터 분석 연습문제를 풀어겠습니다.</p>

<p>실습데이터는 <code class="highlighter-rouge">한국복지패널데이터</code>를 이용합니다. 이 데이터는 한국보건사회연구원에서
전국 7000여 가구를 선정해 2006년부터 매년 추적 조사한 자료로, 경제활동, 생활실태,
복지욕구등 천여 개 변수로 구성되어 있습니다.</p>

<p>해당 데이터에는 우리나라의 다양한 삶에 대한 데이터가 들어있고 이를 분석하면 대한민국
사람들이 어떻게 살아가고 있는가를 분석할 수 있습니다.</p>

<p><a href="/assets/downloads/Koweps.zip" target="_blank">사용할 한국복지패널데이터 데이터 파일</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 한국복지패널데이터를 이용한 데이터 분석 연습</span>

<span class="c"># 데이터 준비</span>

<span class="c"># 제공된 파일의 압축을 풀면 파일이 2개 있습니다. </span>
<span class="c"># Koweps_hpc10_2015_beta1.sav : SPSS 데이터 파일 (128M)</span>
<span class="c"># Koweps_Codebook.xlsx : 우리가 사용할 column에 대한 설명</span>
<span class="c"># 총 7개의 column만을 이용합니다. </span>


<span class="c"># 데이터 파일인 Koweps_hpc10_2015_beta1.sav 파일은 </span>
<span class="c"># 상용 통계분석 소프트웨어인 SPSS 전용파일입니다. </span>

<span class="c"># 해당 데이터 파일은 SPSS 전용파일이기 때문에 pandas에서 사용하기 </span>
<span class="c"># 위해서 다음의 코드를 이용해서 DataFrame으로 변환해야 합니다.</span>


<span class="c"># pip install savReaderWriter </span>

<span class="kn">import</span> <span class="nn">pandas</span>
<span class="kn">import</span> <span class="nn">savReaderWriter</span>

<span class="k">with</span> <span class="n">savReaderWriter</span><span class="o">.</span><span class="n">SavReader</span><span class="p">(</span><span class="s">'./data/Koweps_hpc10_2015_beta1.sav'</span><span class="p">,</span> <span class="n">ioUtf8</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span> <span class="k">as</span> <span class="n">reader</span><span class="p">:</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pandas</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">reader</span><span class="o">.</span><span class="nb">all</span><span class="p">(),</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">s</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">reader</span><span class="o">.</span><span class="n">header</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>      <span class="c"># # (16664, 957)</span>
<span class="n">df</span><span class="p">[</span><span class="s">'h10_g3'</span><span class="p">]</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>  <span class="c"># 성별</span>
<span class="n">df</span><span class="p">[</span><span class="s">'h10_g4'</span><span class="p">]</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>  <span class="c"># 태어난 연도</span>

</code></pre></div></div>

<blockquote>
  <p><strong>준비된 데이터를 이용하여 데이터 분석을 진행합니다.</strong></p>
</blockquote>

<pre><code class="language-txt">1. 성별에 따른 월급 차이
   과거에 비해 여성의 사회 진출이 활발하지만 직장에서의
   위상에서는 여전히 차별이 존재하고 있는것이 사실.
   실제로 그러한지 월급의 차이를 이용하여 사실을 확인해보자


2. 나이와 월급의 관계
   평균적으로 몇 살 때 월급을 가장 많이 받을까? 또 그때의 평균 월급은 얼마인가?


3. 연령대에 따른 월급 차이
   30세 미만을 초년(young), 
   30~59세 : 중년(middle), 
   60세 이상 : 노년(old)
   위의 범주로 연령대에 따른 월급의 차이를 알아보자


4. 연령대 및 성별 월급 차이
   성별 월급 차이는 연령대에 따라 다른 양상을 보일 수 있습니다.
   성별 월급 차이가 연령대에 따라 다른지 분석해보자

   기존에는 3그룹(초년,중년,노년)이었지만 이젠 6그룹으로
   그룹핑을 해야 한다.(초년남성,초년여성,..)


5. 직업별 월급 차이
   어떤 직업이 월급을 가장 많이 받을까?
   직업별 월급을 분석해 보자
   직업코드는 제공된 Koweps_Codebook.xlsx을 이용하면 
   편하게 코드값을 이용 할 수 있습니다.


6. 성별 직업 빈도
   성별로 어떤 직업이 가장 많을까?


7. 종교 유무에 따른 이혼율
   종교가 있는 사람들이 이혼을 덜 할까??
   종교있는 사람과 종교가 없는 사람들의 총원이 다르기 때문에
   각 파트의 이혼률을 구해서 비교하면 될 듯 합니다.
    


8. 지역별 연령대 비율
   노년층이 많은 지역은 어디일까?
   노년층의 수가 많은 지역이 어디인지를 알아내는 문제입니다. 각 지역마다 노년층의
   인구수를 구해서 가장 많은 노년층 인구가 있는 지역을 출력하시면 됩니다.

</code></pre>

<pre><code class="language-txt">
예상되는 정답.

1. 성별에 따른 월급 차이
   과거에 비해 여성의 사회 진출이 활발하지만 직장에서의
   위상에서는 여전히 차별이 존재하고 있는것이 사실.
   실제로 그러한지 월급의 차이를 이용하여 사실을 확인해보자
    ==&gt; # 결과
        # 남성 평균 월급 : 312.2932
        # 여성 평균 월급 : 163.2471
        # 남성이 여성보다 월급이 약 150만원 많다.

2. 나이와 월급의 관계
   평균적으로 몇 살 때 월급을 가장 많이 받을까? 또 그때의 평균 월급은 얼마인가?
   ==&gt; 월급을 가장 많이 받는 나이는 : 53살, 월급 : 318.6777   


3. 연령대에 따른 월급 차이
   30세 미만을 초년(young), 
   30~59세 : 중년(middle), 
   60세 이상 : 노년(old)
   위의 범주로 연령대에 따른 월급의 차이를 알아보자
   ==&gt; # 초년(young) : 163.5953
       # 중년(middle) : 281.8871
       # 노년(old) : 125.3295


4. 연령대 및 성별 월급 차이
   성별 월급 차이는 연령대에 따라 다른 양상을 보일 수 있습니다.
   성별 월급 차이가 연령대에 따라 다른지 분석해보자
   기존에는 3그룹(초년,중년,노년)이었지만 이젠 6그룹으로
   그룹핑을 해야 한다.(초년남성,초년여성,..)
   ==&gt; # 초년 남성 : 170.81737
       # 초년 여성 : 159.50518
       # 중년 남성 : 353.07574
       # 중년 여성 : 187.97552
       # 노년 남성 : 173.85558
       # 노년 여성 : 81.52917



5. 직업별 월급 차이
   어떤 직업이 월급을 가장 많이 받을까?
   직업별 월급을 분석해 보자
   직업코드는 제공된 Koweps_Codebook.xlsx을 이용하면 
   편하게 코드값을 이용 할 수 있습니다.
 

6. 성별 직업 빈도
   성별로 어떤 직업이 가장 많을까?


7. 종교 유무에 따른 이혼율
   종교가 있는 사람들이 이혼을 덜 할까??


8. 지역별 연령대 비율
   노년층이 많은 지역은 어디일까?

</code></pre>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-group</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-11T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-group</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">Series Grouping</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Series Grouping</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과에 학년에 중복된 값이 있다.</span>
<span class="c"># 학과를 기준으로 grouping작업</span>
<span class="n">dept</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">])</span>  
<span class="n">display</span><span class="p">(</span><span class="n">dept</span><span class="p">)</span>    <span class="c"># &lt;pandas.core.groupby.generic.SeriesGroupBy object at ~ &gt;</span>

<span class="c"># 그룹 안에 데이터를 확인하고 싶은 경우에는 get_group() 사용</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="o">.</span><span class="n">get_group</span><span class="p">(</span><span class="s">'컴퓨터'</span><span class="p">))</span>   <span class="c"># Series로 리턴</span>

<span class="c"># 각 그룹의 사이즈를 확인하고 싶은 경우에는 size() 사용</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="o">.</span><span class="n">size</span><span class="p">())</span>  <span class="c"># Series로 리턴             </span>

<span class="c"># 각 그룹의 평균을 알고 싶은 경우</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>

<span class="c"># 2단계 grouping</span>
<span class="n">dept_year</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">],</span><span class="n">df</span><span class="p">[</span><span class="s">"학년"</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="c"># unstack을 이용하여 최하위 index를 column으로 설정</span>
<span class="n">display</span><span class="p">(</span><span class="n">dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">unstack</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame Grouping</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame Grouping</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과에 학년에 중복된 값이 있다.</span>
<span class="c"># 학과를 기준으로 grouping작업</span>
<span class="n">df_group_dept</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">])</span>  
<span class="n">display</span><span class="p">(</span><span class="n">df_group_dept</span><span class="p">)</span>    <span class="c"># &lt;pandas.core.groupby.generic.DataFrameGroupBy object at ~ &gt;</span>

<span class="c"># 그룹 안에 데이터를 확인하고 싶은 경우에는 get_group() 사용</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_group_dept</span><span class="o">.</span><span class="n">get_group</span><span class="p">(</span><span class="s">'컴퓨터'</span><span class="p">))</span>   <span class="c"># DataFrame으로 리턴</span>

<span class="c"># 각 그룹의 사이즈를 확인하고 싶은 경우에는 size() 사용</span>
<span class="k">print</span><span class="p">(</span><span class="n">df_group_dept</span><span class="o">.</span><span class="n">size</span><span class="p">())</span>  <span class="c"># Series로 리턴             </span>

<span class="c"># 각 그룹의 평균을 알고 싶은 경우</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_group_dept</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>

<span class="c"># 2단계 grouping</span>
<span class="n">df_dept_year</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>

<span class="c"># unstack을 이용하여 최하위 index를 column으로 설정</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_dept_year</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">unstack</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 다양한 Grouping</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 다양한 Grouping</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과별 평균학점은?</span>
<span class="c"># print(df["학점"].groupby(df["학과"]).mean())</span>

<span class="c"># 학과별 평균학점의 다른 표현</span>
<span class="c"># print(df.groupby(df["학과"])["학점"].mean())</span>

<span class="c"># 학과, 학년별 평균 학점은?</span>
<span class="c"># display(df.groupby([df["학과"],df["학년"]]).mean())</span>
<span class="c"># display(df.groupby(["학과","학년"]).mean())</span>

<span class="c"># 학과별 몇명이 존재하는가?</span>
<span class="c"># print(df.groupby(df["학과"])["이름"].count())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame Grouping과 반복문</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 학과로 그룹핑한 후 for문을 이용한 반복 처리</span>
<span class="k">for</span> <span class="n">dept</span><span class="p">,</span> <span class="n">group</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">]):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="p">)</span>
    <span class="n">display</span><span class="p">(</span><span class="n">group</span><span class="p">)</span>

    
<span class="c"># 학과와 학년으로 Grouping한 후 for문을 이용한 반복 처리</span>
<span class="k">for</span> <span class="p">(</span><span class="n">dept</span><span class="p">,</span> <span class="n">year</span><span class="p">),</span> <span class="n">group</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">]):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">30</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">dept</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">year</span><span class="p">)</span>
    <span class="n">display</span><span class="p">(</span><span class="n">group</span><span class="p">)</span>


</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame Grouping 후 데이터 변환</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"체육교육과"</span><span class="p">,</span><span class="s">"컴퓨터"</span><span class="p">],</span>
                    <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
                    <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"홍길동"</span><span class="p">,</span><span class="s">"김연아"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="s">"아이유"</span><span class="p">,</span><span class="s">"신사임당"</span><span class="p">],</span>
                    <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">3.7</span><span class="p">,</span> <span class="mf">4.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">]})</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># grouping한 내용을 list로 변환</span>
<span class="n">myList</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학과"</span><span class="p">]))</span>  <span class="c"># tuple형태의 list가 생성(group명,DataFrame)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span> <span class="c"># &lt;class 'tuple'&gt;</span>

<span class="k">print</span><span class="p">(</span><span class="n">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span> <span class="c"># 체육교육과</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]))</span> <span class="c"># &lt;class 'pandas.core.frame.DataFrame'&gt;</span>

<span class="c">###</span>

<span class="n">my_list</span> <span class="o">=</span> <span class="p">[(</span><span class="s">'홍길동'</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span> <span class="p">(</span><span class="s">'김길동'</span><span class="p">,</span><span class="mi">30</span><span class="p">),</span> <span class="p">(</span><span class="s">'최길동'</span><span class="p">,</span><span class="mi">50</span><span class="p">)]</span>
<span class="n">my_dict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">my_dict</span><span class="p">)</span>  <span class="c"># {'홍길동': 20, '김길동': 30, '최길동': 50}</span>

<span class="n">myDict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">myList</span><span class="p">)</span> 
<span class="k">print</span><span class="p">(</span><span class="n">myDict</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">myDict</span><span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">])</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-transform</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-10T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-transform</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (DataFrame 생성)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (DataFrame 생성)</span>

<span class="c"># random seed 고정</span>
<span class="c"># [0,10) 사이의 정수형 난수를 균등분포로 추출해서 </span>
<span class="c"># 6행 4열 DataFrame 생성</span>
<span class="c"># cloumn과 index는 따로 지정하지 않는다. (column도 숫자로 표현)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (index와 column 재정의)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (index와 column 재정의)</span>

<span class="c"># column : "A", "B", "C", "D"</span>
<span class="c"># index : 날짜를 이용, 2020-01-01부터 1일씩 증가</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="c"># df.index = pd.date_range("20200101", "20200106")</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (새로운 column 추가)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (새로운 column 추가)</span>

<span class="c"># NaN값을 포함하는 "E" column 추가</span>
<span class="c"># "E" column의 데이터 : [7, np.nan, 4, np.nan, 2, np.nan]</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span>
<span class="c"># NaN은 float로 간주</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (결측값 제거)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (결측값 제거)</span>

<span class="c"># NaN값 제거</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">how</span><span class="o">=</span><span class="s">"any"</span><span class="p">)</span>    
                        <span class="c"># (how="any") =&gt; NaN이 하나라도 포함되어 있는 행 삭제</span>
                        <span class="c"># (how="all") =&gt; 모든 column의 값이 NaN인 행 삭제    </span>
                        <span class="c"># 결과 DataFrame을 return, 원본 변경 X</span>
                        <span class="c"># inplace=True인 경우 원본 변경.</span>
            
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (결측값 대체)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (결측값 대체)</span>

<span class="c"># NaN값을 다른값으로 대체</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
                        <span class="c"># 결과 DataFrame을 return, 원본 변경 X</span>
                        <span class="c"># inplace=True인 경우 원본 변경.</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 조작 (결측값 boolean mask 활용)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 조작 (결측값 boolean mask 활용)</span>

<span class="c"># NaN에 대한 boolean mask활용</span>
<span class="c"># "E" column의 값이 NaN인 행들을 찾아 해당 행의 모든 column 출력</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">isnull</span><span class="p">())</span>  <span class="c"># NaN에 대한 boolean mask</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">isnull</span><span class="p">()[</span><span class="s">"E"</span><span class="p">],:])</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - 중복행 제거</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span><span class="o">=</span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"k1"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="p">[</span><span class="s">"two"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">4</span><span class="p">,</span>
                  <span class="s">"k2"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="p">})</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">duplicated</span><span class="p">())</span>              <span class="c"># Series형태의 boolean mask</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">duplicated</span><span class="p">(),:])</span>  <span class="c"># 중복행 알아내기</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">())</span>       <span class="c"># 중복행 제거</span>

<span class="c">#########</span>

<span class="n">df</span><span class="o">=</span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"k1"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="p">[</span><span class="s">"two"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">4</span><span class="p">,</span>
                  <span class="s">"k2"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="p">})</span>

<span class="n">df</span><span class="p">[</span><span class="s">"k3"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">())</span>             <span class="c"># 삭제되는 행이 없다.</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">([</span><span class="s">"k1"</span><span class="p">]))</span>       <span class="c"># 특정열을 기준으로 중복삭제</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">([</span><span class="s">"k1"</span><span class="p">,</span><span class="s">"k2"</span><span class="p">]))</span>  <span class="c"># keep="first"</span>
<span class="c"># df.drop_duplicates(["k1","k2"], keep="last")  # 중복된 마지막 행을 남긴다.</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - replace</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span><span class="o">-</span><span class="mi">1000</span><span class="p">,</span><span class="mf">3.0</span><span class="p">])</span>

<span class="c"># 이상치를 찾아서 치환</span>
<span class="n">new_s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">new_s</span><span class="p">)</span>

<span class="n">new_s</span> <span class="o">=</span> <span class="n">new_s</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  <span class="c"># new_s.fillna(0)</span>
<span class="k">print</span><span class="p">(</span><span class="n">new_s</span><span class="p">)</span>

<span class="c">######</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">]</span> <span class="c"># NaN은 float로 간주</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span><span class="o">-</span><span class="mi">100</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - category</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Categories 데이터형</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span> <span class="p">{</span><span class="s">"id"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span>
                    <span class="s">"raw_grade"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"e"</span><span class="p">]})</span>
<span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"raw_grade"</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">"category"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">]</span><span class="o">.</span><span class="n">cat</span><span class="o">.</span><span class="n">categories</span><span class="p">)</span>   <span class="c"># category 확인</span>

<span class="n">df</span><span class="p">[</span><span class="s">"grade"</span><span class="p">]</span><span class="o">.</span><span class="n">cat</span><span class="o">.</span><span class="n">categories</span> <span class="o">=</span> <span class="p">[</span><span class="s">"good"</span><span class="p">,</span><span class="s">"normal"</span><span class="p">,</span><span class="s">"bad"</span><span class="p">]</span>  <span class="c"># category 이름 변경</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 새로운 category를 정의 ( category의 수를 증감 )</span>
<span class="c"># df["grade"] = df["grade"].cat.set_categories(["very good", "good","normal","bad", "very bad"])</span>
<span class="c"># display(df)</span>

<span class="c"># category는 정의된 순서에 따라서 대소관계를 가진다.</span>
<span class="n">df</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">"grade"</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 변형 - 숫자데이터의 category</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 숫자데이터의 category화</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">20</span><span class="p">,</span><span class="mi">22</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">61</span><span class="p">,</span><span class="mi">45</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">32</span><span class="p">]</span>
<span class="n">bins</span> <span class="o">=</span> <span class="p">[</span><span class="mi">18</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">35</span><span class="p">,</span><span class="mi">60</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span>   <span class="c"># 숫자값 구분(총 4개의 구간, 초과~이하)</span>

<span class="n">cats</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">ages</span><span class="p">,</span><span class="n">bins</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="o">.</span><span class="n">categories</span><span class="p">)</span> <span class="c"># 생성된 category 확인</span>

<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="o">.</span><span class="n">codes</span><span class="p">)</span>  <span class="c"># category의 숫자화 ( 각 성분의 위치 )</span>

<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="o">.</span><span class="n">value_counts</span><span class="p">())</span>  <span class="c"># 각 category의 count</span>

<span class="c"># 각 category의 이름을 지정</span>
<span class="n">group_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">"young"</span><span class="p">,</span><span class="s">"youngAdult"</span><span class="p">,</span><span class="s">"middleAge"</span><span class="p">,</span><span class="s">"Senior"</span><span class="p">]</span>
<span class="n">cats</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">ages</span><span class="p">,</span><span class="n">bins</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">group_names</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">cats</span><span class="p">)</span>
</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-merge</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-08T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-merge</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - inner join</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># inner join의 효과</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span>
          <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - outer,left,right join</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># full outer join, left outer join, right outer join</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span>
          <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"outer"</span><span class="p">))</span>
<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"left"</span><span class="p">))</span>
<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"right"</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - 컬럼명이 다른 경우</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># 컬럼명이 다른 경우의 merge</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학생학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span>
          <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">)</span>

<span class="c"># DataFrame의 column명이 다른 경우</span>
<span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s">"학생학번"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - column과 index를 이용한 merge</strong></p>

<p>index를 이용한 merge는 결과로 만들어지는 DataFrame의 index에 주의해야 합니다.
DataFrame을 생성한 후 index부분을 살펴보면 이해하실 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># DataFrame의 column과 index를 이용한 merge</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학번"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
          <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span> <span class="c"># 학번이 index로 사용</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> 
                  <span class="n">left_on</span><span class="o">=</span><span class="s">"학번"</span><span class="p">,</span> 
                  <span class="n">right_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                  <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="n">result</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="c"># Error</span>
<span class="n">result</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="c"># OK</span>

<span class="n">result</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="c"># OK</span>
<span class="n">result</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="c"># Error</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame merge - index를 이용한 merge</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame merge</span>

<span class="c"># DataFrame의 index를 이용한 merge</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data1</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지안"</span><span class="p">,</span><span class="s">"박동훈"</span><span class="p">,</span><span class="s">"이순신"</span><span class="p">,</span><span class="s">"강감찬"</span><span class="p">],</span>
          <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]}</span>

<span class="n">data2</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"CS"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"MATH"</span><span class="p">,</span><span class="s">"CS"</span><span class="p">],</span>
          <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">3.4</span><span class="p">,</span><span class="mf">2.9</span><span class="p">,</span><span class="mf">4.5</span><span class="p">,</span><span class="mf">1.2</span><span class="p">]}</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data1</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span> <span class="c"># 학번이 index로 사용</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data2</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span> <span class="c"># 학번이 index로 사용</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> 
                  <span class="n">left_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                  <span class="n">right_index</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                  <span class="n">how</span><span class="o">=</span><span class="s">"inner"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="n">result</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>  <span class="c"># OK, 강감찬</span>
<span class="n">result</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>  <span class="c"># OK, 박동훈</span>
<span class="c"># result.loc[3]   # Error</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame concatenation-Series 연결</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># DataFrame concatenation</span>

<span class="c"># Series를 1차원, 2차원으로 연결</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">s1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"c"</span><span class="p">])</span>
<span class="n">s2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"e"</span><span class="p">])</span>
<span class="n">s3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"f"</span><span class="p">,</span><span class="s">"g"</span><span class="p">])</span>

<span class="c"># Series를 1차원으로 연결</span>
<span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">s3</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>

<span class="c"># Series를 2차원으로 연결 =&gt; DataFrame생성</span>

<span class="c"># 중복된 index처리에 주의</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">s3</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>  <span class="c"># index 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c"># Series를 2차원으로 연결 후 columns명 설정</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">s3</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
                   <span class="n">keys</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame concatenation-DataFrame 연결</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame concatenation</span>

<span class="c"># DataFrame을 열과 행 방향으로 연결</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span>
                   <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"b"</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">])</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span>
                   <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="c"># DataFrame의 concatenate</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>  <span class="c"># index 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c"># DataFrame의 concatenate ( index를 새로 설정 )</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">],</span> 
                   <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> 
                   <span class="n">ignore_index</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> 
                   <span class="n">sort</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span> <span class="c"># column 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-functions</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-07T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-functions</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">## 기댓값(expected value) : 어떤 확률을 가진 사건을 무한히 반복했을 경우 </span>
<span class="c">##                         얻을 수 있는 값의 평균으로서 기대할 수 있는 값</span>

<span class="c"># 주사위 1개를 던지는 사건을 무한히 반복했을 경우 기댓값은?</span>
<span class="c"># import numpy as np</span>

<span class="c"># result = np.random.randint(1,7,(100000,))</span>
<span class="c"># print(result.mean())</span>

<span class="c">## 편차( deviation ) : 확률변수 X와 평균값(기댓값)의 차이. </span>
<span class="c">## 국민개개인의 소득을 이용하여 국민평균 소득을 산출한 후 </span>
<span class="c">## 편차의 관점에서 데이터를 바라보면 얼마나 양극화가 진행됬는지</span>
<span class="c">## 대략 가늠할 수 있다.</span>
<span class="c">## 데이터의 흩어진 정도를 알기 위해 편차의 평균을 이용하면 될 듯 하다. </span>
<span class="c">## 하지만 편차의 합계는 0이기 때문에 평균을 구할 수 없고</span>
<span class="c">## 결국 데이터의 흩어진 정도를 수치화 하기 힘들다.</span>

<span class="c">## 분산 ( variance ) : 데이터의 흩어진 정도를 알기 위해 사용하는 편차의 제곱의 평균.</span>
<span class="c">## 하지만 제곱한 값이기 때문에 사용하기 애매하다.</span>

<span class="c">## 표준편차 ( standard deviation ) : 분산의 제곱근</span>
<span class="c">## 데이터가 얼마나 흩어져 있는지, 얼마나 차이가 심한지를 알 수 있음.</span>

<span class="c"># 평균, 편차, 분산, 표준편차</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"합계 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="nb">sum</span><span class="p">()))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"평균 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">mean</span><span class="p">()))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"분산 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">var</span><span class="p">()))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"표준편차 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">std</span><span class="p">()))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 공분산</strong></p>

<p><img src="/assets/built/images/covariance-formula.png" alt="공분산" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">## 공분산 ( covariance ) : 두 개의 확률변수의 관계를 보여주는 값</span>
<span class="c">## 확률변수 X(독립변수)와 Y(종속변수)에 대해 X가 변할 때 Y가 변하는 정도를 나타내는 값</span>

<span class="c">## 공분산은 두 확률변수 편차의 곱에 대한 평균으로 이 역시</span>
<span class="c">## 데이터가 평균으로 부터 얼마나 떨어져 있는가를 나타낸 값.</span>

<span class="c">## 그래프를 이용하여 공분산의 의미를 이해해보자.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c"># 독립변수 X에 대해 종속변수 Y의 값을 랜덤하게 구해보자</span>
<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span><span class="p">,</span><span class="mi">20</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))</span>

<span class="n">x_mean</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">y_mean</span> <span class="o">=</span> <span class="n">y</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

<span class="c"># 이렇게 구한 값을 산점도로 표현해보자</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">"red"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x_mean</span><span class="p">,</span><span class="n">y_mean</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">"blue"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c"># x가 변할 때 y가 어떻게 변하는지를 확인할 수 있다.</span>
<span class="c"># 평균을 기준으로 1,3 사분면에 있는 점들은 x가 증가할 때 y가 증가하거나</span>
<span class="c">#                                          x가 감소할 때 y가 감소</span>
<span class="c"># 평균을 기준으로 2,4 사분면에 있는 점들은 x가 증가할 때 y가 감소하거나</span>
<span class="c">#                                          x가 감소할 때 y가 증가</span>

<span class="c"># 공분산은 이런 데이터의 변화량에 대한 총합</span>
<span class="c"># 따라서 공분산이 양수인지 음수인지에 따라 데이터의 방향성을 알 수 있다.</span>
<span class="c"># 다만, 단위의 문제 때문에 실제 어느정도의 연관성을 가지는지에 대한 내용은</span>
<span class="c"># 알 수 없다.</span>

<span class="c">## 모공분산은 두 확률변수 각각의 편차의 곱에 대한 평균으로 표현되고</span>
<span class="c">## 표준공분산은 두 확률변수 각각의 편차의 곱에 대한 합을 n-1로 나눠 계산한다.</span>
<span class="c">## 표준공분산이 n-1로 나누는 이유는 이렇게 해야 더 좋은 추정량이 되기 때문이다. </span>
   
<span class="c">## 만약 확률변수 X와 Y가 서로 아무 관련이 없는 독립이면 공분산은 0으로 수렴된다.</span>
<span class="c">## 방향성이 없이 랜덤하게 무수하게 많은 샘플에 대해 값을 계산하게 되면 결국 양수,음수가</span>
<span class="c">## 번갈아 나오게 되서 최종적으로 0과 가까워진다.</span>

<span class="c">## 일반적으로 역은 성립하지 않는다. 즉, X와 Y가 독립이 아니더라도</span>
<span class="c">## 공분산은 0이 될 수 있다.</span>
      
<span class="c">## 표준공분산의 공식을 이용하여 프로그램으로 두 확률변수간의 공분산을 계산해보자</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">sampleNum</span> <span class="o">=</span> <span class="mi">100</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="n">sampleNum</span><span class="p">,))</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,(</span><span class="n">sampleNum</span><span class="p">,))</span>

<span class="n">x_mean</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>   <span class="c"># x의 평균</span>
<span class="n">y_mean</span> <span class="o">=</span> <span class="n">y</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>   <span class="c"># y의 평균</span>

<span class="n">x_deviation</span> <span class="o">=</span> <span class="n">x</span><span class="o">-</span><span class="n">x_mean</span><span class="p">;</span> 
<span class="n">y_deviation</span> <span class="o">=</span> <span class="n">y</span><span class="o">-</span><span class="n">y_mean</span><span class="p">;</span> 

<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sampleNum</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">+=</span> <span class="p">(</span><span class="n">x_deviation</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">y_deviation</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    
<span class="n">result_covariance</span> <span class="o">=</span> <span class="n">result</span> <span class="o">/</span> <span class="p">(</span><span class="n">sampleNum</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>  <span class="c"># 표준공분산(n-1)</span>
<span class="k">print</span><span class="p">(</span><span class="n">result_covariance</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">))</span>   <span class="c"># numpy의 함수를 이용하여 계산   </span>
   
<span class="c">## 2개의 확률 변수 중 하나의 값이 상승하는 경향을 보일 때, </span>
<span class="c">## 다른 값도 상승하는 경향의 관계에 있다면, 공분산의 값은 양수. </span>
<span class="c">## ( 그렇지 않은 경우 음수 )</span>
   
<span class="c">## 하지만 가장 큰 단점은 측정단위에 따라서 값이 달라진다는 것. </span>
<span class="c">## 즉, 두 변수가 얼마나 연관되었는지 그 강도(strength)를 잘 보여주지 못하는 경향이 있다.    </span>
<span class="c">## 측정 단위에 상관없이 두 변수 사이의 관계를 보여주는 값으로는 상관계수를 사용</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 공분산(예제)</strong></p>

<p><a href="/assets/downloads/2018_stock.zip" target="_blank">2018년 주식데이터 JSON</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 공분산이 양수인 경우 ( KOSPI 지수와 삼성전자 주가 )</span>
<span class="c"># 2020년 2월 기준 코스피200 지수 내 삼성전자의 비중은 33.24%</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">pandas_datareader.data</span> <span class="k">as</span> <span class="n">pdr</span> <span class="c"># 설치필요</span>
<span class="kn">from</span>  <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>

<span class="n">start</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="c"># 특정날짜 객체 생성</span>
<span class="n">end</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">31</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 KOSPI 지수</span>
<span class="n">df_KOSPI</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"^KS11"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_KOSPI</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/KOSPI.json"</span><span class="p">)</span>

<span class="c"># json 파일의 날짜값은 timestamp를 이용한다.</span>
<span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="n">timestamp</span> <span class="o">=</span> <span class="mi">1514937600000</span>
<span class="n">datetime_obj</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">fromtimestamp</span><span class="p">(</span><span class="n">timestamp</span><span class="o">/</span><span class="mi">1000</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">datetime_obj</span><span class="p">)</span> <span class="c"># 2018-01-03 09:00:00</span>

<span class="c"># YAHOO에서 제공하는 삼성전자 주가</span>
<span class="n">df_SE</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"005930.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_SE</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/SE.json"</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 부산산업 지수</span>
<span class="n">df_BUSAN</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"011390.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_BUSAN</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/부산산업.json"</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 LIG넥스원 주가</span>
<span class="n">df_LIG</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"079550.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
<span class="n">df_LIG</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="s">"./data/LIG넥스원.json"</span><span class="p">)</span>

<span class="n">df_close_KOSPI</span> <span class="o">=</span> <span class="n">df_KOSPI</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># 종가데이터</span>
<span class="n">df_close_SE</span> <span class="o">=</span> <span class="n">df_SE</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">df_close_KOSPI</span><span class="o">.</span><span class="n">values</span><span class="p">,</span><span class="n">df_close_SE</span><span class="o">.</span><span class="n">values</span><span class="p">))</span>  <span class="c"># 공분산</span>
<span class="c"># 0행 0열 : KOSPI의 공분산</span>
<span class="c"># 0행 1열 : KOSPI와 SE의 공분산</span>
<span class="c"># 1행 0열 : SE와 KOSPI의 공분산</span>
<span class="c"># 1행 1열 : SE의 공분산</span>

<span class="n">df_close_BUSAN</span> <span class="o">=</span> <span class="n">df_BUSAN</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># 종가데이터</span>
<span class="n">df_close_LIG</span> <span class="o">=</span> <span class="n">df_LIG</span><span class="p">[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">df_close_BUSAN</span><span class="p">,</span><span class="n">df_close_LIG</span><span class="p">))</span>  <span class="c"># 공분산</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 상관계수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">## 상관관계 (Correlation) : 두 대상이 서로 연관성이 있다고 추측되는 관계</span>
<span class="c">## 성적과 자존감</span>
<span class="c">## 온라인 게임과 폭력성</span>

<span class="c">## 상관계수 (Correlation Coefficient) : -1과 1사이의 실수.</span>

<span class="c">## 일반적으로 피어슨 상관계수를 의미하며 다른 상관계수도 존재한다.</span>
<span class="c">## 공분산을 각 변수의 표준편차의 곱으로 나눈값 </span>
<span class="c">## 하나의 변수가 변화할 때 다른 변수가 변화하는 정도를 의미</span>
<span class="c">## 양수일 경우 정적 상관관계, 음수일 경우 부적상관관계</span>

<span class="c">## 0에 가까울수록 관련성이 없음. 절대값이 1에 가까울수록 관련성이 높음.</span>
<span class="c">## 성적과 자존감의 상관계수가 0.8이면 성적이 높을수록 자존감이 높다고 추측</span>
   
<span class="c">## 단, 상관관계로 인과관계를 설명할 수 없음 (오류의 여지가 많음 )</span>
<span class="c">## 성적이 높기때문에 자존감이 높다 ??</span>
<span class="c">## 온라인게임을 많이하면 폭력적이된다 ??</span>

<span class="c">## 인과관계와 같이 한 변수가 다른 변수에 주는 영향력을 알아보기 위해서는</span>
<span class="c">## 회귀 분석(regression analysis)를 사용한다.</span>

<span class="c">## Network연결이 가능한 환경이라면 아래의 참고 코드를 이용하여 </span>
<span class="c">## 특정 종목의 종목코드를 알아와서 pandas_datareader를 이용하여</span>
<span class="c">## 특정기간의 주가를 알아와서 상관계수를 구할 수 있다.</span>

<span class="c">## 만약 Network연결이 안되는 환경이라면 제공된 JSON파일을</span>
<span class="c">## 읽어들여서 DataFrame을 생성한 후 상관계수를 구해보자.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="n">file_KOSPI</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/KOSPI.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_KOSPI</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_KOSPI</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span>  <span class="c"># Series</span>

<span class="n">file_SE</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/SE.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_SE</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_SE</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># Series</span>

<span class="n">file_LIG</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/LIG넥스원.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_LIG</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_LIG</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># Series</span>

<span class="n">file_PUSAN</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"C:/notebook_dir/data/부산산업.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">)</span>
<span class="n">series_PUSAN</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">file_PUSAN</span><span class="p">))[</span><span class="s">"Close"</span><span class="p">]</span> <span class="c"># Series</span>

<span class="c"># NumPy 함수로 상관계수를 구해보자.</span>
<span class="n">np</span><span class="o">.</span><span class="n">corrcoef</span><span class="p">(</span><span class="n">series_KOSPI</span><span class="p">,</span><span class="n">series_SE</span><span class="p">)</span>

<span class="c"># 위에서 구한 Series를 이용해 DataFrame을 생성</span>
<span class="n">myDict</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"KOSPI"</span> <span class="p">:</span> <span class="n">series_KOSPI</span><span class="p">,</span>
           <span class="s">"SE"</span> <span class="p">:</span> <span class="n">series_SE</span><span class="p">,</span>
           <span class="s">"LIG넥스원"</span> <span class="p">:</span> <span class="n">series_LIG</span><span class="p">,</span>
           <span class="s">"부산산업"</span> <span class="p">:</span> <span class="n">series_PUSAN</span><span class="p">}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">myDict</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">corr</span><span class="p">())</span>   <span class="c"># DataFrame을 이용한 상관계수 계산</span>

<span class="c">#####################################</span>

<span class="c"># 참고코드</span>
<span class="c"># 외부 API를 이용해 KOSPI 전체 종목코드를 읽어온 후</span>
<span class="c"># 종목명으로 종목코드를 검색하는 코드.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c"># 전체 종목코드를 읽어온다.(네트워크 연결가능할 경우)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_html</span><span class="p">(</span><span class="s">"http://kind.krx.co.kr/corpgeneral/corpList.do"</span> <span class="o">+</span> \
                  <span class="s">"?method=download&amp;searchType=13"</span><span class="p">,</span> 
                  <span class="n">header</span><span class="o">=</span><span class="mi">0</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

<span class="c"># JSON 파일로 저장</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/전체종목코드.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">"columns"</span><span class="p">)</span> 

<span class="c"># 종목명으로 종목코드 검색</span>
<span class="n">title</span> <span class="o">=</span> <span class="s">"LG화학"</span>  <span class="c"># 종목명</span>
<span class="n">code</span> <span class="o">=</span> <span class="s">"종목코드"</span>   <span class="c"># 종목코드</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[:,[</span><span class="s">"회사명"</span><span class="p">,</span><span class="s">"종목코드"</span><span class="p">]]</span> <span class="c"># 회사명과 종목코드만 추출</span>

<span class="c"># map() : Series에서만 사용, 사용자 정의함수 호출</span>
<span class="n">df</span><span class="p">[</span><span class="s">"종목코드"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"종목코드"</span><span class="p">]</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="s">'{:06d}'</span><span class="o">.</span><span class="n">format</span><span class="p">)</span> <span class="c"># 종목코드 6자리로 변환</span>

<span class="n">code</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"회사명"</span><span class="p">]</span> <span class="o">==</span> <span class="n">title</span><span class="p">,</span><span class="s">"종목코드"</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="s">"종목명 : {}, 종목코드 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">title</span><span class="p">,</span><span class="n">code</span><span class="p">))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - 상관계수 실습</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 주식데이터 생성</span>

<span class="c"># 공분산과 상관계수(피어슨 상관계수 공식이용)</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">pandas_datareader.data</span> <span class="k">as</span> <span class="n">pdr</span> <span class="c"># 설치필요</span>
<span class="kn">import</span> <span class="nn">datetime</span>

<span class="n">start</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="c"># 특정날짜 객체 생성</span>
<span class="n">end</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">31</span><span class="p">)</span>

<span class="c"># YAHOO에서 제공하는 LG전자 주가 데이터 중 종가</span>
<span class="n">LG</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"066570.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="c"># YAHOO에서 제공하는 롯데쇼핑 주가 데이터 중 종가</span>
<span class="n">LOTTE</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"023530.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)[</span><span class="s">"Close"</span><span class="p">]</span>
<span class="c"># YAHOO에서 제공하는 삼성전자 주가 데이터 중 종가</span>
<span class="n">SE</span> <span class="o">=</span> <span class="n">pdr</span><span class="o">.</span><span class="n">DataReader</span><span class="p">(</span><span class="s">"005930.KS"</span><span class="p">,</span> <span class="s">"yahoo"</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">)[</span><span class="s">"Close"</span><span class="p">]</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s">"LG"</span> <span class="p">:</span> <span class="n">LG</span> <span class="p">,</span> <span class="s">"LOTTE"</span> <span class="p">:</span> <span class="n">LOTTE</span><span class="p">,</span> <span class="s">"SE"</span> <span class="p">:</span> <span class="n">SE</span> <span class="p">})</span>
<span class="k">print</span><span class="p">(</span><span class="s">"LG전자와 삼성전자의 공분산 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LG"</span><span class="p">]</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"SE"</span><span class="p">])))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"LG전자와 삼성전자의 상관계수 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LG"</span><span class="p">]</span><span class="o">.</span><span class="n">corr</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"SE"</span><span class="p">])))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"LG전자와 롯데쇼핑의 상관계수 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LG"</span><span class="p">]</span><span class="o">.</span><span class="n">corr</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"LOTTE"</span><span class="p">])))</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">cov</span><span class="p">())</span>    <span class="c"># DataFrame안의 모든 컬럼에 대한 공분산</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">corr</span><span class="p">())</span>   <span class="c"># DataFrame안의 모든 컬럼에 대한 상관계수</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - sum, mean</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 분석용 함수 (Sample DataFrame 생성)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">2</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>
        <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">],</span>
        <span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">]</span>
       <span class="p">]</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">],</span>
                  <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"d"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>   <span class="c"># df.sum(axis=0)</span>
                  <span class="c"># skipna=True (default) =&gt; NaN은 제외</span>
                  <span class="c"># Series return</span>
                  
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>    <span class="c"># 특정 열에 대한 합</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"b"</span><span class="p">]</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>  <span class="c"># 특정 행에 대한 합</span>

 <span class="n">skipna</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">NaN</span><span class="err">을</span> <span class="err">연산에</span> <span class="err">포함</span><span class="p">(</span><span class="err">실수처리</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">skipna</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>
             
<span class="c">#  skipna=True, NaN을 연산에서 배제    </span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">skipna</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
                                                    
<span class="c"># "one" column의 결측값은 "one" column의 평균으로</span>
<span class="c"># "two" column의 결측값은 "two" column의 최소값으로 대체</span>
<span class="n">one_avg</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span> <span class="c"># df.mean(axis=0)["one"]</span>
<span class="n">two_min</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span><span class="o">.</span><span class="nb">min</span><span class="p">()</span>  <span class="c"># df.min(axis=0)["two"]</span>

<span class="n">df</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="n">one_avg</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"two"</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="n">two_min</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>       

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - sort</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame index와 column 재 설정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>   <span class="c"># 숫자 index사용, column명도 숫자 index처리</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c"># 순열 랜덤 치환</span>
<span class="n">random_date</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">permutation</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">)</span>  
<span class="k">print</span><span class="p">(</span><span class="n">random_date</span><span class="p">)</span>
<span class="c"># np.random.shuffle(df.index)</span>
<span class="c"># shuffle()을 못쓰는 이유는 Index는 mutable opertion을 지원하지 않기때문.</span>

<span class="c"># index와 column이 재 설정된 DataFrame 생성</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">reindex</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="n">random_date</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"B"</span><span class="p">,</span><span class="s">"A"</span><span class="p">,</span><span class="s">"D"</span><span class="p">,</span><span class="s">"C"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="p">)</span>

<span class="c">## axis 기준으로 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">sort_index</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="c"># axis=0 : 행(row) 기준 정렬</span>
<span class="c"># axis=1 : 열(column) 기준 정렬</span>
<span class="c"># ascending=Flase : 내림차순 정렬</span>

<span class="c">## 특정 column의 값으로 행 정렬</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">"B"</span><span class="p">))</span>

<span class="c"># "B"값이 같을 때 "A"로 정렬(2차정렬)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="s">"B"</span><span class="p">,</span><span class="s">"A"</span><span class="p">]))</span>   

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 - unique, value_counts, isin</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 유용한 함수들</span>

<span class="c"># unique(), value_counts(), isin()</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"AA"</span><span class="p">,</span><span class="s">"BB"</span><span class="p">,</span><span class="s">"CC"</span><span class="p">,</span><span class="s">"CC"</span><span class="p">,</span><span class="s">"AA"</span><span class="p">,</span><span class="s">"CC"</span><span class="p">]</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>          <span class="c"># 중복제거(ndarray)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">())</span>    <span class="c"># 각 값들의 개수 return(Series)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"E"</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">([</span><span class="s">"AA"</span><span class="p">,</span><span class="s">"BB"</span><span class="p">]))</span> <span class="c"># boolean indexing(Series) </span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 분석용 함수 (lambda 함수)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame 유용한 함수들</span>

<span class="c"># python에서 배운 lambda 함수를 DataFrame의 행, 열에 apply()를 통해 적용</span>
<span class="c"># 각 행의 column에 대해 최대값 - 최소값을 구해 새로운 column을 추가</span>
<span class="c"># 각 column안에서 최대값 - 최소값을 구해 출력</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)))</span>

<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"C"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">"20200101"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">func</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="nb">max</span><span class="p">()</span> <span class="o">-</span> <span class="n">x</span><span class="o">.</span><span class="nb">min</span><span class="p">()</span>

<span class="n">df</span><span class="p">[</span><span class="s">"최대-최소"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>  <span class="c"># Series return</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-indexing</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-05T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-indexing</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 특정 column 추출 (1)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column을 추출할 수 있다.</span>

<span class="c"># 하나의 column을 추출한 경우 Series로 return</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"이름"</span><span class="p">])</span>       
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"이름"</span><span class="p">]))</span> <span class="c"># 결과는 Series로 return</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="err">이름</span><span class="p">)</span>  <span class="c"># df["이름"] 방식을 더 많이 사용.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 특정 column 추출 (2)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column을 추출한 후 </span>
<span class="c"># 데이터를 변경하면 원본 DataFrame에도 영향을 미친다.</span>

<span class="c"># python에서 warning message를 on,off할 수 있다.</span>

<span class="kn">import</span> <span class="nn">warnings</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="s">'ignore'</span><span class="p">)</span>   <span class="c"># warning off</span>
<span class="c"># warnings.filterwarnings(action='default') # warning on</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">year</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학년"</span><span class="p">]</span>    <span class="c"># View가 아닌 복사본을 생성하려면 df["학년"].copy() 이용</span>

<span class="n">year</span><span class="p">[</span><span class="s">"one"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1000</span>   <span class="c"># Series의 내용을 변경(View의 내용변경)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학년"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>          <span class="c"># DataFrame의 내용도 변경</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 2개 이상의 column 추출</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 두개 이상의 column을 추출할 수 있다.</span>
<span class="c"># Fancy Indexing을 사용.</span>

<span class="c"># 두개 이상의 column을 추출한 경우 Series가 아닌</span>
<span class="c"># DataFrame으로 결과 return</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># print(df["names","year"])     # Error</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]])</span>  <span class="c"># Fancy Indexing</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 특정 column 값 수정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column의 값 수정</span>

<span class="c"># 단일값 혹은 numpy array 혹은 list를 이용하여 수정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"등급"</span><span class="p">]</span> <span class="o">=</span> <span class="s">"A"</span>   
<span class="c"># df["등급"] = ["A","B","D","B","A"] </span>
<span class="c"># df["등급"] = np.array(["A","B","D","C","C"])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 두 개 이상의 특정 column 값 수정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 두개 이상의 특정 column 값 수정</span>

<span class="c"># 단일값 혹은 numnpy array 혹은 list를 이용하여 수정</span>

<span class="c"># 참고</span>
<span class="c"># DataFrame의 column을 Fancy Indexing한 후 value들만</span>
<span class="c"># ndarray로 추출하려면 to_numpy() 함수 사용.</span>
<span class="c"># df[["grade","names"]].to_numpy() # numpy array로 변환</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">df</span><span class="p">[[</span><span class="s">"등급"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">]]</span> <span class="o">=</span> <span class="s">"A"</span>   
<span class="c"># df[["등급","이름"]] = [["A","최길동"],</span>
<span class="c">#                        ["B","이길동"],</span>
<span class="c">#                        ["D","박길동"],</span>
<span class="c">#                        ["B","박길동"],</span>
<span class="c">#                        ["A","문길동"]</span>
<span class="c">#                       ]</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]]</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame column 추가</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 기존에 생성된 DataFrame에 column을 추가할 수 있다. </span>

<span class="c"># scalar, numpy array, list, Series 등을 이용해 추가</span>

<span class="c"># Series로 추가할 경우 index를 기반으로 추가!!</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">df</span><span class="p">[</span><span class="s">"등급"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s">"나이"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">20</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">22</span><span class="p">]</span>

<span class="c"># df["나이"] = [20,21,25,24] # Error(개수가 맞지 않음)</span>

<span class="c"># age = pd.Series([20,21,25,24,22])</span>
<span class="c"># df["나이"] = age    # 추가되는 내용 없음 (index 기반)</span>

<span class="c"># age = pd.Series([20,21,25], index=["one","two","three"])</span>
<span class="c"># df["나이"] = age  # matching되지 못한 index는 NaN</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 연산을 통한 column 추가</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 기존에 생성된 DataFrame에 연산을 통해 column을 추가할 수 있다. </span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">*</span> <span class="mi">2</span>
<span class="n">df</span><span class="p">[</span><span class="s">"장학여부"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">3.0</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame에서 column 삭제</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 특정 column 삭제</span>

<span class="c"># drop() 이용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">"등급"</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span> <span class="c"># inplace=True 원본 변경</span>
                                                 <span class="c"># return None</span>
                                                 <span class="c"># inplace=False 원본 변경 X</span>
                                                 <span class="c"># 삭제된 DataFrame return  </span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (1)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 Row(행) Indexing</span>

<span class="c"># 숫자 index 이용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># Column indexing</span>
<span class="c"># df["이름"]           # OK. Series return</span>
<span class="c"># df["이름":"학년"]    # Error. Slicing 불가능</span>
<span class="c"># df[["이름","학점"]]  # OK. Fancy indexing 가능</span>
                       <span class="c"># 참고로 Boolean Indexing은 Row Indexing 처리</span>

<span class="c"># Row indexing(index 숫자사용)   </span>
<span class="c"># df[1]               # Error. 단일 indexing이 안된다.</span>
<span class="c"># df[1:3]             # OK. slicing 가능 - slicing한 결과는 View</span>
<span class="c"># df[2:]              # OK. 일반적인 slicing가능(row)</span>
<span class="c"># df[[1,3]]           # Error. row에 대한 index숫자를 이용한 Fancy indexing은 안됨.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (2)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 row indexing</span>

<span class="c"># 지정한 index 이용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df["one"]           # Error. index를 이용해서 단일 row 추출 안됨</span>
<span class="c"># df["one":"three"]   # OK. index를 이용한 row slicing가능</span>
<span class="c"># df["one":]          # OK. 일반적인 slicing이기 때문에 가능  </span>
<span class="c"># df["two":-1]        # Error. 숫자 index와 index를 혼합사용한 slicing안됨. </span>
<span class="c"># df[["one","two"]]   # Error. </span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (3)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 row indexing</span>

<span class="c"># loc[]를 이용 (일반적인 row indexing 방법)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df.loc["one"]           # OK. loc와 index를 이용하면 단일 row 추출 가능. </span>
                          <span class="c"># 결과는 Series</span>
<span class="c"># df.loc["one":"three"]   # OK. loc를 index를 이용하면 row slicing가능.</span>
<span class="c"># df.loc["one":]          # OK. loc를 index를 이용하면 row slicing가능.</span>
<span class="c"># df.loc["one":-1]        # Error. index 혼합 사용은 안됨.</span>
<span class="c"># df.loc[["one","three"]] # OK. loc와 index를 이용한 fancy indexing 가능.</span>

<span class="c"># loc와 숫자 index를 이용하는 방법은 모두 Error</span>
<span class="c"># 숫자 index를 이용할때는 iloc를 이용</span>
<span class="c"># df.loc[0]               # Error. loc와 숫자 index를 이용한 단일 row 추출 안됨.</span>
<span class="c"># df.loc[0:3]             # Error. loc와 숫자 index를 이용한 slicing 안됨.</span>
<span class="c"># df.loc[[0,3]]           # Error. loc와 숫자 index를 이용한 fancy indexing 안됨.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row indexing (4)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 row indexing</span>

<span class="c"># loc[]를 이용, 특정 행과 열 slicing</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df.loc["one":"three"]                   # OK. row slicing</span>
<span class="c"># df.loc["one":"three","이름"]            # OK. row slicing + column 선택 =&gt; Series 리턴</span>
<span class="c"># df.loc["one":"three","이름":"학년"]     # OK. row slicing + column slicing</span>
<span class="c"># df.loc["one":"three",:]                 # OK. row slicing + column slicing</span>
<span class="c"># df.loc["one":"three",["이름","학점"]]   # OK. row slicing + column fancy slicing</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame boolean indexing</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame에서 boolean mask 생성 후 </span>

<span class="c"># loc를 이용한 boolean indexing 처리</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># 학점이 1.5점을 초과하는 학생의 이름과 학점을 DataFrame으로 출력!</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">1.5</span><span class="p">)</span>     <span class="c"># boolean MASK, Series로 return</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">1.5</span><span class="p">,</span> <span class="p">[</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]])</span> 

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame boolean indexing 응용</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame boolean indexing 응용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># 이름이 "박동훈"인 사람을 찾아 이름과 학점을 DataFrame으로 출력</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"이름"</span><span class="p">]</span> <span class="o">==</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="p">[</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">]])</span>

<span class="c"># 학점이 (1.5,2.5)인 사람을 찾아 학과,이름,학점을 DataFrame으로 출력</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mf">2.5</span><span class="p">)</span> <span class="p">,</span> <span class="s">"학과"</span><span class="p">:</span><span class="s">"학점"</span><span class="p">])</span>

<span class="c"># 학점이 3.0을 초과하는 사람을 찾아 등급을 "A"로 설정하세요.</span>
<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">3.0</span><span class="p">,</span> <span class="s">"등급"</span><span class="p">]</span> <span class="o">=</span> <span class="s">"A"</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame iloc를 이용한 row indexing</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame iloc를 이용한 row indexing</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="c"># df.iloc[1]           # OK. index 숫자를 이용해 단일 행 선택가능.</span>
<span class="c"># df.iloc[1:4]         # OK. index 숫자를 이용해 row slicing가능</span>
<span class="c"># df.iloc[1:4,0:2]     # OK. index 숫자를 이용해 row slicing + column slicing가능</span>
<span class="c"># df.iloc[1:4,[0,2]]   # OK. index 숫자를 이용해 row slicing + column fancy indexing가능</span>
<span class="c"># df.iloc[[1,4],[0,2]] # OK. index 숫자를 이용해 row fancy indexing +</span>
                       <span class="c">#     column fancy indexing가능</span>
<span class="c"># df.iloc[0,0]         # OK. 특정 위치의 값 도출</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row 추가</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># loc를 이용한 DataFrame의 row 추가</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"six"</span><span class="p">,:]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span><span class="s">"최길동"</span><span class="p">,</span><span class="mf">3.1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s">"A"</span><span class="p">]</span> <span class="c"># index에 없기때문에 add</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"seven"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">:</span><span class="s">"학점"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"박길동"</span><span class="p">,</span><span class="mf">3.1</span><span class="p">]</span> <span class="c"># index에 없기때문에 add</span>
<span class="c"># df.loc["seven",["이름","등급"]] = ["박길동","A"] # Fancy indexing도 가능</span>

<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s">"seven"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">:]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"이길동"</span><span class="p">,</span><span class="mf">3.1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s">"A"</span><span class="p">]</span>  <span class="c"># index에 존재하면 replace</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame row 삭제</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame row 삭제</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">"학년"</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c"># inplace=False, 열 삭제, 원본 변경 X</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">"one"</span><span class="p">)</span> <span class="c"># inplace=False, 행 삭제(axis=0), 원본 변경 X</span>
                        <span class="c"># df.drop("one123") key를 못 찾으면 Error</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="c"># Fancy indexing 사용 가능</span>
<span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">"one"</span><span class="p">,</span><span class="s">"three"</span><span class="p">])</span> <span class="c"># inplace=False, 행 삭제(axis=0), 원본 변경 X</span>
<span class="n">display</span><span class="p">(</span><span class="n">new_df</span><span class="p">)</span>

<span class="c"># slicing으로는 삭제 안됨.</span>
<span class="c"># new_df = df.drop("one":"three") # slicing 삭제는 Error</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-dataframe-basic</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-04T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-dataframe-basic</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 생성</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># pandas DataFrame 생성 (Dictionary이용)</span>

<span class="c"># 데이터의 개수가 맞지 않으면 DataFrame생성 시 Error</span>
<span class="c"># dictionary의 key가 DataFrame의 column명으로 사용</span>
<span class="c"># DataFrame은 Series의 집합으로 구성(Series가 DataFrame의 각각의 column에 해당)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"names"</span> <span class="p">:</span> <span class="p">[</span> <span class="s">"아이유"</span><span class="p">,</span> <span class="s">"김연아"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"이순신"</span><span class="p">],</span>
        <span class="s">"year"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2016</span><span class="p">,</span> <span class="mi">2015</span><span class="p">,</span> <span class="mi">2017</span><span class="p">,</span> <span class="mi">2016</span><span class="p">],</span>
        <span class="s">"point"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]</span> <span class="p">}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"shape : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span> <span class="c"># shape : (5, 3)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"size : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">size</span><span class="p">))</span> <span class="c"># size : 15</span>
<span class="k">print</span><span class="p">(</span><span class="s">"ndim : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">ndim</span><span class="p">))</span> <span class="c"># dimension : 2</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span> <span class="c"># print(df)보다는 display(df)를 사용</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 index, columns, values</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 index, columns, values</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"names"</span> <span class="p">:</span> <span class="p">[</span> <span class="s">"아이유"</span><span class="p">,</span> <span class="s">"김연아"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"이순신"</span><span class="p">],</span>
        <span class="s">"year"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2016</span><span class="p">,</span> <span class="mi">2015</span><span class="p">,</span> <span class="mi">2017</span><span class="p">,</span> <span class="mi">2016</span><span class="p">],</span>
        <span class="s">"point"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]</span> <span class="p">}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"index : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">))</span>     <span class="c"># RangeIndex(start=0, stop=5, step=1)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"index type : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">)))</span>  <span class="c">#  &lt;class 'pandas.core.indexes.range.RangeIndex'&gt;</span>
<span class="k">print</span><span class="p">(</span><span class="s">"columns : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">))</span> <span class="c"># Index(['names', 'year', 'point'], dtype='object')</span>
<span class="k">print</span><span class="p">(</span><span class="s">"columns type : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">)))</span> <span class="c"># &lt;class 'pandas.core.indexes.base.Index'&gt;</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>     <span class="c"># 2차원 numpy array</span>

<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">values</span><span class="p">))</span> <span class="c"># &lt;class 'numpy.ndarray'&gt;</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 index와 column에 이름 지정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame의 index와 column에 이름 지정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"names"</span> <span class="p">:</span> <span class="p">[</span> <span class="s">"아이유"</span><span class="p">,</span> <span class="s">"김연아"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"이순신"</span><span class="p">],</span>
        <span class="s">"year"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2016</span><span class="p">,</span> <span class="mi">2015</span><span class="p">,</span> <span class="mi">2017</span><span class="p">,</span> <span class="mi">2016</span><span class="p">],</span>
        <span class="s">"point"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]</span> <span class="p">}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"sNum"</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"sInfo"</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">CSV 파일을 이용한 DataFrame 생성 (1)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># CSV 파일을 이용한 DataFrame 생성</span>

<span class="c"># ","로 구분된 CSV파일을 이용하여 DataFrame을 생성</span>
<span class="c"># 파일의 1행의 내용으로 column 설정</span>

<span class="c"># student.csv</span>
<span class="s">"""
이름,입학연도,성적
아이유,2015,1.5
김연아,2016,2.0
홍길동,2015,3.1
강감찬,2017,1.1
이순신,2016,2.7
"""</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"./data/student.csv"</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">CSV 파일을 이용한 DataFrame 생성 (2)</strong></p>

<p><a href="/assets/downloads/movies.zip" target="_blank">실습 CSV 파일(movies.csv)</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># CSV 파일을 이용한 DataFrame 생성</span>

<span class="c"># 제공된 MovieLens Data Set의 movies.csv파일을 읽어 DataFrame으로 생성</span>
<span class="c"># pandas는 문자열처리 시 numpy보다 효율적인 방법을 제공</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"./data/movies.csv"</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">())</span>   <span class="c"># 상위 5개의 행을 출력</span>
<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Database에서 data를 읽어와 DataFrame으로 생성</strong></p>

<p><a href="/assets/downloads/BookTableDump.zip" target="_blank">실습 SQL 파일(BookTableDump.zip)</a></p>

<p><a href="https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.49-winx64.zip" target="_blank">MySQL 5.6버전 64-bit ZIP Archive 다운로드</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># MySQL Database에서 data를 읽어와 DataFrame으로 생성</span>
<span class="c"># MySQL 5.6버전 다운로드 후 데이터베이스 설정</span>
<span class="c"># 제공된 Script를 이용하여 Database 구축(Table 생성)</span>
  
<span class="kn">import</span> <span class="nn">pymysql.cursors</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c"># 데이터베이스 connection</span>
<span class="n">conn</span> <span class="o">=</span> <span class="n">pymysql</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">"localhost"</span><span class="p">,</span>
                       <span class="n">user</span><span class="o">=</span><span class="s">"data"</span><span class="p">,</span>
                       <span class="n">password</span><span class="o">=</span><span class="s">"data"</span><span class="p">,</span>
                       <span class="n">db</span><span class="o">=</span><span class="s">"library"</span><span class="p">,</span>
                       <span class="n">charset</span><span class="o">=</span><span class="s">"utf8"</span><span class="p">)</span>
<span class="c"># 데이터 selection</span>
<span class="n">keyword</span> <span class="o">=</span> <span class="s">"java"</span>
<span class="n">sql</span> <span class="o">=</span> <span class="s">"SELECT bisbn,btitle,bauthor,bprice FROM book WHERE btitle like '</span><span class="si">%</span><span class="s">{}</span><span class="si">%</span><span class="s">'"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">keyword</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_sql</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">con</span><span class="o">=</span><span class="n">conn</span><span class="p">)</span>
    <span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
<span class="k">finally</span><span class="p">:</span>
    <span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame을 JSON 파일로 저장</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame을 JSON 파일로 저장</span>

<span class="c"># Database에서 data를 읽어와 DataFrame으로 생성 한 후</span>
<span class="c"># 생성된 DataFrame을 JSON형태로 파일에 저장</span>

<span class="kn">import</span> <span class="nn">pymysql.cursors</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c"># 데이터베이스 connection</span>
<span class="n">conn</span> <span class="o">=</span> <span class="n">pymysql</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">"localhost"</span><span class="p">,</span>
                       <span class="n">user</span><span class="o">=</span><span class="s">"data"</span><span class="p">,</span>
                       <span class="n">password</span><span class="o">=</span><span class="s">"data"</span><span class="p">,</span>
                       <span class="n">db</span><span class="o">=</span><span class="s">"library"</span><span class="p">,</span>
                       <span class="n">charset</span><span class="o">=</span><span class="s">"utf8"</span><span class="p">)</span>
<span class="n">keyword</span> <span class="o">=</span> <span class="s">"여행"</span>
<span class="n">sql</span> <span class="o">=</span> <span class="s">"SELECT bisbn,btitle,bauthor,bprice FROM book WHERE btitle like '</span><span class="si">%</span><span class="s">{}</span><span class="si">%</span><span class="s">'"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">keyword</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_sql</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">con</span><span class="o">=</span><span class="n">conn</span><span class="p">)</span>
<span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

<span class="c"># DataFrame을 json형식으로 파일에 저장</span>
<span class="c"># 총 4가지 각기 다른 형식으로 저장이 가능.</span>
<span class="c"># Unicode로 파일을 생성한 후 저장해야 한글이 정상 처리됨.</span>
<span class="c"># 저장할 폴더까지는 생성이 되어 있어야 함.</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_orient_columns.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">"columns"</span><span class="p">)</span> <span class="c"># default</span>
    <span class="c"># json이 생성되고 column명이 json의 key값</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_orient_record.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">"records"</span><span class="p">)</span> 
    <span class="c"># json배열이 생성되고 배열의 요소가 json</span>
    <span class="c"># 각 행이 배열 요소의 json으로 생성</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_orient_index.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">"index"</span><span class="p">)</span> 
    <span class="c"># json이 생성되고 각 행의 index가 key값, 각 행의 데이터가 value값.</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./data/json/books_orient_values.json'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_json</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">force_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">"values"</span><span class="p">)</span> 
    <span class="c"># json 배열이 생성되고 배열의 요소가 다시 각 행의 value로 구성된 json 배열</span>
    
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">JSON 파일을 읽어 DataFrame 생성</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># JSON 파일을 읽어서 DataFrame 생성</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="c"># 기본적인 파일처리</span>
<span class="c"># file = open("./data/json/books_orient_columns.json","r", encoding='utf-8')</span>
<span class="c"># dict_books = json.load(file)</span>
<span class="c"># file.close()</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./data/json/books_orient_columns.json"</span><span class="p">,</span><span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">dict_books</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>   <span class="c"># json을 읽어서 python의 dictionary 생성</span>

<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">dict_books</span><span class="p">))</span>  <span class="c"># &lt;class 'dict'&gt;</span>
<span class="k">print</span><span class="p">(</span><span class="n">dict_books</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="o">.</span><span class="n">from_dict</span><span class="p">(</span><span class="n">dict_books</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">'columns'</span><span class="p">)</span> <span class="c"># orient=index</span>
                                                          <span class="c"># orient=columns(default)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Open API(JSON)를 이용한 DataFrame 생성</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 결과를 JSON으로 return하는 open API를 이용한 DataFrame 생성</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">urllib</span>

<span class="c"># 영화진흥위원회 일일 Box Office 순위 Open API 이용</span>
<span class="n">movie_url</span> <span class="o">=</span> <span class="s">"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=430156241533f1d058c603178cc3ca0e&amp;targetDt=20120101"</span>
<span class="n">load_page</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">movie_url</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">load_page</span><span class="p">)</span>  <span class="c"># &lt;http.client.HTTPResponse object at 0x00000209A35AED48&gt;</span>

<span class="n">json_page</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">load_page</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">json_page</span><span class="p">))</span> <span class="c"># &lt;class 'dict'&gt;</span>
<span class="k">print</span><span class="p">(</span><span class="n">json_page</span><span class="p">)</span>  

<span class="n">movie_data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
<span class="n">rank_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">();</span> 
<span class="n">title_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">();</span> 
<span class="n">sales_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">()</span>

<span class="k">for</span> <span class="n">tmp_dict</span> <span class="ow">in</span> <span class="n">json_page</span><span class="p">[</span><span class="s">"boxOfficeResult"</span><span class="p">][</span><span class="s">"dailyBoxOfficeList"</span><span class="p">]:</span>
    <span class="n">rank_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp_dict</span><span class="p">[</span><span class="s">"rank"</span><span class="p">])</span>
    <span class="n">title_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp_dict</span><span class="p">[</span><span class="s">"movieNm"</span><span class="p">])</span>
    <span class="n">sales_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp_dict</span><span class="p">[</span><span class="s">"salesAmt"</span><span class="p">])</span>
        
<span class="n">movie_data</span><span class="p">[</span><span class="s">"제목"</span><span class="p">]</span> <span class="o">=</span> <span class="n">title_list</span>
<span class="n">movie_data</span><span class="p">[</span><span class="s">"당일매출액"</span><span class="p">]</span> <span class="o">=</span> <span class="n">sales_list</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">movie_data</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">rank_list</span>
<span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">name</span><span class="o">=</span><span class="s">"순위"</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame 생성 시 index와 column 지정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame을 생성하는 시점에 column과 index를 지정할 수 있다.</span>

<span class="c"># index의 개수와 데이터의 개수가 일치하지 않은 경우 Error</span>
<span class="c"># column의 경우 dictionary의 key와 일치하지 않는 경우</span>
<span class="c"># NaN(Not a Number)로 설정, NaN은 연산가능</span>

<span class="c"># 참고(R언어와 비교)</span>
<span class="c"># R에서 NA는 결치값으로 잘못된 값을 의미, NULL은 존재하지 않는 객체를 지정할 때 사용</span>
<span class="c"># R에서 NaN은 Not Available Number의 의미로 수학적 연산이 불가능한 수를 의미</span>
<span class="c"># Pandas에서는 NaN은 missing data in pandas의 의미(즉, R의 NA의 의미)</span>
<span class="c"># python에서 R의 NULL을 None으로 표현한다.(None의 비교는 is 연산자 이용)</span>

<span class="c"># NaN의 literal -&gt; np.nan으로 표현</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"평균학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">DataFrame의 기본 분석 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># DataFrame은 기본 분석 함수를 제공</span>

<span class="c"># count, mean, std, min, 25%, 50%, 75%, max 제공</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">"이름"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"이지은"</span><span class="p">,</span> <span class="s">"박동훈"</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">,</span> <span class="s">"강감찬"</span><span class="p">,</span> <span class="s">"오혜영"</span><span class="p">],</span>
        <span class="s">"학과"</span> <span class="p">:</span> <span class="p">[</span><span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"기계"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">,</span> <span class="s">"컴퓨터"</span><span class="p">,</span> <span class="s">"철학"</span><span class="p">],</span>
        <span class="s">"학년"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
        <span class="s">"학점"</span> <span class="p">:</span> <span class="p">[</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.1</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.7</span><span class="p">]}</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">"학과"</span><span class="p">,</span><span class="s">"이름"</span><span class="p">,</span><span class="s">"학점"</span><span class="p">,</span><span class="s">"학년"</span><span class="p">,</span><span class="s">"등급"</span><span class="p">],</span>
                  <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"one"</span><span class="p">,</span><span class="s">"two"</span><span class="p">,</span><span class="s">"three"</span><span class="p">,</span><span class="s">"four"</span><span class="p">,</span><span class="s">"five"</span><span class="p">])</span>

<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">describe</span><span class="p">())</span>  <span class="c"># 수치연산이 가능한 column에 대해 통계치를 출력</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">8</span><span class="p">)</span>  <span class="c"># [1 2 3 4 5 6 7]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">percentile</span><span class="p">(</span><span class="n">arr</span><span class="p">,[</span><span class="mi">50</span><span class="p">]))</span>   <span class="c"># 2사분위</span>
      
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span>  <span class="c"># [1 2 3 4 5 6 7 8 9]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">percentile</span><span class="p">(</span><span class="n">arr</span><span class="p">,[</span><span class="mi">50</span><span class="p">,</span> <span class="mi">75</span><span class="p">]))</span> <span class="c"># 1,3 사분위</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(3) - Pandas(Series)</title>
	  <link>http://localhost:4000/data-science-lecture-python-pandas-series</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-03T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-pandas-series</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">Pandas</strong></p>

<p>이번에는 <code class="highlighter-rouge">Pandas</code>에 대해서 알아보겠습니다.</p>

<p>Pandas는 고유하게 정의한 Series와 DataFrame이라는 자료구조를 사용합니다.</p>

<ul>
  <li>
    <p><code class="highlighter-rouge">Series</code> : 동일한 데이터 타입의 복수개의 성분으로 구성됩니다.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">DataFrame</code> : 서로 같거나 다른 여러 데이터 타입에 대해 Table형식으로 구성됩니다. R의
DataFrame과 같은 형태입니다.</p>
  </li>
</ul>

<p>Pandas를 사용하기 위해서는 conda 명령어나 pip를 이용하여 먼저 Pandas module을 설치해야 합니다.</p>

<blockquote>
  <p><strong>conda install pandas</strong></p>
</blockquote>

<hr />

<p><strong class="subtitle2_fontAwesome">Series 생성</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Series 생성</span>
<span class="c"># numpy array와 비교해서 확인</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c"># ndarray (dtype=np.float64)</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">99</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">dtype</span><span class="p">)</span>

<span class="c"># ndarray (dtype=np.object)</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mf">3.14</span><span class="p">,</span><span class="s">"hello"</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="nb">object</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">dtype</span><span class="p">)</span>

<span class="c">###########################</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">99</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="s">"float64"</span><span class="p">)</span> <span class="c"># dtype=np.float64</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>         <span class="c"># Series 출력(index와 value를 같이 출력)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Series의 value : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">))</span>  <span class="c"># [-1.  5. 10. 99.]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Series의 value type : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">values</span><span class="p">)))</span> <span class="c"># &lt;class 'numpy.ndarray'&gt;</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Series의 value data type : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">dtype</span><span class="p">))</span> <span class="c"># float64   </span>

<span class="k">print</span><span class="p">(</span><span class="s">"Series의 index data : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">))</span>  <span class="c"># RangeIndex(start=0, stop=4, step=1)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Series의 index type : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="p">)))</span> <span class="c"># &lt;class 'pandas.core.indexes.range.RangeIndex'&gt;</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Series index 지정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Series 생성 시 index를 지정 가능 </span>
<span class="c"># 숫자인덱스는 기본으로 사용가능</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="o">-</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">],</span>
              <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">,</span>
              <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'a'</span><span class="p">,</span><span class="s">'k'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"s[1] : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>       <span class="c"># 5</span>
<span class="k">print</span><span class="p">(</span><span class="s">"s['c'] : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">]))</span>   <span class="c"># 1</span>
<span class="k">print</span><span class="p">(</span><span class="s">"type(s['c']) : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">])))</span>   <span class="c"># &lt;class 'numpy.int32'&gt;</span>

<span class="c">############################################</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="o">-</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">],</span>
              <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">,</span>
              <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'k'</span><span class="p">])</span>   <span class="c"># index가 같아도 되는가? (된다.)             </span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"s['c'] : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">]))</span>    <span class="c"># c 1</span>
                                       <span class="c"># c -8</span>
<span class="c"># 만약 같은 index가 존재하고 해당 index로 값을 조회하면</span>
<span class="c"># Series 형태로 return</span>

<span class="k">print</span><span class="p">(</span><span class="s">"type(s['c']) : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">])))</span>  <span class="c"># &lt;class 'pandas.core.series.Series'&gt;</span>


<span class="c">############################################</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="o">-</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">],</span>
              <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">,</span>
              <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'a'</span><span class="p">,</span><span class="s">'k'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="c"># Slicing</span>
<span class="k">print</span><span class="p">(</span><span class="s">"s[0:3]</span><span class="se">\n</span><span class="s">{}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]))</span> <span class="c"># Series</span>
<span class="k">print</span><span class="p">(</span><span class="s">"s['c':'k']</span><span class="se">\n</span><span class="s">{}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="s">'c'</span><span class="p">:</span><span class="s">'k'</span><span class="p">]))</span> <span class="c"># Series</span>
<span class="c"># s['c':'k'] 으로 slicing할 경우 'c'부터 'k'(포함)까지 slicing</span>

<span class="c"># Fancy Indexing &amp; Boolean Indexing</span>
<span class="k">print</span><span class="p">(</span><span class="s">"s[[0,2]]</span><span class="se">\n</span><span class="s">{}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]]))</span> <span class="c"># Series(Fancy Indexing이용)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"s[s</span><span class="si">%2</span><span class="s">==0]</span><span class="se">\n</span><span class="s">{}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">s</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">]))</span> <span class="c"># Series(Boolean Indexing이용)</span>


<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
    <span class="n">result</span> <span class="o">+=</span> <span class="n">s</span><span class="p">[</span><span class="n">x</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="s">"for문을 이용한 합계 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">result</span><span class="p">))</span> 
<span class="k">print</span><span class="p">(</span><span class="s">"sum() 함수를 이용한 합계 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="nb">sum</span><span class="p">()))</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Series 연습</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># A 공장의 2019-01-01부터 10일간 생산량을 Series로 저장</span>
<span class="c"># 생산량은 평균이 50이고 표준편차가 5인 정규분포에서 random하게 생성(정수)</span>
<span class="c"># 형식) 2019-01-01 52</span>

<span class="c"># B 공장의 2019-01-01부터 10일간 생산량을 Series로 저장</span>
<span class="c"># 생산량은 평균이 70이고 표준편차가 8인 정규분포에서 random하게 생성(정수)</span>
<span class="c"># 날짜별로 모든 공장의 생산량 합계를 구하세요!</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">date</span><span class="p">,</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>
<span class="kn">from</span> <span class="nn">dateutil.parser</span> <span class="kn">import</span> <span class="n">parse</span>

<span class="n">start_day</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2019</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">factory_A</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="mi">5</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))],</span>
                     <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="n">start_day</span> <span class="o">+</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)])</span> 

<span class="n">start_day</span> <span class="o">=</span> <span class="n">parse</span><span class="p">(</span><span class="s">"2019-01-01"</span><span class="p">)</span>
<span class="n">factory_B</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">70</span><span class="p">,</span><span class="mi">8</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))],</span>
                     <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="n">start_day</span> <span class="o">+</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)])</span> 
<span class="c"># print(factory_A)</span>
<span class="c"># print(factory_B)</span>
<span class="k">print</span><span class="p">(</span><span class="n">factory_A</span> <span class="o">+</span> <span class="n">factory_B</span><span class="p">)</span>

<span class="c">## 생각해볼 문제 - 만약 서로 날짜가 다르면 어떻게 될까?</span>
<span class="c">## index가 같지 않을 경우 연산의 결과는 NaN</span>
<span class="c">## 어떻게 하면 NaN이 나오지 않고 정상적으로 처리할 수 있을까?</span>
<span class="c">## index를 맞춰보아요!</span>

<span class="n">start_day</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2019</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
<span class="n">factory_A</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="mi">5</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))],</span>
                     <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="n">start_day</span> <span class="o">+</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)])</span> 

<span class="n">index_a</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">factory_A</span><span class="o">.</span><span class="n">index</span><span class="p">)</span>
<span class="n">index_b</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">factory_B</span><span class="o">.</span><span class="n">index</span><span class="p">)</span>

<span class="n">index_a_b</span> <span class="o">=</span> <span class="n">index_a</span> <span class="o">-</span> <span class="n">index_b</span>  <span class="c"># Factory B에 추가</span>
<span class="n">index_b_a</span> <span class="o">=</span> <span class="n">index_b</span> <span class="o">-</span> <span class="n">index_a</span>  <span class="c"># Factory A에 추가 </span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">index_a_b</span><span class="p">:</span>
    <span class="n">factory_B</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">index_b_a</span><span class="p">:</span>
    <span class="n">factory_A</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="k">print</span><span class="p">(</span><span class="n">factory_A</span> <span class="o">+</span> <span class="n">factory_B</span><span class="p">)</span>
    
<span class="c">###################################</span>

<span class="c"># 딕셔너리와 동일하게 추가할 key에 값을 대입해서 Series에 데이터를 추가</span>
<span class="c"># drop(key)을 이용하여 키와 값을 삭제. (삭제된 Series return)</span>


<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="n">s</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="mi">5</span>        <span class="c"># 추가할 key와 value값을 대입해서 Series에 데이터 추가</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>   <span class="c"># index 2가 삭제</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Dictionary로 Series 생성</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Dictionary를 이용하여 Series 생성</span>
<span class="c"># Dictionary의 key가 index로 사용된다.</span>

<span class="c"># Series 자체의 이름과 index의 이름을 지정할 수 있다.</span>
<span class="c"># Python의 list 혹은 numpy array를 이용해서 index 변경</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">my_dict</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"서울"</span> <span class="p">:</span> <span class="mi">1000</span><span class="p">,</span> <span class="s">"부산"</span> <span class="p">:</span> <span class="mi">2000</span><span class="p">,</span> <span class="s">"인천"</span><span class="p">:</span> <span class="mi">3000</span> <span class="p">}</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">my_dict</span><span class="p">)</span>

<span class="n">s</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"지역별 가격데이터"</span>
<span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"지역명"</span>

<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

<span class="n">s</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">"SEOUL"</span><span class="p">,</span> <span class="s">"BUSAN"</span><span class="p">,</span> <span class="s">"INCHON"</span><span class="p">]</span>
<span class="n">s</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"REGION"</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(2) - NumPy(Exercise)</title>
	  <link>http://localhost:4000/data-science-lecture-python-numpy-exercise</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-02T05:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-numpy-exercise</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">NumPy Exercise - 1</strong></p>

<p>NumPy의 기능을 숙지하기 위해 기상자료개방포털 홈페이지에서 
기상관련 데이터를 제공받아 데이터 분석을 하는 실습을 진행합니다.</p>

<p><a href="https://data.kma.go.kr" target="_blank">기상자료개방포털</a></p>

<p><strong class="subtitle2_fontAwesome">CSV 파일 다운로드</strong></p>

<blockquote>
  <p><strong>기후통계분석 &gt; 통계분석 &gt; 기온분석</strong></p>
</blockquote>

<p>위의 메뉴로 들어가서 기간을 설정하고(1904년1월1일~최근) 지역은 <code class="highlighter-rouge">서울</code>을
설정합니다. (아래의 문제를 풀기 위해서 <code class="highlighter-rouge">대구</code> 지역의 파일도 받아야 합니다.)</p>

<p>검색버튼을 누르고 잠시 기다리면 그래프가 출력됩니다. 그 후
<code class="highlighter-rouge">CSV 다운로드</code> 버튼을 클릭해 데이터 파일을 다운로드 받습니다.</p>

<p><a href="/assets/downloads/temperature.zip" target="_blank">다운로드한 CSV 파일</a></p>

<p>다운로드한 후 CSV 파일을 <code class="highlighter-rouge">Notepad++</code> 같은 에디트 프로그램으로 열고 1~7행을 
삭제합니다.</p>

<p>NumPy를 이용하여 다음의 내용을 구합니다. 데이터에 결측치가 포함되어 있을 수 있습니다.
주의하세요!!
(중복된 내용이 있으면 모두 출력하며 오름차순으로 정렬하여 출력합니다.)</p>

<ul>
  <li>
    <p><strong>기상 관측 이래, 서울의 최고 기온이 가장 높았던 날은 언제였고, 몇도인가요?</strong></p>
  </li>
  <li>
    <p><strong>역사적으로 일교차가 가장 큰 날짜는 몇년 몇월 몇일 인가요?</strong></p>
  </li>
  <li>
    <p><strong>1년 중 평균적으로 일교차가 가장 큰 날짜는 몇월 몇일 인가요?</strong></p>
  </li>
  <li>
    <p><strong>가장 덥다고 알려진 대구보다 서울이 더 더운날이 가장 많은 연도는 언제인가요?</strong></p>
  </li>
</ul>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>

	<item>
	  <title>Python 데이터분석 라이브러리(1) - NumPy</title>
	  <link>http://localhost:4000/data-science-lecture-python-numpy</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2020-04-02T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/data-science-lecture-python-numpy</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">Data-Science 강의는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">

    <li><a href="./data-science-lecture-python-numpy">Python 데이터분석 라이브러리(1) - NumPy</a></li>
    <li><a href="./data-science-lecture-python-numpy-exercise">Python 데이터분석 라이브러리(2) - NumPy(Exercise)</a></li>

    <li><a href="./data-science-lecture-python-pandas-series">Python 데이터분석 라이브러리(3) - Pandas(Series)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-basic">Python 데이터분석 라이브러리(4) - Pandas(DataFrame 생성)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-indexing">Python 데이터분석 라이브러리(5) - Pandas(DataFrame indexing)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-functions">Python 데이터분석 라이브러리(6) - Pandas(DataFrame functions)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-merge">Python 데이터분석 라이브러리(7) - Pandas(DataFrame merge)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-transform">Python 데이터분석 라이브러리(8) - Pandas(DataFrame 제어)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-group">Python 데이터분석 라이브러리(9) - Pandas(DataFrame Grouping)</a></li>
    <li><a href="./data-science-lecture-python-pandas-dataframe-exercise">Python 데이터분석 라이브러리(10) - Pandas(Exercise)</a></li>

<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-manipulation">Python 데이터분석 라이브러리(6) - Pandas(DataFrame 조작)</a></li>    -->
<!--    <li><a href="./data-science-lecture-python-pandas-dataframe-multi-index">Python 데이터분석 라이브러리(8) - Pandas(DataFrame multi index)</a></li>    -->
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">NumPy</strong></p>

<p>이번에는 <code class="highlighter-rouge">NumPy</code>(Numerical Python)에 대해서 알아보겠습니다.</p>

<p>NumPy module은 <code class="highlighter-rouge">Vector</code> 및 <code class="highlighter-rouge">Matrix</code> 연산에 있어 상당한 편의성을 제공합니다. 
또한 Pandas와 matplotlib의 기반이 되는 module이며 Machine Learning, Deep Learning
에서 많이 사용되기 때문에 잘 알아두어야 합니다.</p>

<p>NumPy array는 <code class="highlighter-rouge">ndarray</code>라고 부르는 n차원의 배열(n-dimensional array)객체입니다.</p>

<p>ndarray는 Python의 list와는 다르게 같은 데이터 타입만 저장 가능합니다. NumPy의 ndarray와 
Python의 list는 거의 사용방법이 같지만 NumPy ndarray가 좀 더 효율적으로 메모리에 
데이터를 저장하고 빠른 연산이 가능합니다.</p>

<p>NumPy를 사용하기 위해서는 conda 명령어나 pip를 이용하여 먼저 NumPy module을 설치해야 합니다.</p>

<blockquote>
  <p><strong>conda install numpy</strong></p>
</blockquote>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 <code class="highlighter-rouge">Anaconda</code>를 설치하고 NumPy와 Pandas를 학습하기 위한
개발환경을 세팅하는 방법에 대한 영상입니다.</p>

<p>Windows 10 환경으로 진행합니다.</p>

<blockquote>
  <p>NumPy &amp; Pandas - 01. Anaconda 환경설정 영상</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/kn1eft_upWs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy의 <code class="highlighter-rouge">ndarray</code> 생성과 dtype 설정 및 확인에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray 생성 및 data type 확인</strong></p>

<p><strong class="subtitle2_fontAwesome">다차원 ndarray와 data type 지정</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 02. ndarray 생성 및 특징</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/fmyMWz7tbC8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 생성 및 type 확인</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

<span class="c"># ndarray 생성 및 type 확인</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"list =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">a</span><span class="p">))</span>       <span class="c"># [1,2,3,4]  </span>
<span class="k">print</span><span class="p">(</span><span class="s">"type =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)))</span> <span class="c"># &lt;class 'list'&gt;</span>


<span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="s">"array =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>         <span class="c"># [1 2 3 4]</span>
<span class="k">print</span><span class="p">(</span><span class="s">"type =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">)))</span>    <span class="c"># &lt;class 'numpy.ndarray'&gt;</span>
<span class="k">print</span><span class="p">(</span><span class="s">"b.dtype =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">b</span><span class="o">.</span><span class="n">dtype</span><span class="p">))</span> <span class="c"># dtype : 배열 데이터 타입 속성</span>
                                       <span class="c"># int32</span>
<span class="k">print</span><span class="p">(</span><span class="s">"b[0] type =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span> <span class="c"># &lt;class 'numpy.int32'&gt;</span>


<span class="n">c</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">100</span><span class="p">,</span><span class="s">"Hello"</span><span class="p">,</span><span class="mf">3.141592</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="s">"array =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">c</span><span class="p">))</span>         <span class="c"># array =&gt; ['100' 'Hello' '3.141592'],  </span>
<span class="k">print</span><span class="p">(</span><span class="s">"type =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">c</span><span class="p">)))</span>    <span class="c"># type =&gt; &lt;class 'numpy.ndarray'&gt;  </span>
<span class="k">print</span><span class="p">(</span><span class="s">"c.dtype =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">dtype</span><span class="p">))</span> <span class="c"># b.dtype =&gt; &lt;U11 </span>
<span class="k">print</span><span class="p">(</span><span class="s">"c[0] type =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">c</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span> <span class="c"># &lt;class 'numpy.str_'&gt;</span>
      
</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">다차원 ndarray와 data type 지정</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 다차원 ndarray와 data type 지정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
 
<span class="n">my_list</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]]</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"{}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>  <span class="c"># [[1 2 3]</span>
                         <span class="c">#  [4 5 6]]</span>
    
<span class="k">print</span><span class="p">(</span><span class="s">"1행 2열의 값은 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]))</span> <span class="c"># 1행 2열의 값은 : 6</span>


<span class="c"># ndarray 생성시 dtype 명시</span>

<span class="c"># ndarray 생성 시 명시적으로 타입을 지정하지 않으면</span>
<span class="c"># 데이터를 보고 적절한 타입을 알아서 지정</span>

<span class="c"># 혹은 ndarray 생성 시 data type을 지정할 수 있다.</span>

<span class="n">my_list</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]]</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">my_list</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"{}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>  <span class="c"># [[1. 2. 3.]</span>
                         <span class="c">#  [4. 5. 6.]]</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy의 <code class="highlighter-rouge">ndarray</code> 주요 속성에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray의 차원 관련 속성 : ndim, shape</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray의 크기 속성과 shape 조절</strong></p>

<p><strong class="subtitle2_fontAwesome">astype()을 이용한 ndarray data type 변경</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 03.ndarray 주요속성 및 데이터타입</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/8HYcZz5KxZ0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray의 차원 관련 속성 : ndim, shape</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray의 차원 관련 속성 : ndim, shape</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c"># 1차원</span>
<span class="nb">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"arr.ndim =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">ndim</span><span class="p">))</span>   <span class="c"># arr.ndim =&gt; 1</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.shape =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span> <span class="c"># arr.shape =&gt; (4,)</span>


<span class="c"># 2차원</span>
<span class="nb">list</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">]]</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"arr.ndim =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">ndim</span><span class="p">))</span>   <span class="c"># arr.ndim =&gt; 2</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.shape =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span> <span class="c"># arr.shape =&gt; (4, 2)</span>


<span class="c"># 3차원 (2,2,3) 형태를 list로 만들어보자!</span>
<span class="nb">list</span> <span class="o">=</span> <span class="p">[[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]],[[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">],[</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">]]]</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.ndim =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">ndim</span><span class="p">))</span>   <span class="c"># arr.ndim =&gt; 3</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.shape =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span> <span class="c"># arr.shape =&gt; (2, 2, 3)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray의 크기 속성과 shape 조절</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray의 크기 속성과 shape 조절</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="nb">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"arr.shape =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span>   <span class="c"># arr.shape =&gt; (4,)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"크기(size) : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>    <span class="c"># 배열 요소의 수 : 4 </span>
<span class="k">print</span><span class="p">(</span><span class="s">"크기(len) : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)))</span>     <span class="c"># 1차원배열길이 : 4</span>


<span class="n">arr</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span><span class="mi">2</span>    <span class="c"># shape 변경</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.shape =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span>   <span class="c"># arr.shape =&gt; (2, 2)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"크기(size) : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>    <span class="c"># 배열 요소의 수 : 4</span>
<span class="k">print</span><span class="p">(</span><span class="s">"크기(len) : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)))</span>     <span class="c"># 1차원배열길이 : 2</span>


<span class="n">arr</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span>  <span class="c"># shape 변경</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.shape =&gt; {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span>   <span class="c"># arr.shape =&gt; (4, 1, 1)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">astype()을 이용한 ndarray data type 변경</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 <span class="c"># astype()을 이용한 ndarray data type 변경</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mf">1.2</span><span class="p">,</span> <span class="mf">2.5</span><span class="p">,</span> <span class="mf">3.8</span><span class="p">,</span> <span class="mf">4.2</span><span class="p">,</span> <span class="mf">5.3</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.dtype : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">dtype</span><span class="p">))</span>  <span class="c"># float64</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr.dtype : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">dtype</span><span class="p">))</span>  <span class="c"># int32</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>  <span class="c"># [1 2 3 4 5]  소수점 이하 버림 처리</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy의 <code class="highlighter-rouge">ndarray</code>를 생성하는 다양한 생성함수에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-zeros,ones,empty,full</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-arange</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-linspace</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 04.ndarray를 만드는 다양한 생성함수</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/qo4OKnxldok" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-zeros,ones,empty,full</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 다양한 생성 함수-zeros,ones,empty,full</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span> <span class="c"># shape을 지정</span>
                      <span class="c"># default data type은 float64</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">empty</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span> <span class="c"># 공간만 할당, 초기화 하지 않는다. </span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">full</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span> <span class="mi">7</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>   <span class="c"># 지정된 shape으로 array를 생성한 후</span>
             <span class="c"># parameter값으로 초기화</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">),(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">)])</span> <span class="c"># 2 x 3 array</span>

<span class="c"># 지정된 배열과 shape이 같은 array를 생성.</span>
<span class="n">arr_like</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">ones_like</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>
<span class="n">arr_like</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros_like</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>
<span class="n">arr_like</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">empty_like</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>
<span class="n">arr_like</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">full_like</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr_like</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-arange</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 다양한 생성 함수-arange</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c"># python의 range()와 유사</span>
<span class="c"># 주어진 범위 내에서 지정한 간격으로 </span>
<span class="c"># 연속적인 원소를 가진 배열을 생성</span>
<span class="c"># np.arange(시작,끝,간격)</span>
<span class="c"># 시작은 inclusive, 끝은 exclusive </span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr의 크기 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr : "</span><span class="p">,</span><span class="n">arr</span><span class="p">)</span>    <span class="c"># [0 2 4 6 8]</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr의 크기 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr : "</span><span class="p">,</span><span class="n">arr</span><span class="p">)</span>    <span class="c"># [0 1 2 3 4 5 6 7 8 9]</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span><span class="mf">5.3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr의 크기 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr : "</span><span class="p">,</span><span class="n">arr</span><span class="p">)</span>    <span class="c"># [0.1 1.1 2.1 3.1 4.1 5.1]</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-linspace</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 다양한 생성 함수-linspace</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c"># np.linspace(start,stop,num)</span>
<span class="c"># start부터 stop의 범위에서 num개를 균일한 간격으로</span>
<span class="c"># 데이터를 생성하고 배열을 만드는 함수</span>
<span class="c"># 원소간 간격은 (stop-start)/(num - 1).</span>
<span class="c"># num의 default값은 50</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"arr의 크기 : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="s">"*"</span><span class="p">)</span>   <span class="c"># plt.plot()은 선그래프를 그려준다.</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">121</span><span class="p">,</span><span class="mi">31</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="s">"o"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy의 <code class="highlighter-rouge">ndarray</code>를 생성하는 랜덤 기반의 함수와
NumPy에서 제공하는 유용한 랜덤 관련 함수에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-random 기반</strong></p>

<p><strong class="subtitle2_fontAwesome">NumPy 난수관련 함수</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 05.ndarray를 만드는 난수기반 함수</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/1m452Ek2RPk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 다양한 생성 함수-random 기반</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 다양한 생성 함수-random 기반</span>

<span class="c"># np.random.normal() : 정규분포 확률밀도에서 실수 표본추출</span>
<span class="c"># np.random.rand() : [0,1)의 균등분포 확률밀도에서 실수 표본추출</span>
<span class="c"># np.random.randn() : 표준정규분포(평균:0, 표준편차:1) 확률밀도에서 실수 표본추출</span>
<span class="c"># np.random.randint() : 주어진 범위에서 균등분포 확률밀도에서 정수 표본추출</span>
<span class="c"># np.random.random() : [0,1)의 균등분포 확률밀도에서 실수 표본추출</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c"># np.random.normal(정규 분포의 평균,표준편차,shape)</span>
<span class="c"># 정규분포 확률밀도에서 실수 표본추출</span>
<span class="c"># 추출된 난수는 정규분포의 형상을 가진다.</span>

<span class="n">mean</span> <span class="o">=</span> <span class="mi">50</span>
<span class="n">std</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">normal</span><span class="p">(</span><span class="n">mean</span><span class="p">,</span><span class="n">std</span><span class="p">,(</span><span class="mi">10000</span><span class="p">,))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c">########################</span>

<span class="c"># np.random.rand(d0,d1,d2,...)</span>
<span class="c"># 난수[0,1) 균등분포 확률 밀도에서 표본을 추출</span>
<span class="c"># [](대괄호)는 이상, 이하의 의미, ()(소괄호)는 초과,미만의 의미</span>
<span class="c"># 추출된 난수는 균등분포의 형상을 가진다.</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">10000</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c">########################</span>

<span class="c"># np.random.randn(d0,d1,d2,...)</span>
<span class="c"># 표준 정규 분포 확률 밀도에서 표본을 추출</span>
<span class="c"># 추출된 난수는 정규분포의 형상을 가진다.</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">10000</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c">########################</span>

<span class="c"># np.random.randint(low,high,shape)</span>
<span class="c"># 균등 분포 확률 밀도에서 정수 표본을 추출</span>
<span class="c"># 추출된 정수 난수는 해당 범위에서 균등 분포의 형상을 가진다.</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="o">-</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">,(</span><span class="mi">1000</span><span class="p">,))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c">########################</span>

<span class="c"># np.random.random(shape)</span>
<span class="c"># [0,1) 균등 분포 확률 밀도에서 표본을 추출</span>
<span class="c"># 추출된 난수는 해당 범위에서 균등 분포의 형상을 가진다.</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">random</span><span class="p">((</span><span class="mi">10000</span><span class="p">,))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">NumPy 난수관련 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># random 기반의 배열 생성의 재현성을 확보해보자!!</span>
<span class="c"># 난수는 특정 시작 숫자로부터 난수처럼 보이는 수열을 만드는</span>
<span class="c"># 알고리즘의 결과물</span>

<span class="c"># 시작점을 설정하면 같은 난수를 발생시킬 수 있다. ( 난수의 재현 )</span>
<span class="c"># np.random.seed(x) : 난수의 시작점을 설정하는 함수</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="c"># 반복실행을 해도 똑같은 난수가 발생</span>

<span class="c">##################</span>

<span class="c"># 데이터의 순서를 바꾸려면 shuffle()을 이용합니다. </span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">shuffle</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>   <span class="c"># arr의 데이터 순서를 변경</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="c">##################</span>

<span class="c"># 데이터 집합에서 일부를 무작위로 선택하는 샘플링(sampling)을 </span>
<span class="c"># 수행하려면 choice()를 이용합니다. </span>

<span class="c"># numpy.random.choice(a, size=None, replace=True, p=None)</span>

<span class="c"># a : 배열 혹은 정수</span>
<span class="c">#     만약 정수면 arange(a) 명령으로 데이터 생성</span>
<span class="c"># size : 정수. 샘플 숫자</span>
<span class="c"># replace : True이면 한번 선택한 데이터를 다시 선택 할 수 있음.</span>
<span class="c"># p : ndarray. 각 데이터가 선택될 수 있는 확률을 명시.</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">replace</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="p">[</span><span class="mf">0.1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.6</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy의 <code class="highlighter-rouge">ndarray</code> shape을 변경하는 함수에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray shape 조절 함수 - reshape</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray shape 조절 함수 - ravel</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray shape 조절 함수 - resize</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 06.ndarray의 shape 조절 함수</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/10lB1zMEjgA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray shape 조절 함수 - reshape</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray shape 조절 함수 - reshape</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="c"># 배열의 데이터는 공유하지만 shape이 다른 뷰(View)를 생성</span>
<span class="n">arr1</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>

<span class="c"># 데이터가 공유되기 때문에 배열을 변경하면 다른 View에도</span>
<span class="c"># 영향을 미침</span>
<span class="c"># 데이터를 공유하는지 확인</span>

<span class="n">arr</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>

<span class="c">#######################</span>

<span class="c"># base 속성을 이용하면 현재의 View의 데이터가 어떤 객체의 </span>
<span class="c"># 데이터 인지를 알 수 있다.</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="n">base</span><span class="p">)</span>

<span class="k">if</span> <span class="n">arr1</span><span class="o">.</span><span class="n">base</span> <span class="ow">is</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"데이터 공유!!"</span><span class="p">)</span>
    
<span class="c">#######################</span>

<span class="c"># reshape()을 사용할 때 차원 하나를 -1로 설정하면 </span>
<span class="c"># 배열의 전체 원소 개수와 확정된 차원 크기로 부터 </span>
<span class="c"># 남은 차원의 크기를 추론하여 배열을 생성</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>

<span class="c">#######################</span>

<span class="c"># View를 생성하지 않으려면 copy()를 이용하여 새로운</span>
<span class="c"># array 생성</span>

<span class="n">arr2</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray shape 조절 함수 - ravel</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray shape 조절 함수 - ravel</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c"># ravel() : 배열의 모든 원소가 포함된 1차원 배열을 리턴</span>
<span class="c"># ravel() 역시 View를 return</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>


<span class="n">arr1</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">ravel</span><span class="p">()</span> 
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray shape 조절 함수 - resize</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray shape 조절 함수 - resize</span>

<span class="c"># resize()는 reshape()과 유사한 기능을 수행.</span>
<span class="c"># 단, reshape()는 배열 요소 수를 변경하지 않는반면 resize()는</span>
<span class="c"># shape을 변경하는 과정에서 배열 요소 수가 변할 수 있다.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="c"># resize()를 호출하는 방식에 따라서 원본 변경 혹은</span>
<span class="c"># 결과 배열이 리턴된다.</span>
<span class="c"># resize()는 reshape()과는 다르게 View를 생성하지 않는다.</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">arr</span><span class="p">,(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">)))</span> <span class="c"># 새로운 배열 생성</span>
                            <span class="c"># View 생성이 아님</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span> <span class="c"># return 없음. 원본 변경</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="n">arr</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>  <span class="c"># 요소수가 늘어나면 0으로 세팅</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="n">arr</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>  <span class="c"># 요소수가 줄면 기존 데이터를 버린다.</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy의 <code class="highlighter-rouge">ndarray</code>의 indexing과 slicing에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray indexing &amp; slicing</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray Boolean indexing &amp; Fancy indexing</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 07.ndarray의 indexing과 slicing</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/BR6nm31Q2l8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray indexing &amp; slicing</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray indexing &amp; slicing</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>

<span class="c"># ndarray는 python list처럼 indexing과 slicing이 가능</span>

<span class="k">for</span> <span class="n">idx</span><span class="p">,</span><span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"index : {}, data : {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span><span class="n">data</span><span class="p">))</span>
    
<span class="c"># ndarray를 slicing한 결과는 View이기 때문에 </span>
<span class="c"># 원본 데이터가 변경되면 View의 데이터도 변경됨을 기억하자.</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">::</span><span class="mi">2</span><span class="p">])</span>  <span class="c"># 첫번째 원소부터 2씩 건너띄며 원소를 슬라이싱</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">:</span><span class="mi">2</span><span class="p">])</span>


<span class="c"># 2차원 ndarray의 indexing &amp; slicing</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">2</span><span class="p">,:])</span>     <span class="c"># 2차원 이상인 경우 </span>
                    <span class="c"># ","를 기준으로 인덱싱을 해야 한다.</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">,:])</span> 
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[:,</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">,:</span><span class="mi">2</span><span class="p">])</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray Boolean indexing &amp; Fancy indexing</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray Boolean indexing &amp; Fancy indexing</span>

<span class="c"># boolean indexing은 배열의 각 요소의 선택여부를 </span>
<span class="c"># True,False로 구성된 boolean mask를 이용하여 </span>
<span class="c"># 지정하는 방식으로 boolean mask의 True 요소에 해당하는 </span>
<span class="c"># index만을 조회.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">10</span><span class="p">,))</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>       <span class="c"># mask 생성</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">arr</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">])</span>  <span class="c"># boolean indexing</span>

<span class="c">##################################</span>

<span class="c"># Fancy Indexing</span>

<span class="c"># 배열에 index 배열을 전달하여 배열요소를 참조하는 방식</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>       <span class="c"># indexing : 10</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>     <span class="c"># slicing : [6]</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">])</span>   <span class="c"># slicing : [[5]]</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="mi">2</span><span class="p">])</span>   <span class="c"># fancy indexing : [2 10]</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span> <span class="c"># [[ 2]</span>
                      <span class="c">#  [10]]</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[:,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]])</span>   <span class="c"># fancy indexing  </span>
                      <span class="c"># [[ 0  2]</span>
                      <span class="c">#  [ 4  6]</span>
                      <span class="c">#  [ 8 10]]</span>
    
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]])</span> <span class="c"># ?? 생각처럼 나오지 않는다.</span>
                        <span class="c"># 슬라이싱처럼 fancy indexing 적용 안됨</span>
    
<span class="c"># 방법 1</span>
<span class="c"># 행을 먼저 추출한 후 해당 행에 대해 fancy indexing을 적용</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]][:,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]])</span>  <span class="c"># [[ 0  2]</span>
                            <span class="c">#  [ 8 10]]</span>

<span class="c"># 방법 2</span>
<span class="c"># numpy의 ix_() 함수를 이용</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">ix_</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">])])</span> <span class="c"># [[ 0  2]</span>
                                <span class="c"># [ 8 10]]</span>
</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy <code class="highlighter-rouge">ndarray</code>의 사칙연산과 행렬곱연산에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray 사칙연산과 행렬곱</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray broadcasting</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 08.ndarray의 사칙연산과 행렬곱</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/KpSfJHpVuLw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 사칙연산과 행렬곱</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 사칙연산과 행렬곱</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>            <span class="c"># 2 x 3 ndarray</span>
<span class="n">arr2</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span> <span class="c"># 2 x 3 ndarray</span>
<span class="n">arr3</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span> <span class="c"># 3 x 2 ndarray</span>

<span class="c"># 같은 크기의 배열 간의 연산은 </span>
<span class="c"># 같은 위치에 있는 원소 간의 연산으로 결과가 계산</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">+</span> <span class="n">arr2</span><span class="p">)</span>  <span class="c"># np.add(arr1,arr2)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">-</span> <span class="n">arr2</span><span class="p">)</span>  <span class="c"># np.subtract(arr1,arr2)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">*</span> <span class="n">arr2</span><span class="p">)</span>  <span class="c"># np.multiply(arr1,arr2)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">/</span> <span class="n">arr2</span><span class="p">)</span>  <span class="c"># np.divide(arr1,arr2)</span>

<span class="c"># 두 행렬간의 행렬곱은 np.matmul() 혹은 np.dot()으로 수행가능</span>
<span class="c"># np.dot(A,B)에서 A 행렬의 열 vector와 B 행렬의 행 vector의 size가 같아야 한다.</span>
<span class="c"># 그렇지 않으면 이전에 배운 reshape이나 전치행렬을 이용하여 형 변환 후 크기를</span>
<span class="c"># 맞추고 연산을 수행해야 한다.</span>

<span class="k">print</span><span class="p">(</span><span class="s">"행렬곱 : "</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">matmul</span><span class="p">(</span><span class="n">arr1</span><span class="p">,</span><span class="n">arr3</span><span class="p">))</span>  <span class="c"># np.dot(arr1,arr3)</span>


<span class="c"># 이런 행렬곱을 왜 알아야 할까?</span>
<span class="c"># 행렬곱이 없다면 matrix연산은 무조건 같은 크기의 사칙연산만을 수행할 수 있다.</span>
<span class="c"># 하지만 행렬곱을 이용하면 </span>
<span class="c"># 행렬곱 조건을 만족하는 다양한 크기의 행렬을 이용하여 연속적으로</span>
<span class="c"># 행렬곱을 수행시킬 수 있기 때문.</span>
<span class="c"># 이러한 특성이 Machine Learning과 Image processing에서 자주 사용된다.</span>

<span class="c"># 예) 입력 : 32 x 32 matrix (image라고 가정)</span>
<span class="c">#     출력 : 32 x 10 matrix (다양한 처리가 적용된 image)</span>
<span class="c">#     행렬곱 : (32 x 32) dot (32 x 128) dot (128,64) dot (64 x 10) =&gt; 32 x 10</span>

<span class="c"># 위의 예처럼 행렬곱 특성을 이용하면 다양한 크기의 행렬을 이용하여 원본 데이터를</span>
<span class="c"># 변경시키는 것이 가능. 만약 행렬곱이 없고 사칙연산만 수행할 수 있다면</span>
<span class="c"># 32 x 32 형태의 크기를 가지는 특성(행렬)만 이용할 수 있기 때문에 </span>
<span class="c"># 다양한 특성을 가지는 필터 개발이 불가능하다.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray broadcasting</strong></p>

<!--
![numpy array broadcasting](/assets/built/images/numpy-array-broadcasting.png)
-->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray broadcasting</span>

<span class="c"># shape이 다른 경우 두 배열에 대한 이항연산은 두 배열간의 shape을</span>
<span class="c"># 맞추는 broadcasting과정을 거친 후 수행된다.</span>
<span class="c"># 가장 일반적인 경우는 배열과 scalar의 연산</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>   <span class="c"># 2 x 3 ndarray</span>
<span class="n">arr2</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">])</span>             <span class="c"># 1차원 ndarray </span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">+</span> <span class="n">arr2</span><span class="p">)</span>  <span class="c"># arr2를 2차배열로 broadcasting</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>
<span class="n">arr2</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]])</span>
<span class="c"># print(arr1 + arr2)  # broadcasting이 일어날 수 없다. Error 발생</span>

<span class="c"># 주의!!</span>
<span class="c"># 이런 ndarray의 broadcasting은 사칙연산에 한해서 일어나게 된다.</span>
<span class="c"># 즉, 행렬곱 연산에 대해서는 broadcasting이 발생하지 않는다.</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy <code class="highlighter-rouge">ndarray</code>의 전치행렬과 iterator에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray transpose</strong></p>

<p><strong class="subtitle2_fontAwesome">NumPy iterator</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 09.ndarray의 전치행렬과 iterator</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/-fafZWw8-RE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray transpose</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray transpose</span>

<span class="c"># 일반적으로 전치행렬이라고 불리는 transpose에 대해서 알아보자.</span>
<span class="c"># 전치행렬은 원본 행렬의 행은 열로, 열은 행으로 바꾼 행렬을 의미</span>
<span class="c"># 전치행렬의 수학적 표현은 윗첨자 T를 이용해서 표현한다. </span>
<span class="c"># ndarray의 T 속성을 이용하면 전치행렬을 구할 수 있다.(View)</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>   <span class="c"># 2 x 3 ndarray</span>

<span class="n">arr_transpose</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">T</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr_transpose</span><span class="p">)</span>

<span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr_transpose</span><span class="p">)</span>   <span class="c"># 전치행렬 또한 View</span>

<span class="c"># Vector에 대한 transpose</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
<span class="n">arr_transpose</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">T</span>    

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr_transpose</span><span class="p">)</span>   <span class="c"># vector에 대한 전치행렬은 의미없음.</span>

<span class="c"># 만약 전치행렬을 구하고 싶으면 2차원 matrix로 변환한 후 수행해야 한다.</span>

<span class="n">arr_transpose</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">T</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr_transpose</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">NumPy iterator</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray iterator</span>

<span class="c"># ndarray의 모든 원소를 access하는 경우에 일반적으로 iterator를 이용.</span>
<span class="c"># iternext()와 finished 속성을 이용하여 ndarray의 모든 요소들을 순차적으로</span>
<span class="c"># access 할 수 있다.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c"># 1차원 ndarray에 대한 요소 출력</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>

<span class="k">for</span> <span class="n">tmp</span> <span class="ow">in</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
    
<span class="c">####################################    </span>

<span class="c"># 1차원 ndarray에 대한 iterator</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>

<span class="n">it</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">nditer</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">flags</span><span class="o">=</span><span class="p">[</span><span class="s">'c_index'</span><span class="p">])</span>

<span class="k">while</span> <span class="ow">not</span> <span class="n">it</span><span class="o">.</span><span class="n">finished</span><span class="p">:</span>
    
    <span class="n">idx</span> <span class="o">=</span> <span class="n">it</span><span class="o">.</span><span class="n">index</span>
    
    <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">idx</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
    
    <span class="n">it</span><span class="o">.</span><span class="n">iternext</span><span class="p">()</span>

<span class="c">####################################</span>

<span class="c"># 2차원 ndarray에 대한 요소 출력</span>
<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>

<span class="k">for</span> <span class="n">tmp1</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
    <span class="k">for</span> <span class="n">tmp2</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">tmp1</span><span class="p">,</span><span class="n">tmp2</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
        
<span class="c">####################################    </span>

<span class="c"># 2차원 ndarray에 대한 iterator</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>

<span class="n">it</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">nditer</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">flags</span><span class="o">=</span><span class="p">[</span><span class="s">'multi_index'</span><span class="p">])</span>

<span class="k">while</span> <span class="ow">not</span> <span class="n">it</span><span class="o">.</span><span class="n">finished</span><span class="p">:</span>
    
    <span class="n">idx</span> <span class="o">=</span> <span class="n">it</span><span class="o">.</span><span class="n">multi_index</span>
    
    <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">idx</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
    
    <span class="n">it</span><span class="o">.</span><span class="n">iternext</span><span class="p">()</span>        

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy <code class="highlighter-rouge">ndarray</code>의 boolean mask의 활용과 집계함수에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray 비교연산</strong></p>

<p><strong class="subtitle2_fontAwesome">NumPy 함수와 axis</strong></p>

<p><strong class="subtitle2_fontAwesome">NumPy 집계 함수의 처리속도</strong></p>

<p><strong class="subtitle2_fontAwesome">Boolean Mask 활용</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 10.ndarray의 boolean mask와 집계함수</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/jFaN6IInvKE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 비교연산</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 비교연산</span>

<span class="c"># 사칙연산과 마찬가지로 비교연산도 같은 index의 </span>
<span class="c"># 요소들끼리 수행된다.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="n">arr2</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr2</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">==</span> <span class="n">arr2</span><span class="p">)</span> <span class="c"># 논리 연산의 결과는 boolean</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span> <span class="o">&gt;</span> <span class="n">arr2</span><span class="p">)</span>

<span class="c">#######################</span>

<span class="c"># 2개의 ndarray 자체가 같은 데이터를 가지고 있는지</span>
<span class="c"># 비교할 때는 array_equal()을 사용한다.</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="n">arr2</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">array_equal</span><span class="p">(</span><span class="n">arr1</span><span class="p">,</span><span class="n">arr2</span><span class="p">))</span> <span class="c"># 두 배열 전체 비교</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">NumPy 함수와 axis</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># NumPy 함수와 axis</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>        <span class="c"># 합, arr.sum()</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>     <span class="c"># 누적합, arr.cumsum()</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>       <span class="c"># 평균, arr.mean()</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="nb">max</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>        <span class="c"># 최대값, arr.max() </span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="nb">min</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>        <span class="c"># 최소값, arr.min()</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>     <span class="c"># 최대값의 index =&gt; 5</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">argmin</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>     <span class="c"># 최소값의 index =&gt; 0</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>        <span class="c"># 표준편차, arr.std() </span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>       <span class="c"># 제곱근</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>        <span class="c"># 자연상수의 제곱값 (자연상수 e = 2.7182...)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>      <span class="c"># 상용 log의 값</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>        <span class="c"># 자연 log의 값 (자연상수 e = 2.7182...)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="mi">100</span><span class="p">))</span>      <span class="c"># 상용로그 </span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="mf">2.7182</span><span class="p">))</span>     <span class="c"># 자연로그 </span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10000</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>


<span class="c"># NumPy의 모든 집계함수는 axis를 기준으로 계산.</span>
<span class="c"># 만약 axis를 지정하지 않으면 axis는 None으로 간주하고</span>
<span class="c"># 대상범위를 전체 행렬로 지정</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span> <span class="c"># 1차원에서 axis=0은 열방향</span>
<span class="c">#print(arr1.sum(axis=1)) # 1차원에서 axis=1은 error</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span> <span class="c"># axis=None, 전체배열대상 =&gt; 45</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span> <span class="c"># 2차원에서 axis=0은 행방향, np.sum(arr1,axis=0)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span> <span class="c"># 2차원에서 axis=1은 열방향, np.sum(arr1,axis=1)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span> <span class="c"># 열방향으로 최대값의 index =&gt; [2 2 2]</span>

<span class="n">arr1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">,(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr1</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span> <span class="c"># 3차원에서 axis=0은 depth방향</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">NumPy 집계 함수의 처리속도</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># NumPy 집계 함수의 처리속도</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10000000</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float64</span><span class="p">)</span>

<span class="c"># 아래의 코드는 jupyter notebook의 cell을 나누어서 실행</span>

<span class="o">%%</span><span class="n">time</span>
<span class="c"># 해당 cell을 실행시키는데 걸리는 시간 출력출력</span>

<span class="n">result</span> <span class="o">=</span> <span class="mf">0.0</span>
<span class="k">for</span> <span class="n">tmp</span> <span class="ow">in</span> <span class="n">arr</span><span class="p">:</span>
    <span class="n">result</span> <span class="o">+=</span> <span class="n">tmp</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>    

<span class="c">##########################</span>

<span class="o">%%</span><span class="n">time</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">Boolean Mask 활용</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># Boolean Mask 활용</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">]])</span>

<span class="c"># ndarray arr안에 10보다 큰 수가 몇개있는지 알아보려면</span>
<span class="c"># 어떻게 해야 하는가?</span>
<span class="c"># 여러가지 방법이 있지만 가장 쉽고 빠른 방법은 </span>
<span class="c"># boolean indexing을 이용하는 방법</span>

<span class="c"># arr &gt; 10 =&gt; boolean mask</span>
<span class="c"># True는 1로, False는 0으로 간주된다는 것을 기억하자.</span>

<span class="p">(</span><span class="n">arr</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span>    <span class="c"># 조건을 만족하는 개수(True의 개수)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">영상설명</strong></p>

<p>이번 영상은 NumPy <code class="highlighter-rouge">ndarray</code>의 정렬, 연결, 삭제에 대한 영상입니다.</p>

<p><strong class="subtitle2_fontAwesome">ndarray 정렬</strong></p>

<p><strong class="subtitle2_fontAwesome">NumPy concatenate() 함수</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray delete() 함수</strong></p>

<p><strong class="subtitle2_fontAwesome">ndarray loadtxt() 함수</strong></p>

<blockquote>
  <p>NumPy &amp; Pandas - 11.ndarray의 정렬, 연결, 삭제</p>
</blockquote>

<iframe width="939" height="528" src="https://www.youtube.com/embed/avvl2tNqbms" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray 정렬</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray 정렬</span>

<span class="c"># NumPy의 array는 axis를 기준으로 정렬하는 sort() 제공</span>
<span class="c"># 만약 axis를 지정하지 않으면 -1, </span>
<span class="c"># -1의 의미는 마지막 axis</span>
<span class="c"># np.sort() : 정렬된 결과 배열을 return</span>
<span class="c"># arr.sort() : 원본배열을 정렬. None return</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">shuffle</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>      <span class="c"># shuffle 처리</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>         <span class="c"># 오름차순 정렬한 새로운 배열 return</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">)[::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>   <span class="c"># 내림차순 정렬, 특수한 indexing이용</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>                  <span class="c"># 원본은 변함없음</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>

<span class="c">#################################</span>

<span class="c"># 2차원 배열 정렬</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">7</span><span class="p">],</span>
                <span class="p">[</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>    <span class="c"># 행 방향 정렬</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>    <span class="c"># 열 방향 정렬</span>

<span class="c"># 표준정규분포에서 </span>
<span class="c"># 200개의 샘플을 추출한 후 </span>
<span class="c"># 내림차순으로 상위 5%까지의 결과만 출력하세요!!</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">)[::</span><span class="o">-</span><span class="mi">1</span><span class="p">][:</span><span class="nb">int</span><span class="p">(</span><span class="mf">0.05</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">))]</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">NumPy concatenate() 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># NumPy concatenate() 함수</span>

<span class="c"># ndarray에 row(s) 또는 column(s)을 추가하기 위한 함수</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>

<span class="n">new_row</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">])</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">arr</span><span class="p">,</span><span class="n">new_row</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c">######################################</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>

<span class="n">new_col</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">])</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">arr</span><span class="p">,</span><span class="n">new_col</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>


</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray delete() 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray delete() 함수</span>

<span class="c"># delete() 함수는 axis를 기준으로 행과 열을 삭제</span>
<span class="c"># axis를 지정하지 않으면 1차배열로 변환 후 삭제</span>
<span class="c"># 원본배열을 변경하지 않고 새로운 배열 return</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="c">#####################</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>  <span class="c"># 1차 배열로 변환 후 1번 index 삭제</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c">#####################</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>  <span class="c"># 1번 행 삭제</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c">#####################</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>  <span class="c"># 3번 행 삭제</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<p><strong class="subtitle2_fontAwesome">ndarray loadtxt() 함수</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># ndarray loadtxt() 함수</span>

<span class="c"># numpy.loadtxt(fname, dtype='float', delimiter=' ', </span>
<span class="c">#  			    skiprows=0, usecols=None, unpack=False, ndmin=0, </span>
<span class="c">#               encoding='bytes', max_rows=None&gt;</span>
<span class="c"># 형식으로 사용됩니다. CSV 파일등으로부터 데이터를 읽어 ndarray를 생성하기 위한</span>
<span class="c"># 함수라고 보시면 됩니다.</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">"./data/seoul.csv"</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">","</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="nb">object</span><span class="p">,</span>
                 <span class="n">skiprows</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

</code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">Data-Science 강좌는 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 해당 사이트를 방문하세요!!</span></p>

<!--<ul class="lecture-reference">-->
<!--    <li><a href="http://www.python.org/" target="_blank">Python Official HomePage</a></li>-->
<!--    <li>점프 투 파이썬 - 이지스 퍼블리싱</li>-->
<!--    <li>전문가를 위한 파이썬(Fluent Python) - 한빛미디어</li>-->
<!--    <li>파이썬 웹 프로그래밍 - 한빛미디어</li>-->
<!--    <li>이미지 출처 : <a href="http://www.freepik.com" target="_blank">Designed by rawpixel.com / Freepik</a></li>-->
<!--</ul>-->


	  ]]></description>
	</item>


</channel>
</rss>
