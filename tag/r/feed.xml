<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>http://localhost:4000/</title>
   
   <link>http://localhost:4000/</link>
   <description>얼큰우동TV, 쉽게배우는 IT(Programming,Machine Learning,금융)</description>
   <language>en-uk</language>
   
   <title>
   <![CDATA[ IT Technical Training ]]>
   </title>
   <description>
   <![CDATA[ 얼큰우동TV, 쉽게배우는 IT(Programming,Machine Learning,금융) ]]>
   </description>
   <link>http://localhost:4000/</link>
   <image>
   <url>http://localhost:4000/assets/built/images/favicon.jpg</url>
   <title>IT Technical Training</title>
   <link>http://localhost:4000/</link>
   </image>
   <generator>Jekyll 3.6.2</generator>
   <lastBuildDate></lastBuildDate>
   <atom:link href="http://localhost:4000/rss.xml" rel="self" type="application/rss+xml"/>
   <ttl>60</ttl>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>R 기초강의(22) - R 정형데이터 처리</title>
	  <link>http://localhost:4000/R-lecture-R-database</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-22T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-database</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 정형데이터 처리</strong></p>

<p>R을 이용하여 분석할 수 있는 데이터의 형태는 정형화 정도에 따라 크게 3가지로
분류할 수 있습니다.</p>

<p><code class="highlighter-rouge">정형 데이터</code> : 고정된 필드에 저장된 데이터를 의미합니다. 주로 Database에 저장된
데이터를 지칭합니다.</p>

<p><code class="highlighter-rouge">반정형 데이터</code> : 태그를 포함하는 웹문서(HTML,XML)를 의미합니다.</p>

<p><code class="highlighter-rouge">비정형 데이터</code> : 고정된 필드에 저장되어 있지 않은 데이터(일반 텍스트)를 의미합니다.</p>

<p>이번에는 DBMS를 이용하여 Database안에 저장된 정형 데이터를 R에서 처리하는 과정을
살펴보겠습니다. 사용하는 예제는 기존에 MySQL에 구축한 도서 데이터를 이용하겠습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 정형 데이터 처리</span><span class="w">

</span><span class="c1"># MySQL Database 처리</span><span class="w">

</span><span class="c1"># 기존의 MySQL DBMS server를 기동하자</span><span class="w">
</span><span class="c1"># mysqld</span><span class="w">

</span><span class="c1"># R에서 MySQL DBMS에 연동하기 위해서는 몇가지 package가 필요</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"rJava"</span><span class="p">)</span><span class="w">  </span><span class="c1"># Java 기능을 이용</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"DBI"</span><span class="p">)</span><span class="w">    </span><span class="c1"># R Database Interface</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"RJDBC"</span><span class="p">)</span><span class="w">  </span><span class="c1"># JDBC 기능을 위한 package</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">rJava</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">DBI</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">RJDBC</span><span class="p">)</span><span class="w">

</span><span class="c1"># JRE 경로 설정</span><span class="w">
</span><span class="n">Sys.setenv</span><span class="p">(</span><span class="n">JAVA_HOME</span><span class="o">=</span><span class="s2">"C:/Program Files/Java/jre1.8.0_221"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 드라이버 설정</span><span class="w">

</span><span class="n">drv</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">JDBC</span><span class="p">(</span><span class="n">driverClass</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"com.mysql.jdbc.Driver"</span><span class="p">,</span><span class="w">
           </span><span class="n">classPath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/R_workspace/R_Lecture/mysql-connector-java-5.1.7-bin.jar"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Database 연결</span><span class="w">

</span><span class="n">conn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dbConnect</span><span class="p">(</span><span class="n">drv</span><span class="p">,</span><span class="w">
                  </span><span class="s2">"jdbc:mysql://localhost:3306/library"</span><span class="p">,</span><span class="w">
                  </span><span class="s2">"data"</span><span class="p">,</span><span class="w">
                  </span><span class="s2">"data"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Query 실행</span><span class="w">
</span><span class="n">sql</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"select btitle from book"</span><span class="w">
</span><span class="n">bookTitle</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dbGetQuery</span><span class="p">(</span><span class="n">conn</span><span class="p">,</span><span class="w"> </span><span class="n">sql</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">bookTitle</span><span class="p">)</span><span class="w">

</span><span class="n">sql</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"select btitle,bprice from book"</span><span class="w">
</span><span class="n">books</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dbGetQuery</span><span class="p">(</span><span class="n">conn</span><span class="p">,</span><span class="w"> </span><span class="n">sql</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">books</span><span class="p">)</span><span class="w">

</span><span class="n">sql</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"select btitle,bprice from book where bprice &gt; 30000"</span><span class="w">
</span><span class="n">books</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dbGetQuery</span><span class="p">(</span><span class="n">conn</span><span class="p">,</span><span class="w"> </span><span class="n">sql</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">books</span><span class="p">)</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">

</span><span class="n">sql</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="s2">"select btitle,bprice "</span><span class="p">,</span><span class="w">
            </span><span class="s2">"from book "</span><span class="p">,</span><span class="w">
            </span><span class="s2">"where bprice &gt; 30000 "</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order by bprice desc"</span><span class="p">)</span><span class="w">
</span><span class="n">books</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dbGetQuery</span><span class="p">(</span><span class="n">conn</span><span class="p">,</span><span class="w"> </span><span class="n">sql</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">books</span><span class="p">)</span><span class="w">

</span><span class="c1"># 데이터베이스 연결 종료</span><span class="w">
</span><span class="n">dbDisconnect</span><span class="p">(</span><span class="n">conn</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(21) - R ggmap</title>
	  <link>http://localhost:4000/R-lecture-R-ggmap</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-21T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-ggmap</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R ggmap</strong></p>

<p>구글 지도 서비스를 활용할 수 있도록 도와주는 package인 ggmap에 대해서 알아보겠습니다.</p>

<p>Google Map Platform은 Googl API Key를 이용해야 합니다. 
따라서 추가적인 몇가지 package를 설치하고 로드해야 합니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#</span><span class="w">
</span><span class="c1"># Google Map Platform을 사용해보자</span><span class="w">

</span><span class="c1"># 사용하고 있는 R 버전 확인</span><span class="w">
</span><span class="c1"># 현재 3.6.1을 사용하고 있음.</span><span class="w">
</span><span class="c1"># 현재시점(2019.11)에서 </span><span class="w">
</span><span class="c1"># ggmap을 사용하려면 3.5.x 버전이 필요</span><span class="w">
</span><span class="c1"># 3.5.3 버전을 설치하자</span><span class="w">

</span><span class="n">sessionInfo</span><span class="p">()</span><span class="w">   </span><span class="c1"># 현재 3.5.3 사용</span><span class="w">

</span><span class="c1"># 필요한 package 설치 및 load</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">devtools</span><span class="p">)</span><span class="w">

</span><span class="n">install_github</span><span class="p">(</span><span class="s1">'dkahle/ggmap'</span><span class="p">,</span><span class="w"> </span><span class="n">force</span><span class="o">=</span><span class="nb">T</span><span class="p">)</span><span class="w">  </span><span class="c1"># 3.5.3 에서는 force=T 추가</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggmap</span><span class="p">)</span><span class="w">         </span><span class="c1"># API 이용 약관에 동의해야 한다.</span><span class="w">

</span><span class="c1"># 생성한 Google API Key</span><span class="w">
</span><span class="n">googleAPIKey</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"AIzaSyDb8Oqv9AqTVBFWUKyOZh1SkSv_9SeEtKI"</span><span class="w">

</span><span class="c1"># API Key 인증을 하기 전에 Google Map Platform Console에서</span><span class="w">
</span><span class="c1"># 추가 API항목에 있는 API를 사용 설정된 API로 적용시켜야 한다.</span><span class="w">
</span><span class="c1"># 예) Geocoding API</span><span class="w">

</span><span class="c1"># Google API Key 인증</span><span class="w">
</span><span class="n">register_google</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="n">googleAPIKey</span><span class="p">)</span><span class="w">

</span><span class="c1"># 서울지역의 정보를 가져온다.</span><span class="w">
</span><span class="n">gg_seoul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_googlemap</span><span class="p">(</span><span class="s2">"seoul"</span><span class="p">,</span><span class="n">maptype</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"roadmap"</span><span class="p">)</span><span class="w">

</span><span class="n">ggmap</span><span class="p">(</span><span class="n">gg_seoul</span><span class="p">)</span><span class="w">

</span><span class="c1">##################################</span><span class="w">

</span><span class="c1"># 위의 내용이 성공했다면 </span><span class="w">
</span><span class="c1"># 특정위치를 지정해서 </span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">

</span><span class="n">geo_code</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">geocode</span><span class="p">(</span><span class="n">enc2utf8</span><span class="p">(</span><span class="s2">"공덕역"</span><span class="p">))</span><span class="w">

</span><span class="n">geo_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">geo_code</span><span class="p">)</span><span class="w">  </span><span class="c1"># vector로 변환</span><span class="w">

</span><span class="n">get_googlemap</span><span class="p">(</span><span class="n">center</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">geo_data</span><span class="p">,</span><span class="w">
              </span><span class="n">maptype</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"roadmap"</span><span class="p">,</span><span class="w">
              </span><span class="n">zoom</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">16</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggmap</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">geo_code</span><span class="p">,</span><span class="w">
             </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">lon</span><span class="p">,</span><span class="w">
                 </span><span class="n">y</span><span class="o">=</span><span class="n">lat</span><span class="p">),</span><span class="w">
             </span><span class="n">size</span><span class="o">=</span><span class="m">5</span><span class="p">,</span><span class="w">
             </span><span class="n">color</span><span class="o">=</span><span class="s2">"red"</span><span class="p">)</span><span class="w">

</span><span class="c1">##################################</span><span class="w">

</span><span class="c1"># 위치정보를 가져온다</span><span class="w">

</span><span class="n">addr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"공덕역"</span><span class="p">,</span><span class="s2">"역삼역"</span><span class="p">)</span><span class="w">
</span><span class="n">gc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">geocode</span><span class="p">(</span><span class="n">enc2utf8</span><span class="p">(</span><span class="n">addr</span><span class="p">))</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">lon</span><span class="o">=</span><span class="n">gc</span><span class="o">$</span><span class="n">lon</span><span class="p">,</span><span class="w">
                 </span><span class="n">lat</span><span class="o">=</span><span class="n">gc</span><span class="o">$</span><span class="n">lat</span><span class="p">)</span><span class="w">

</span><span class="n">cen</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">lon</span><span class="p">),</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">lat</span><span class="p">))</span><span class="w">
</span><span class="n">map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_googlemap</span><span class="p">(</span><span class="n">center</span><span class="o">=</span><span class="n">cen</span><span class="p">,</span><span class="w">
                     </span><span class="n">maptype</span><span class="o">=</span><span class="s2">"roadmap"</span><span class="p">,</span><span class="w">
                     </span><span class="n">zoom</span><span class="o">=</span><span class="m">13</span><span class="p">,</span><span class="w">
                     </span><span class="n">size</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">640</span><span class="p">,</span><span class="m">640</span><span class="p">),</span><span class="w">
                     </span><span class="n">marker</span><span class="o">=</span><span class="n">gc</span><span class="p">)</span><span class="w">
</span><span class="n">ggmap</span><span class="p">(</span><span class="n">map</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Goolge Map Platform과 공공데이터 포털에서 제공하는 데이터를 이용하면
다양한 분석내용을 지도에 표현할 수 있습니다.</p>

<p>예를 들면</p>

<p>지하철역 주소 정보 : 서울 열린 데이터 광장</p>

<p>아파트 실 거래금액 데이터 : 국토교통부 실거래가 공개시스템</p>

<p>데이터를 이용하여 서울시 지도에 가격별로 아파트 가격에 대한
정보를 표현할 수 있습니다.</p>

<hr />

<p><strong class="subtitle_fontAwesome">R interactive graph</strong></p>

<p>인터렉티브 그래프란, 마우스 움직임에 반응하여 실시간으로 형태가 변하는 그래프를
의미합니다. 인터렉티브 그래프를 이용하면 그래프를 자유롭게 조작하면서 관심있는
부분을 자세히 볼 수 있습니다.</p>

<p>이런 그래프를 HTML형식으로 저장하면 일반 사용자들도 분석된 그래프를 웹 브라우져를
이용하여 그래프를 조작할 수 있습니다.</p>

<p>사용하는 package는 <code class="highlighter-rouge">plotly</code> 입니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># interactive graph</span><span class="w">

</span><span class="c1"># 필요한 package를 설치합니다.</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"plotly"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">plotly</span><span class="p">)</span><span class="w">

</span><span class="c1"># ggplot2를 이용하여 만든 그래프를 plotly의 ggplotly() 함수를</span><span class="w">
</span><span class="c1"># 이용하면 인터렉티브 그래프가 생성됩니다. </span><span class="w">

</span><span class="c1"># 기존에 했던 mpg data set을 이용하여 배기량과 고속도로 연비에 대한</span><span class="w">
</span><span class="c1"># 산점도를 먼저 그려보겠습니다. </span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="n">g</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
            </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">displ</span><span class="p">,</span><span class="w">
                </span><span class="n">y</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"red"</span><span class="p">)</span><span class="w">

</span><span class="n">ggplotly</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w"> 

</span><span class="c1">######################</span><span class="w">

</span><span class="c1"># ggmap으로 처리했던 내용을 ggplotly()를 이용하여</span><span class="w">
</span><span class="c1"># interactive하게 만들어보자!</span><span class="w">

</span><span class="n">addr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"공덕역"</span><span class="p">,</span><span class="s2">"역삼역"</span><span class="p">)</span><span class="w">
</span><span class="n">gc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">geocode</span><span class="p">(</span><span class="n">enc2utf8</span><span class="p">(</span><span class="n">addr</span><span class="p">))</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">lon</span><span class="o">=</span><span class="n">gc</span><span class="o">$</span><span class="n">lon</span><span class="p">,</span><span class="w">
                 </span><span class="n">lat</span><span class="o">=</span><span class="n">gc</span><span class="o">$</span><span class="n">lat</span><span class="p">)</span><span class="w">

</span><span class="n">cen</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">lon</span><span class="p">),</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">lat</span><span class="p">))</span><span class="w">
</span><span class="n">map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_googlemap</span><span class="p">(</span><span class="n">center</span><span class="o">=</span><span class="n">cen</span><span class="p">,</span><span class="w">
                     </span><span class="n">maptype</span><span class="o">=</span><span class="s2">"roadmap"</span><span class="p">,</span><span class="w">
                     </span><span class="n">zoom</span><span class="o">=</span><span class="m">13</span><span class="p">,</span><span class="w">
                     </span><span class="n">size</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">640</span><span class="p">,</span><span class="m">640</span><span class="p">),</span><span class="w">
                     </span><span class="n">marker</span><span class="o">=</span><span class="n">gc</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggmap</span><span class="p">(</span><span class="n">map</span><span class="p">)</span><span class="w">

</span><span class="n">ggplotly</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>일반적인 그래프와는 다르게 시계열 그래프는 interactive graph를 생성할 때
단순 확대, 축소 기능이 필요한게 아니라 시간축을 움직이면서 시간에 따라
데이터가 어떻게 변하는지 확인하는 기능이 필요합니다.</p>

<p>따라서 시계열 그래프는 다른 package를 이용하여 interactive graph를 
생성합니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 시계열 그래프를 interactive하게 만들어보자</span><span class="w">

</span><span class="c1"># 필요한 package를 설치합니다.</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"dygraphs"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dygraphs</span><span class="p">)</span><span class="w">

</span><span class="c1"># 사용할 데이터는 시계열 데이터가 있어야 하므로</span><span class="w">
</span><span class="c1"># economics data set을 이용합니다.</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">economics</span><span class="p">)</span><span class="w">

</span><span class="c1"># dygraphs를 이용하려면 데이터가 시간 순서 속성을</span><span class="w">
</span><span class="c1"># 지니는 xts data type으로 되어 있어야 합니다.</span><span class="w">

</span><span class="c1"># economics의 개인별 저축율을 xts type으로 변환합니다.</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">xts</span><span class="p">)</span><span class="w">

</span><span class="n">save_rate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xts</span><span class="p">(</span><span class="n">economics</span><span class="o">$</span><span class="n">psavert</span><span class="p">,</span><span class="w">
                 </span><span class="n">order.by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">economics</span><span class="o">$</span><span class="n">date</span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">save_rate</span><span class="p">)</span><span class="w">

</span><span class="c1"># 시계열 그래프를 그린다.</span><span class="w">

</span><span class="n">dygraph</span><span class="p">(</span><span class="n">save_rate</span><span class="p">)</span><span class="w">

</span><span class="c1"># 그래프 아래에 날짜 범위를 선택할 수 있는 selector를</span><span class="w">
</span><span class="c1"># 추가할 수 있습니다.</span><span class="w">

</span><span class="n">dygraph</span><span class="p">(</span><span class="n">save_rate</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">dyRangeSelector</span><span class="p">()</span><span class="w">

</span><span class="c1"># 한번에 하나의 그래프를 그리는 것뿐 아니라</span><span class="w">
</span><span class="c1"># 여러개의 그래프를 그릴 수 있습니다.</span><span class="w">

</span><span class="c1"># 실업자수와 개인저축률을 시간순으로 interactive하게</span><span class="w">
</span><span class="c1"># 그래프로 표현해보자!</span><span class="w">

</span><span class="c1"># unemploy와 psavert를 xts type으로 변경</span><span class="w">

</span><span class="c1"># 비율을 맞춰야 한다.</span><span class="w">
</span><span class="n">unemp_xts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xts</span><span class="p">(</span><span class="n">economics</span><span class="o">$</span><span class="n">unemploy</span><span class="o">/</span><span class="m">1000</span><span class="p">,</span><span class="w">
                 </span><span class="n">order.by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">economics</span><span class="o">$</span><span class="n">date</span><span class="p">)</span><span class="w">

</span><span class="n">savert_xts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xts</span><span class="p">(</span><span class="n">economics</span><span class="o">$</span><span class="n">psavert</span><span class="p">,</span><span class="w">
                  </span><span class="n">order.by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">economics</span><span class="o">$</span><span class="n">date</span><span class="p">)</span><span class="w">

</span><span class="c1"># cbind()를 이용하여 가로로 병합하자</span><span class="w">

</span><span class="n">unemp_save</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">unemp_xts</span><span class="p">,</span><span class="n">savert_xts</span><span class="p">)</span><span class="w">

</span><span class="n">colnames</span><span class="p">(</span><span class="n">unemp_save</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"실업자수"</span><span class="p">,</span><span class="s2">"개인저축률"</span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">unemp_save</span><span class="p">)</span><span class="w">

</span><span class="n">dygraph</span><span class="p">(</span><span class="n">unemp_save</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">dyRangeSelector</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(20) - R 연습문제</title>
	  <link>http://localhost:4000/R-lecture-R-exercise</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-20T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-exercise</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 연습문제</strong></p>

<p>지금까지 배운 내용을 기본으로 데이터 분석 연습문제를 풀어겠습니다.</p>

<p>실습데이터는 <code class="highlighter-rouge">한국복지패널데이터</code>를 이용합니다. 이 데이터는 한국보건사회연구원에서
전국 7000여 가구를 선정해 2006년부터 매년 추적 조사한 자료로, 경제활동, 생활실태,
복지욕구등 천여 개 변수로 구성되어 있습니다.</p>

<p>해당 데이터에는 우리나라의 다양한 삶에 대한 데이터가 들어있고 이를 분석하면 대한민국
사람들이 어떻게 살아가고 있는가를 분석할 수 있습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 한국복지패널데이터를 이용한 데이터 분석 연습</span><span class="w">

</span><span class="c1"># 1. 데이터 준비</span><span class="w">

</span><span class="c1"># 제공된 데이터를 이용합니다. </span><span class="w">
</span><span class="c1"># Koweps_hpc10_2015_beta1.sav (128M)</span><span class="w">
</span><span class="c1"># 상용 통계분석 소프트웨어인 SPSS 전용파일로 제공</span><span class="w">

</span><span class="c1"># 해당 데이터 파일은 SPSS 전용파일이기 때문에 R에서 사용하기 </span><span class="w">
</span><span class="c1"># 위해서 foreign package를 이용해야 합니다. </span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"foreign"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">foreign</span><span class="p">)</span><span class="w">

</span><span class="c1"># 사용할 package load</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">xlsx</span><span class="p">)</span><span class="w">

</span><span class="c1"># 데이터 불러오기</span><span class="w">

</span><span class="c1"># raw data 불러오기</span><span class="w">
</span><span class="n">data_file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/R_workspace/R_Lecture/data/한국복지패널데이터/Koweps_hpc10_2015_beta1.sav"</span><span class="w">
</span><span class="n">raw_welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.spss</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="n">data_file</span><span class="p">,</span><span class="w">
                         </span><span class="n">to.data.frame</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">raw_welfare</span><span class="p">)</span><span class="w">

</span><span class="n">welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">raw_welfare</span><span class="w">   </span><span class="c1"># 원본 데이터 보존</span><span class="w">

</span><span class="c1"># 데이터 특성 확인</span><span class="w">

</span><span class="n">str</span><span class="p">(</span><span class="n">welfare</span><span class="p">)</span><span class="w">   </span><span class="c1"># 16664 row, 957 column </span><span class="w">

</span><span class="c1"># 코드북을 이용해 분석에 필요한 column의 이름을 변경합니다.</span><span class="w">

</span><span class="n">welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rename</span><span class="p">(</span><span class="n">welfare</span><span class="p">,</span><span class="w">
                  </span><span class="n">gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">h</span><span class="m">10</span><span class="err">_</span><span class="n">g</span><span class="m">3</span><span class="p">,</span><span class="w">         </span><span class="c1"># 성별</span><span class="w">
                  </span><span class="n">birth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">h</span><span class="m">10</span><span class="err">_</span><span class="n">g</span><span class="m">4</span><span class="p">,</span><span class="w">          </span><span class="c1"># 태어난 연도</span><span class="w">
                  </span><span class="n">marriage</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">h</span><span class="m">10</span><span class="err">_</span><span class="n">g</span><span class="m">10</span><span class="p">,</span><span class="w">      </span><span class="c1"># 혼인 상태 </span><span class="w">
                  </span><span class="n">religion</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">h</span><span class="m">10</span><span class="err">_</span><span class="n">g</span><span class="m">11</span><span class="p">,</span><span class="w">      </span><span class="c1"># 종교</span><span class="w">
                  </span><span class="n">income</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">p</span><span class="m">1002</span><span class="err">_</span><span class="m">8</span><span class="n">aq1</span><span class="p">,</span><span class="w">     </span><span class="c1"># 월급</span><span class="w">
                  </span><span class="n">code_job</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">h</span><span class="m">10</span><span class="err">_</span><span class="n">eco9</span><span class="p">,</span><span class="w">     </span><span class="c1"># 직업 코드</span><span class="w">
                  </span><span class="n">code_region</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">h</span><span class="m">10</span><span class="err">_</span><span class="n">reg7</span><span class="p">)</span><span class="w">  </span><span class="c1"># 지역 코드</span><span class="w">

</span><span class="c1"># 해당 내용을 이용하여 데이터 분석을 진행해보자</span><span class="w">

</span><span class="c1">#################################################</span><span class="w">

</span><span class="c1"># 1. 성별에 따른 월급 차이</span><span class="w">
</span><span class="c1"># 과거에 비해 여성의 사회 진출이 활발하지만 직장에서의</span><span class="w">
</span><span class="c1"># 위상에서는 여전히 차별이 존재하고 있는것이 사실.</span><span class="w">
</span><span class="c1"># 실제로 그러한지 월급의 차이를 이용하여 사실을 확인해보자</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">gender</span><span class="p">)</span><span class="w">  </span><span class="c1"># 남자 1, 여자 2</span><span class="w">
</span><span class="c1"># 1은 male, 2는 female로 변환</span><span class="w">
</span><span class="n">welfare</span><span class="o">$</span><span class="n">gender</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="s2">"male"</span><span class="p">,</span><span class="s2">"female"</span><span class="p">)</span><span class="w">

</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">gender</span><span class="p">)</span><span class="w">  </span><span class="c1"># 남자 male, 여자 female</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="p">)</span><span class="w">  </span><span class="c1"># numeric</span><span class="w">

</span><span class="n">summary</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="p">)</span><span class="w"> </span><span class="c1"># 월평균임금. 만원단위</span><span class="w">
                        </span><span class="c1"># 전체적으로 122만원과 316만원 사이에 위치.</span><span class="w">
                        </span><span class="c1"># 중간값이 평균보다 작기 때문에 전체적으로 낮은 값 쪽으로 치우쳐 있다.</span><span class="w">

</span><span class="c1"># 그래프로 확인해보자( 확인할 때는 qplot이용 )</span><span class="w">
</span><span class="n">qplot</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">xlim</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1000</span><span class="p">)</span><span class="w">
</span><span class="c1"># 0~250만원 사이에 가장 많은 사람이 분포하고 있다.</span><span class="w">

</span><span class="c1"># 결측치가 12030 존재 =&gt; 월급을 받지 않은 응답자.</span><span class="w">
</span><span class="c1"># 결측치부터 제거해야 한다.</span><span class="w">
</span><span class="c1"># 또한 값이 0 이거나 무응답에 해당하는 9999는 이상치 처리</span><span class="w">
</span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">9999</span><span class="p">),</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
                         </span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="p">)</span><span class="w">

</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="c1"># NA값이 12044개</span><span class="w">

</span><span class="n">gender_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">gender</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_income</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w">

</span><span class="n">gender_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">gender_income</span><span class="p">)</span><span class="w">

</span><span class="n">gender_income</span><span class="w">

</span><span class="c1"># 그래프 그리기</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">gender_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">gender</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">0.5</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s2">"성별"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="o">=</span><span class="s2">"평균 월급"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">title</span><span class="o">=</span><span class="s2">"성별에 따른 월급차이"</span><span class="p">,</span><span class="w">
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"남성이 여성보다 평균 월급이 150만원 많다"</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"(Example 1)"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 결과</span><span class="w">
</span><span class="c1"># 남성 평균 월급 : 312.2932</span><span class="w">
</span><span class="c1"># 여성 평균 월급 : 163.2471</span><span class="w">
</span><span class="c1"># 남성이 여성보다 월급이 약 150만원 많다.</span><span class="w">
</span><span class="c1"># 해당 결과를 ggplot2를 이용하여 그래프로 표현하자</span><span class="w">

</span><span class="c1">##########################################</span><span class="w">

</span><span class="c1"># 2. 나이와 월급의 관계</span><span class="w">
</span><span class="c1"># 몇 살 때 월급을 가장 많이 받을까? 또 그때의 월급은 얼마인가?</span><span class="w">
</span><span class="c1"># 월급을 가장 많이 받는 나이는 : 53살 월급 : 318.6777</span><span class="w">

</span><span class="c1"># 나이에 따른월급을 선 그래프로 표현하자</span><span class="w">
</span><span class="nf">class</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">)</span><span class="w">
</span><span class="n">qplot</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">)</span><span class="w">  </span><span class="c1"># 빈도를 알아보자</span><span class="w">
</span><span class="c1"># 코드북에 따르면 출생연도는 1900~2014이며 무응답은 9999</span><span class="w">
</span><span class="c1"># 먼저 결측치가 존재하는지 확인</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">))</span><span class="w">  </span><span class="c1"># 결측치는 존재하지 않는다</span><span class="w">

</span><span class="c1"># 이상치를 확인한다.</span><span class="w">
</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">9999</span><span class="p">,</span><span class="w">
                        </span><span class="kc">NA</span><span class="p">,</span><span class="w">
                        </span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">)</span><span class="w">

</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">birth</span><span class="p">))</span><span class="w">  </span><span class="c1"># 이상치도 존재하지 않는다.</span><span class="w">

</span><span class="c1"># 나이를 구해야 하니 파생변수 age를 생성</span><span class="w">
</span><span class="n">welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">age</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2015</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">birth</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">age</span><span class="p">)</span><span class="w">  </span><span class="c1"># 나이 확인</span><span class="w">
</span><span class="n">qplot</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">age</span><span class="p">)</span><span class="w">    </span><span class="c1"># 나이 빈도 확인</span><span class="w">

</span><span class="c1"># 전처리가 끝났으니 이제 나이에 따른 월급의 관계를 분석</span><span class="w">
</span><span class="c1"># 나이별 평균월급을 구하자</span><span class="w">
</span><span class="n">age_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">   </span><span class="c1"># 월급이 있는 사람만 filtering</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">age</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_income</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">age_income</span><span class="p">)</span><span class="w">
</span><span class="n">age_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">age_income</span><span class="p">)</span><span class="w">

</span><span class="c1"># 가장 월급을 많이 받는 나이는?</span><span class="w">
</span><span class="n">age_income</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">

</span><span class="c1"># 결과에 대한 선 그래프를 그려보자</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">age_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_hline</span><span class="p">(</span><span class="n">yintercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">age_income</span><span class="o">$</span><span class="n">mean_income</span><span class="p">))</span><span class="w">

</span><span class="c1"># 20초반에는 100만원가량</span><span class="w">
</span><span class="c1"># 40대부터 50대 중반까지 300만원 으로 가장많은 월급</span><span class="w">
</span><span class="c1"># 60대 이후로는 급격히 감소하는 추세</span><span class="w">
</span><span class="c1"># 평균 이상의 월급을 받는 나이는 20대 말에서 60대 초반까지</span><span class="w">


</span><span class="c1">#################################</span><span class="w">


</span><span class="c1"># 3. 연령대에 따른 월급 차이</span><span class="w">
</span><span class="c1"># 30세 미만을 초년(young), </span><span class="w">
</span><span class="c1"># 30~59세 : 중년(middle), </span><span class="w">
</span><span class="c1"># 60세 이상 : 노년(old)</span><span class="w">
</span><span class="c1"># 위의 범주로 연령대에 따른 월급의 차이를 알아보자</span><span class="w">

</span><span class="c1"># 연령대(age_group) column을 조건에 맞게 추가하자</span><span class="w">
</span><span class="n">welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">age_group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">age</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">30</span><span class="p">,</span><span class="s2">"young"</span><span class="p">,</span><span class="w">
                            </span><span class="n">ifelse</span><span class="p">(</span><span class="n">age</span><span class="w"> </span><span class="o">&lt;</span><span class="m">60</span><span class="p">,</span><span class="s2">"middle"</span><span class="p">,</span><span class="s2">"old"</span><span class="p">)))</span><span class="w">
         
</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">age_group</span><span class="p">)</span><span class="w">
</span><span class="n">qplot</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">age_group</span><span class="p">)</span><span class="w">

</span><span class="c1"># 연령대별 평균 월급을 구해보자</span><span class="w">
</span><span class="n">age_group_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">age_group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_income</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w">

</span><span class="n">age_group_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">age_group_income</span><span class="p">)</span><span class="w">
</span><span class="n">age_group_income</span><span class="w">

</span><span class="c1"># 초년(young) : 163.5953</span><span class="w">
</span><span class="c1"># 중년(middle) : 281.8871</span><span class="w">
</span><span class="c1"># 노년(old) : 125.3295</span><span class="w">

</span><span class="c1"># 해당 결과를 그래프로 표현하자</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">age_group_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age_group</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">0.5</span><span class="p">)</span><span class="w">
</span><span class="c1"># ggplot은 기본적으로 막대변수를 알파벳 순으로 오름차순</span><span class="w">
</span><span class="c1"># 정렬. 막대가 young, middle, old 순으로 정렬해보자</span><span class="w">
</span><span class="c1"># scale_x_discrete(limits=c("young","middle","old")) 이용</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">age_group_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age_group</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">0.5</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">limits</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"young"</span><span class="p">,</span><span class="s2">"middle"</span><span class="p">,</span><span class="s2">"old"</span><span class="p">))</span><span class="w">


</span><span class="c1">############################################</span><span class="w">


</span><span class="c1"># 4. 연령대 및 성별 월급 차이</span><span class="w">
</span><span class="c1"># 성별 월급 차이는 연령대에 따라 다른 양상을 보일 수 있습니다.</span><span class="w">
</span><span class="c1"># 성별 월급 차이가 연령대에 따라 다른지 분석해보자</span><span class="w">

</span><span class="c1"># 기존에는 3그룹(초년,중년,노년)이었지만 이젠 6그룹으로</span><span class="w">
</span><span class="c1"># 그룹핑을 해야 한다.(초년남성,초년여성,..)</span><span class="w">
</span><span class="n">gender_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">age_group</span><span class="p">,</span><span class="n">gender</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_income</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w">

</span><span class="n">gender_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">gender_income</span><span class="p">)</span><span class="w">
</span><span class="n">gender_income</span><span class="w">

</span><span class="c1"># 초년 남성 : 170.81737</span><span class="w">
</span><span class="c1"># 초년 여성 : 159.50518</span><span class="w">
</span><span class="c1"># 중년 남성 : 353.07574</span><span class="w">
</span><span class="c1"># 중년 여성 : 187.97552</span><span class="w">
</span><span class="c1"># 노년 남성 : 173.85558</span><span class="w">
</span><span class="c1"># 노년 여성 : 81.52917</span><span class="w">

</span><span class="c1"># 그래프로 표현해 보자</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">gender_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age_group</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">,</span><span class="w">
           </span><span class="n">fill</span><span class="o">=</span><span class="n">gender</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">    </span><span class="c1"># 누적 그래프</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">limits</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"young"</span><span class="p">,</span><span class="s2">"middle"</span><span class="p">,</span><span class="s2">"old"</span><span class="p">))</span><span class="w">

</span><span class="c1"># 다르게 표현하면 다음과 같이 표현해도 된다.</span><span class="w">
</span><span class="n">plot.new</span><span class="p">()</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">gender_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age_group</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">    
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="n">gender</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">limits</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"young"</span><span class="p">,</span><span class="s2">"middle"</span><span class="p">,</span><span class="s2">"old"</span><span class="p">))</span><span class="w">

</span><span class="c1"># 누적 그래프는 우리가 원하는 정보를 얻기가 힘들다</span><span class="w">

</span><span class="c1"># 누적시키지 않고 옆으로 따로 막대를 분리</span><span class="w">
</span><span class="c1"># position = "dodge" 이용</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">gender_income</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age_group</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">    
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="n">gender</span><span class="p">),</span><span class="w"> </span><span class="n">position</span><span class="o">=</span><span class="s2">"dodge"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">limits</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"young"</span><span class="p">,</span><span class="s2">"middle"</span><span class="p">,</span><span class="s2">"old"</span><span class="p">))</span><span class="w">

</span><span class="c1"># 사회초년생일때는 남녀의 월급이 큰 차이가 없지만</span><span class="w">
</span><span class="c1"># 중년으로 들어서면 월급의 차이가 크게 벌어진다.</span><span class="w">
</span><span class="c1"># 남성의 경우 초년과 노년의 월급차이가 크지 않다는 것을</span><span class="w">
</span><span class="c1"># 파악할 수 있다.</span><span class="w">

</span><span class="c1">##############################################</span><span class="w">

</span><span class="c1"># 5. 나이 및 성별 월급 차이 분석</span><span class="w">
</span><span class="c1"># 연령대를 구분하지 않고 나이 및 성별 월급 평균표를 만들어서</span><span class="w">
</span><span class="c1"># 그래프로 표현해 보자</span><span class="w">
</span><span class="c1"># 선 그래프로 표현하고 월급 평균 선이 성별에 따라 다른 색으로</span><span class="w">
</span><span class="c1"># 표현되도록 한다.</span><span class="w">

</span><span class="n">gender_age</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">age</span><span class="p">,</span><span class="n">gender</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_income</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w">

</span><span class="n">gender_age</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">gender_age</span><span class="p">)</span><span class="w">
</span><span class="n">gender_age</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">gender_age</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">age</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">,</span><span class="w">
           </span><span class="n">col</span><span class="o">=</span><span class="n">gender</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="c1"># 30살 이후가 되면 여성과 남성의 월급차가 급격히 벌어진다.</span><span class="w">
</span><span class="c1"># 남성의 경우 60세 이후가 되면 월급이 급격히 감소하는 현상</span><span class="w">


</span><span class="c1">###############################################</span><span class="w">


</span><span class="c1"># 6. 직업별 월급 차이</span><span class="w">
</span><span class="c1"># 어떤 직업이 월급을 가장 많이 받을까?</span><span class="w">
</span><span class="c1"># 직업별 월급을 분석해 보자</span><span class="w">
</span><span class="c1"># 직업코드는 제공된 PDF에서 직업분류코드(제6차 개정)에 명시되어</span><span class="w">
</span><span class="c1"># 있습니다.</span><span class="w">
</span><span class="c1"># 하지만 조금 편하게 코드작업을 하기 위해서 </span><span class="w">
</span><span class="c1"># 제공된 Koweps_Codebook.xlsx을 이용하면 편하게 코드값을 이용</span><span class="w">
</span><span class="c1"># 할 수 있습니다.</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">job_code</span><span class="p">)</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">job_code</span><span class="p">)</span><span class="w">

</span><span class="n">code_job_file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/R_workspace/R_Lecture/data/한국복지패널데이터/Koweps_Codebook.xlsx"</span><span class="w">
</span><span class="c1"># 직업 code값이 들어 있는 excel파일 불러오기</span><span class="w">
</span><span class="n">raw_code_job</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.xlsx</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="n">code_job_file</span><span class="p">,</span><span class="w"> </span><span class="n">sheetIndex</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="w">
                          </span><span class="n">encoding</span><span class="o">=</span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">

</span><span class="n">code_job</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">raw_code_job</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">code_job</span><span class="p">)</span><span class="w">

</span><span class="c1"># 두 data frame을 join해서 welface에 결합</span><span class="w">

</span><span class="n">welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">welfare</span><span class="p">,</span><span class="n">code_job</span><span class="p">,</span><span class="w">
                     </span><span class="n">by</span><span class="o">=</span><span class="s2">"code_job"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 정상적으로 결합되었는지 확인해보자</span><span class="w">
</span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">code_job</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">code_job</span><span class="p">,</span><span class="n">job</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="c1"># 직업별 월급 평균을 구하자</span><span class="w">
</span><span class="c1"># 직업이 없거나 월급이 없는 사람은 제외</span><span class="w">
</span><span class="n">job_income</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_income</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">income</span><span class="p">))</span><span class="w">

</span><span class="n">job_income</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">job_income</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">job_income</span><span class="p">)</span><span class="w">

</span><span class="n">top10</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">job_income</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="n">top10</span><span class="w">
</span><span class="c1"># 작성된 내용을 그래프로 표현해보자</span><span class="w">
</span><span class="c1"># 직업이름이 길기 때문에 일반 막대그래프로는</span><span class="w">
</span><span class="c1"># 표현이 힘들다. 가로로 90도 회전시켜서 표현</span><span class="w">
</span><span class="c1"># 월급이 많은 순으로 reorder시켜서 표현</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">top10</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">job</span><span class="p">,</span><span class="n">mean_income</span><span class="p">),</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w">

</span><span class="c1"># 추가로 월급이 적은 하위 10개의 직업도 추출해보자</span><span class="w">
</span><span class="n">bottom10</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">job_income</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">tail</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="n">bottom10</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">bottom10</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">job</span><span class="p">,</span><span class="o">-</span><span class="n">mean_income</span><span class="p">),</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">mean_income</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w">


</span><span class="c1">###########################################</span><span class="w">


</span><span class="c1"># 7. 성별 직업 빈도</span><span class="w">
</span><span class="c1"># 성별로 어떤 직업이 가장 많을까?</span><span class="w">
</span><span class="c1"># 원자료를 이용한 빈도는 geom_bar()를 이용하고</span><span class="w">
</span><span class="c1"># 요약표를 이용한 빈도는 geom_col()를 이용합니다.</span><span class="w">

</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">code_job</span><span class="p">))</span><span class="w">

</span><span class="c1">#남성 직업 빈도를 구해보자</span><span class="w">
</span><span class="n">job_male</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">job</span><span class="p">),</span><span class="w">
         </span><span class="n">gender</span><span class="o">==</span><span class="s2">"male"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="n">job_male</span><span class="w">

</span><span class="n">job_female</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">job</span><span class="p">),</span><span class="w">
         </span><span class="n">gender</span><span class="o">==</span><span class="s2">"female"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">job</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="n">job_female</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">job_male</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">job</span><span class="p">,</span><span class="n">n</span><span class="p">),</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w">


</span><span class="c1"># 8. 종교 유무에 따른 이혼율</span><span class="w">
</span><span class="c1"># 종교가 있는 사람들이 이혼을 덜 할까??</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">religion</span><span class="p">)</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">religion</span><span class="p">)</span><span class="w">  </span><span class="c1"># 1 : 종교있음. 2: 종교없음</span><span class="w">
                         </span><span class="c1"># 3 : 무응답</span><span class="w">
</span><span class="c1"># 이상치와 결측치가 없다</span><span class="w">

</span><span class="n">welfare</span><span class="o">$</span><span class="n">religion</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">religion</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                           </span><span class="s2">"yes"</span><span class="p">,</span><span class="s2">"no"</span><span class="p">)</span><span class="w">
</span><span class="n">qplot</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">religion</span><span class="p">)</span><span class="w">

</span><span class="c1"># 결혼여부를 알아보자</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">marriage</span><span class="p">)</span><span class="w">
</span><span class="c1"># 0 : 비해당(18세 미만), 1: 유배우, 2: 사별</span><span class="w">
</span><span class="c1"># 3 : 이혼, 4 : 별거, 5: 미혼(18세이상, 미혼모포함)</span><span class="w">
</span><span class="c1"># 6 : 기타</span><span class="w">

</span><span class="c1"># 이혼율의 정의는 모든 결혼한 사람들중에 이혼한 사람 비율</span><span class="w">
</span><span class="c1"># 이혼여부를 나타내는 column을 만들어 처리하자</span><span class="w">

</span><span class="n">welfare</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">group_marriage</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">marriage</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">4</span><span class="p">),</span><span class="w"> </span><span class="s2">"marriage"</span><span class="p">,</span><span class="w">
                             </span><span class="n">ifelse</span><span class="p">(</span><span class="n">marriage</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="s2">"divorce"</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">)))</span><span class="w">

</span><span class="n">table</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">group_marriage</span><span class="p">)</span><span class="w">

</span><span class="n">qplot</span><span class="p">(</span><span class="n">welfare</span><span class="o">$</span><span class="n">group_marriage</span><span class="p">)</span><span class="w">

</span><span class="c1"># 종교유무에 따른 이혼율 표를 만들자</span><span class="w">
</span><span class="n">religion_marriage</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">welfare</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">group_marriage</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">religion</span><span class="p">,</span><span class="w"> </span><span class="n">group_marriage</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">total_group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">pct</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="n">total_group</span><span class="o">*</span><span class="m">100</span><span class="p">,</span><span class="m">1</span><span class="p">))</span><span class="w">

</span><span class="n">religion_marriage</span><span class="w">

</span><span class="c1"># 이혼 추출</span><span class="w">
</span><span class="n">divorce</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">religion_marriage</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">group_marriage</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"divorce"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">religion</span><span class="p">,</span><span class="n">pct</span><span class="p">)</span><span class="w">

</span><span class="n">divorce</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">divorce</span><span class="p">)</span><span class="w">
</span><span class="n">divorce</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">divorce</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">religion</span><span class="p">,</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="n">pct</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">0.5</span><span class="p">)</span><span class="w">

</span><span class="c1"># 이전에는 전체를 대상으로 종교 유무에 따른 이혼율을</span><span class="w">
</span><span class="c1"># 분석했지만 이번에는 종교 유무에 따른 이혼율이 연령대별로</span><span class="w">
</span><span class="c1"># 다른지 알아보자!</span><span class="w">

</span><span class="c1"># 9. 지역별 연령대 비율</span><span class="w">
</span><span class="c1"># 노년층이 많은 지역은 어디일까?</span><span class="w">

</span><span class="c1"># 이 이외의 변수들을 이용하여 어떠한 데이터를 추출할 수 있는지</span><span class="w">
</span><span class="c1"># 개인적으로 한번 생각해보자!</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(19) - R KoNLP</title>
	  <link>http://localhost:4000/R-lecture-R-KoNLP</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-19T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-KoNLP</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 한글 형태소 분석</strong></p>

<p>R의 <code class="highlighter-rouge">KoNLP</code> package는 Korean Natural Language Process의 약자로 package안에 포함된
사전을 통해 문서에 포함된 품사를 분석해 주는 기능을 합니다. R언어에서 유일하게
한글 형태소(뜻을 가진 가장 작은 단위)를 분석할 수 있는 기능을 제공합니다.</p>

<p>KoNLP에는 총 3가지 사전(시스템 사전, 세종 사전, NIADic 사전)이 포함되어 있습니다.
시스템 사전에는 28만개의 단어, 세종 사전에는 37만개의 단어, NIADic 사전에는 98만개의 
단어가 포함되어 있습니다.</p>

<p>영문을 분석하는 package 중 유명한 것들로는 <code class="highlighter-rouge">openNLP</code>, <code class="highlighter-rouge">RKEA</code>, <code class="highlighter-rouge">Snowball</code>등이 있습니다.</p>

<p>KoNLP는 Java의 기능을 이용하기 때문에 JDK를 설치해야만 합니다.</p>

<p>형태소를 분석한 후 분석결과를 표현하기 위해서 가장 쉽게 접근하는 방법은 wordcloud를 이용하는 
것입니다.</p>

<p>먼저 이 두가지 package를 설치하고 진행하도록 하겠습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 한글 형태소 분석</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"KoNLP"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">KoNLP</span><span class="p">)</span><span class="w">

</span><span class="c1">#useSystemDic() # 시스템 사전 설정</span><span class="w">
</span><span class="c1">#useSejongDic() # 세종 사전 설정</span><span class="w">
</span><span class="n">useNIADic</span><span class="p">()</span><span class="w"> </span><span class="c1"># NIADic 사전 설정   # 이놈을 사용하자</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">

</span><span class="c1"># JRE 경로를 설정해야 한다.</span><span class="w">
</span><span class="n">Sys.setenv</span><span class="p">(</span><span class="n">JAVA_HOME</span><span class="o">=</span><span class="s2">"C:/Program Files/Java/jre1.8.0_221/"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 분석할 Text data를 준비하자</span><span class="w">
</span><span class="c1"># 해당 파일은 제공</span><span class="w">
</span><span class="c1"># 가요가사!!(봄날, 에라 모르겠다, etc)</span><span class="w">

</span><span class="n">txt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readLines</span><span class="p">(</span><span class="s2">"C:/R_workspace/R_Lecture/data/hiphop.txt"</span><span class="p">,</span><span class="w">
                 </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">

</span><span class="c1"># 특수문자 제거</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">

</span><span class="c1"># \\W은 특수문자를 의미하는 정규식</span><span class="w">
</span><span class="n">txt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">txt</span><span class="p">,</span><span class="s2">"\\W"</span><span class="p">,</span><span class="s2">" "</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">

</span><span class="c1"># 명사 추출 연습</span><span class="w">
</span><span class="n">tmp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"이것은 소리없는 아우성"</span><span class="w">
</span><span class="n">extractNoun</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span><span class="w">

</span><span class="n">nouns</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">extractNoun</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">nouns</span><span class="p">)</span><span class="w">

</span><span class="c1"># 결과가 list로 추출되는데 이를 vector형태로 변환</span><span class="w">
</span><span class="n">words</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">nouns</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">words</span><span class="p">)</span><span class="w">

</span><span class="c1"># 빈도를 조사해보자</span><span class="w">
</span><span class="n">wordcount</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">table</span><span class="p">(</span><span class="n">words</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">wordcount</span><span class="p">)</span><span class="w">

</span><span class="c1"># 빈도를 가지고 있는 데이터를 data frame으로 변환</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">wordcount</span><span class="p">,</span><span class="w">
                    </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="c1"># 한글자로 된 단어는 의미가 없으므로 두 글자 이상으로 된 단어만</span><span class="w">
</span><span class="c1"># 추출한 후 빈도로 내림차순 정렬한 후 상위 20개만 추출</span><span class="w">

</span><span class="n">word_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">nchar</span><span class="p">(</span><span class="n">words</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">20</span><span class="p">)</span><span class="w">

</span><span class="n">word_df</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">R wordcloud</strong></p>

<p><code class="highlighter-rouge">워드 클라우드</code>(word cloud)는 단어의 빈도를 구름 모양으로 표현한 그래프 입니다. 
워드 클라우드는 단어의 빈도에 따라서 단어의 크기와 색상이 다르게 표현되기 때문에 어떤 단어가
얼마나 많이 사용되었는가를 시각적으로 파악하기 좋습니다.</p>

<p>앞에서 얻은 데이터를 이용하여 워드 클라우드를 만들어 보겠습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"wordcloud"</span><span class="p">)</span><span class="w">     </span><span class="c1"># 워드 클라우드 패키지</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">wordcloud</span><span class="p">)</span><span class="w">

</span><span class="c1"># 단어 색상 목록 생성</span><span class="w">
</span><span class="n">pal</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">brewer.pal</span><span class="p">(</span><span class="m">8</span><span class="p">,</span><span class="s2">"Dark2"</span><span class="p">)</span><span class="w">   </span><span class="c1"># Dark2 색상 목록에서 8개의 색상 추출</span><span class="w">

</span><span class="c1"># 난수 seed 설정</span><span class="w">
</span><span class="c1"># 워드 클라우드는 생성 시 난수를 이용하여 매번 다른 모양의</span><span class="w">
</span><span class="c1"># 그래프를 생성. 항상 동일한 그래프가 생성되도록(재현성)</span><span class="w">
</span><span class="c1"># 난수의 seed를 지정</span><span class="w">
</span><span class="n">set.seed</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">

</span><span class="n">wordcloud</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">word_df</span><span class="o">$</span><span class="n">words</span><span class="p">,</span><span class="w">    </span><span class="c1"># 단어</span><span class="w">
          </span><span class="n">freq</span><span class="o">=</span><span class="n">word_df</span><span class="o">$</span><span class="n">Freq</span><span class="p">,</span><span class="w">      </span><span class="c1"># 빈도</span><span class="w">
          </span><span class="n">min.freq</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w">           </span><span class="c1"># 최소 빈도</span><span class="w">
          </span><span class="n">max.words</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">200</span><span class="p">,</span><span class="w">        </span><span class="c1"># 최대 단어 </span><span class="w">
          </span><span class="n">random.order</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">       </span><span class="c1"># 고빈도 단어 중앙 배치</span><span class="w">
          </span><span class="n">rot.per</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">.1</span><span class="p">,</span><span class="w">           </span><span class="c1"># 단어 회전 비율</span><span class="w">
          </span><span class="n">scale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">0.3</span><span class="p">),</span><span class="w">       </span><span class="c1"># 단어 크기 범위</span><span class="w">
          </span><span class="n">colors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal</span><span class="p">)</span><span class="w">           </span><span class="c1"># 색상 목록</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">실습</strong></p>

<p>네이버 영화 댓글 사이트에서 특정 영화에 대한 review data를 crawling하여
wordcloud를 생성해보자!!</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## 네이버 영화 댓글을 이용한 워드 클라우드 생성</span><span class="w">

</span><span class="c1">## Crawling &amp; Scraping 작업</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">

</span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"https://movie.naver.com/movie/point/af/list.nhn?target=after&amp;st=mcode"</span><span class="w">

</span><span class="n">movie_code</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"88426"</span><span class="w">  </span><span class="c1"># 건축학개론 영화 code</span><span class="w">
</span><span class="n">sword</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"sword="</span><span class="w">
</span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"page="</span><span class="w">

</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">vector</span><span class="p">(</span><span class="n">mode</span><span class="o">=</span><span class="s2">"character"</span><span class="p">)</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">p</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">request_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="s2">"&amp;"</span><span class="p">,</span><span class="w">
                       </span><span class="n">sword</span><span class="p">,</span><span class="n">movie_code</span><span class="p">,</span><span class="w">
                       </span><span class="s2">"&amp;"</span><span class="p">,</span><span class="w">
                       </span><span class="n">page</span><span class="p">,</span><span class="n">p</span><span class="p">)</span><span class="w">
  
  </span><span class="n">page_html</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">request_url</span><span class="p">,</span><span class="w">  </span><span class="n">encoding</span><span class="o">=</span><span class="s2">"CP949"</span><span class="p">)</span><span class="w">
  </span><span class="n">page_html</span><span class="p">;</span><span class="w">
  
  </span><span class="n">movie_review</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vector</span><span class="p">(</span><span class="n">mode</span><span class="o">=</span><span class="s2">"character"</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="o">=</span><span class="m">10</span><span class="p">)</span><span class="w">
  
  </span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">myPath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="s1">'//*[@id="old_content"]/table/tbody/tr['</span><span class="p">,</span><span class="w">
                   </span><span class="n">i</span><span class="p">,</span><span class="w">
                   </span><span class="s1">']/td[2]/text()'</span><span class="p">)</span><span class="w">
    </span><span class="n">nodes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">page_html</span><span class="p">,</span><span class="w"> </span><span class="n">xpath</span><span class="o">=</span><span class="n">myPath</span><span class="p">)</span><span class="w">
    </span><span class="n">comment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_text</span><span class="p">(</span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">trim</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">);</span><span class="w">
    </span><span class="n">movie_review</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comment</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">result</span><span class="p">,</span><span class="n">movie_review</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">result</span><span class="w">  </span><span class="c1"># 문자열 vector</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">KoNLP</span><span class="p">)</span><span class="w">

</span><span class="c1">#useSystemDic() # 시스템 사전 설정</span><span class="w">
</span><span class="c1">#useSejongDic() # 세종 사전 설정</span><span class="w">
</span><span class="n">useNIADic</span><span class="p">()</span><span class="w"> </span><span class="c1"># NIADic 사전 설정   # 이놈을 사용하자</span><span class="w">

</span><span class="c1"># 특수문자 제거</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">

</span><span class="c1"># JRE 경로를 설정해야 한다.</span><span class="w">
</span><span class="n">Sys.setenv</span><span class="p">(</span><span class="n">JAVA_HOME</span><span class="o">=</span><span class="s2">"C:/Program Files/Java/jre1.8.0_221/"</span><span class="p">)</span><span class="w">

</span><span class="n">txt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">result</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">

</span><span class="c1"># \\W은 특수문자를 의미하는 정규식</span><span class="w">
</span><span class="n">txt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">txt</span><span class="p">,</span><span class="s2">"\\W"</span><span class="p">,</span><span class="s2">" "</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">

</span><span class="n">nouns</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">extractNoun</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">nouns</span><span class="p">)</span><span class="w">

</span><span class="c1"># 결과가 list로 추출되는데 이를 vector형태로 변환</span><span class="w">
</span><span class="n">words</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">nouns</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">words</span><span class="p">)</span><span class="w">

</span><span class="c1"># 빈도를 조사해보자</span><span class="w">
</span><span class="n">wordcount</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">table</span><span class="p">(</span><span class="n">words</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">wordcount</span><span class="p">)</span><span class="w">

</span><span class="c1"># 빈도를 가지고 있는 데이터를 data frame으로 변환</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">wordcount</span><span class="p">,</span><span class="w">
                    </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="c1"># 한글자로 된 단어는 의미가 없으므로 두 글자 이상으로 된 단어만</span><span class="w">
</span><span class="c1"># 추출한 후 빈도로 내림차순 정렬한 후 상위 20개만 추출</span><span class="w">

</span><span class="n">word_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
</span><span class="c1">#  filter(nchar(words) &gt;= 2) %&gt;%  # CP949로 인한 인코딩 오류</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">100</span><span class="p">)</span><span class="w">

</span><span class="n">word_df</span><span class="w">

</span><span class="c1"># wordcloud를 이용한 그래프 출력</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">wordcloud</span><span class="p">)</span><span class="w">

</span><span class="c1"># 단어 색상 목록 생성</span><span class="w">
</span><span class="n">pal</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">brewer.pal</span><span class="p">(</span><span class="m">8</span><span class="p">,</span><span class="s2">"Dark2"</span><span class="p">)</span><span class="w">   </span><span class="c1"># Dark2 색상 목록에서 8개의 색상 추출</span><span class="w">

</span><span class="c1"># 난수 seed 설정</span><span class="w">
</span><span class="c1"># 워드 클라우드는 생성 시 난수를 이용하여 매번 다른 모양의</span><span class="w">
</span><span class="c1"># 그래프를 생성. 항상 동일한 그래프가 생성되도록(재현성)</span><span class="w">
</span><span class="c1"># 난수의 seed를 지정</span><span class="w">
</span><span class="n">set.seed</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">

</span><span class="n">wordcloud</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">word_df</span><span class="o">$</span><span class="n">words</span><span class="p">,</span><span class="w">    </span><span class="c1"># 단어</span><span class="w">
          </span><span class="n">freq</span><span class="o">=</span><span class="n">word_df</span><span class="o">$</span><span class="n">Freq</span><span class="p">,</span><span class="w">      </span><span class="c1"># 빈도</span><span class="w">
          </span><span class="n">min.freq</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w">           </span><span class="c1"># 최소 빈도</span><span class="w">
          </span><span class="n">max.words</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">,</span><span class="w">        </span><span class="c1"># 최대 단어 </span><span class="w">
          </span><span class="n">random.order</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">       </span><span class="c1"># 고빈도 단어 중앙 배치</span><span class="w">
          </span><span class="n">rot.per</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">.1</span><span class="p">,</span><span class="w">           </span><span class="c1"># 단어 회전 비율</span><span class="w">
          </span><span class="n">scale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">0.3</span><span class="p">),</span><span class="w">       </span><span class="c1"># 단어 크기 범위</span><span class="w">
          </span><span class="n">colors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal</span><span class="p">)</span><span class="w">           </span><span class="c1"># 색상 목록</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(18) - R Graph</title>
	  <link>http://localhost:4000/R-lecture-R-graph</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-18T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-graph</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R Graph</strong></p>

<p>데이터를 보기 쉽게 그림으로 표현하는 것을 <code class="highlighter-rouge">Graph</code>라고 합니다. 숫자나 문자로 구성된 데이터는
의미를 파악하기 어렵지만 Graph로 표현하면 추세와 경향성이 드러나기 때문에 데이터의 특징을 쉽게
이해할 수 있습니다.</p>

<p>R을 선호하는 이유 중 하나가 바로 Graph기능입니다. R에는 기본 2차원 Graph부터 3차원 Graph, 지도,
네트워크, interactive graph등 다양한 Graph package가 존재합니다.</p>

<p><code class="highlighter-rouge">ggplot2</code>는 reshape2 package와 dplyr package를 만든 해들리 위컴이 만든 R 시각화 1순위 package입니다. 
그래프를 만들 때 가장 많이 사용하는 package로 기본적으로 산점도, 막대그래프,
선 그래프, 상자 그림을 포함해서 다양한 그래프를 만들 수 있습니다.</p>

<hr />

<p><strong class="subtitle_fontAwesome">산점도 - 변수간의 관계 표현</strong></p>

<p>데이터를 x축과 y축에 점으로 표현한 그래프를 <code class="highlighter-rouge">산점도</code>(scatter plot) 라고 합니다. 산점도는
나이와 소득처럼 연속 값으로 된 두 변수의 관계를 표현할 때 사용됩니다.</p>

<p>잠깐 변수의 종류에 대해서 간단히 알아보도록 하겠습니다.</p>

<p>변수는 크게 수량적 특성에 의한 분류와 자료의 특성에 따른 분류로 나누어집니다. 
수량적 특성에 의한 분류에 따르면 변수는 크게 정성적 변수와 정량적 변수로 구분됩니다.</p>

<p><code class="highlighter-rouge">정성적 변수</code> : 질적변수, Qualitative Variable, Categorical Variable 이라고도 합니다. 
정성적 변수는 <code class="highlighter-rouge">비서열 질적 변수</code>(unordered qualitative variable)와 
<code class="highlighter-rouge">서열 질적 변수</code>(ordered qualitative variable)로 다시 나누어 집니다.</p>

<p><strong class="subtitle2_fontAwesome">정성적 변수의 분류</strong></p>

<ul>
  <li>비서열 질적 변수`의 예 : 성별, 인종, 직업, 전공</li>
  <li>서열 질적 변수`의 예 : 학력, 군대의 계급, 회사의 직급</li>
</ul>

<p><code class="highlighter-rouge">정량적 변수</code> : 양적변수, Quantitative Variable, Numerical Variable 이라고도 합니다.
정량적 변수는 <code class="highlighter-rouge">연속 변수</code>(continuous variable)와 <code class="highlighter-rouge">비연속 변수</code>(discrete variable)로 
다시 나누어 집니다.</p>

<p><strong class="subtitle2_fontAwesome">정량적 변수의 종류</strong></p>

<ul>
  <li><code class="highlighter-rouge">연속 변수</code> : 주어진 범위에서 어떠한 값도 가질 수 있는 변수(키, 몸무게, 나이)</li>
  <li><code class="highlighter-rouge">비연속 변수</code> :  대상에 대해 측정하면 정수로 표현되는 변수. 즉, 셀수 있으며 정해지 몇 개의 값만을
가지는 변수(아파트 층수, 퀴즈를 맞춘 개수)</li>
</ul>

<p>자료의 특성에 따른 분류에 따르면 변수는 <code class="highlighter-rouge">이산형 변</code>수와 <code class="highlighter-rouge">연속형 변수</code>로 구분됩니다. 여기서 
이산형 변수는 다시 명목척도 변수, 순서 척도 변수로 구분되고 연속형 변수는 구간 척도 변수와 비율철도 변수로
구분됩니다.</p>

<p><code class="highlighter-rouge">ggplot2</code> 문법은 layer 구조로 되어 있습니다.</p>

<p>1단계 : 배경을 설정합니다. 즉, x축과 y축에 대한 설정을 합니다.</p>

<p>2단계 : 그래프를 추가합니다. (점, 막대, 선등)</p>

<p>3단계 : 축 범위, 색, 표식등의 설정 추가</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mpg data set을 이용하여 그래프를 생성합니다</span><span class="w">
</span><span class="c1"># ggplot2를 이용한 그래프 생성</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="c1"># 1. 배경 설정</span><span class="w">
</span><span class="c1"># data 속성 : 그래프를 그리는데 사용할 데이터 </span><span class="w">
</span><span class="c1"># aes 속성 : x축과 ㅛ축에 사용할 변수를 지정</span><span class="w">

</span><span class="c1"># mpg data set의 displ(배기량)을 x축에 hwy(고속도로 연비)를 </span><span class="w">
</span><span class="c1"># y축으로 지정</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">displ</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w">    </span><span class="c1"># 배경 생성</span><span class="w">

</span><span class="c1"># 2. 그래프 추가</span><span class="w">
</span><span class="c1"># 배경을 생성했으니 그 위에 그래프를 그린다</span><span class="w">
</span><span class="c1"># + 기호를 이용하여 그래프 유형을 지정하는 함수를 추가</span><span class="w">
</span><span class="c1"># 산점도를 그리는 함수는 geom_point()</span><span class="w">
</span><span class="c1"># dplyr에서 연결기호는 %&gt;%, ggplot2의 연결기호는 +</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">displ</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_point</span><span class="p">()</span><span class="w">      </span><span class="c1"># 산점도 추가</span><span class="w">

</span><span class="c1"># 그래프를 보면 배기량이 클수록 연비가 떨어지는 것을 확인할 수 있다.</span><span class="w">

</span><span class="c1"># 3. 설정 추가</span><span class="w">
</span><span class="c1"># 축 범위를 조절하는 설정을 추가할 수 있다</span><span class="w">
</span><span class="c1"># 기본적으로 축은 최소값에서 최대값을 표현할 수 있도록 기본 설정</span><span class="w">
</span><span class="c1"># 일부 데이터만 표현하고 싶을 때 축 범위 조절</span><span class="w">

</span><span class="c1"># 축 범위 조절 함수 : xlim(), ylim()</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">displ</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlim</span><span class="p">(</span><span class="m">3</span><span class="p">,</span><span class="m">6</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="m">30</span><span class="p">)</span><span class="w">

</span><span class="c1"># plots 창의 export menu를 이용하면 해당 그래프를 이미지나 PDF로</span><span class="w">
</span><span class="c1"># 저장할 수 있다.</span><span class="w">

</span><span class="c1"># 그래프를 그릴때 그래프의 option을 줄 수 있습니다.</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">displ</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"red"</span><span class="p">)</span><span class="w">      </span><span class="c1"># 산점도 추가</span><span class="w">


</span><span class="n">plot.new</span><span class="p">()</span><span class="w">   </span><span class="c1"># 작성한 그래프를 지울 때 사용</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">막대 그래프 - 집단간의 차이 표현</strong></p>

<p>막대 그래프는 데이터의 크기를 막대의 길이로 표현한 그래프입니다. 성별 소득차이처럼
집단 간 차이를 표현할 때 주로 사용됩니다.</p>

<p>mpg data set을 이용하여 <code class="highlighter-rouge">drv</code>(구동방식)별 평균 <code class="highlighter-rouge">hwy</code>(고속도록 연비) 막대 그래프를
그려보겠습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mpg data set을 이용한 drv별 평균 hwy 막대 그래프 그리기</span><span class="w">

</span><span class="c1"># 1. 집단별 평균표로 구성된 data frame 생성</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">drv</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_hwy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">hwy</span><span class="p">))</span><span class="w">

</span><span class="n">result</span><span class="w">     </span><span class="c1"># 구동방식별 고속도로 평균 연비</span><span class="w">


</span><span class="c1"># 2. 그래프 생성</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">result</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">drv</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">mean_hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">0.3</span><span class="p">)</span><span class="w">

</span><span class="c1"># 3. 크기순으로 정렬</span><span class="w">
</span><span class="c1"># 기본적으로 알파벳 오름차순으로 범주가 정렬</span><span class="w">
</span><span class="c1"># reorder를 이용하면 막대를 값의 크기순으로 정렬할 수 있다</span><span class="w">
</span><span class="c1"># reorder()의 기본 정렬은 오름차순, - 기호를 이용하면 내림차순</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">result</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">drv</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="n">mean_hwy</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">mean_hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w">

</span><span class="c1">################################</span><span class="w">

</span><span class="c1"># 빈도 막대 그래프 - geom_col() 대신 geom_bar()를 이용</span><span class="w">
</span><span class="c1"># 빈도 막대 그래프는 별도의 data frame을 만들지 않고 </span><span class="w">
</span><span class="c1"># raw data frame을 이용하여 바로 생성</span><span class="w">

</span><span class="c1"># drv 항목의 빈도 그래프를 그려보자</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">drv</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">0.5</span><span class="p">)</span><span class="w">

</span><span class="c1"># 빈도 막대 그래프에 추가해서 누적 막대 그래프를 표현해보자</span><span class="w">
</span><span class="c1"># 이전 그래프는 구동방식(drv)에 따른 빈도는 알 수 있으나</span><span class="w">
</span><span class="c1"># 각 구동방식내에서 cyl(실린더의 개수)의 빈도까지 파악 할 수는</span><span class="w">
</span><span class="c1"># 없습니다.</span><span class="w">
</span><span class="c1"># geom_bar() 함수내에 aes()를 이용하여 누적할 열을 지정합니다.</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">drv</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">cyl</span><span class="p">)),</span><span class="n">width</span><span class="o">=</span><span class="m">0.5</span><span class="p">)</span><span class="w">

</span><span class="c1"># 도수분포를 막대 모양 그래프(히스토그램)로 표현할 수 있습니다.</span><span class="w">

</span><span class="c1"># 아래의 예시는 오류입니다. 연속형 변수를 이용해야 하는데 drv는</span><span class="w">
</span><span class="c1"># 범주로 구분되는 discret변수를 사용해서 그렇습니다.</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">drv</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_histogram</span><span class="p">()</span><span class="w">

</span><span class="c1"># 연속형 변수를 이용해서 히스토그램을 그려보겠습니다.</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_histogram</span><span class="p">()</span><span class="w">
</span><span class="c1"># 히스토그램의 bin의 값을 설정하지 않아서 30으로 설정</span><span class="w">
</span><span class="c1"># 만약 bin값을 다시 설정하려면 다음과 같이 설정(비율지정)</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_histogram</span><span class="p">(</span><span class="n">binwidth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">선 그래프 - 시간에 따라 달라지는 데이터 표현</strong></p>

<p>데이터를 선으로 표현한 그래프를 <code class="highlighter-rouge">선 그래프</code>(Line Chart)라고 합니다. 일반적으로 시간에 따라
달라지는 데이터(환율, 주가등 경제지표등)를 표현할 때 많이 사용합니다.</p>

<p>일정 시간 간격을 두고 나열된 데이터를 <code class="highlighter-rouge">시계열 데이터</code>(Time Series Data)라고 하고, 
시계열 데이터를 선으로 표현한 그래프를 <code class="highlighter-rouge">시계열 그래프</code>(Time Series Chart)라고 합니다.</p>

<p>mpg data set은 시계열 데이터가 없기 때문에 다른 data set을 이용해야 합니다.</p>

<p>ggplot2 package안에는 economics data set은 미국의 경제 지표들을 월별로 나타낸 data set입니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 시계열 데이터를 이용하여 선 그래프를 그려보자!</span><span class="w">

</span><span class="c1"># 사용 data set</span><span class="w">
</span><span class="n">economics</span><span class="w">
</span><span class="n">economics_long</span><span class="w">

</span><span class="c1"># 컬럼설명</span><span class="w">
</span><span class="c1"># date : 날짜(년도별 월)</span><span class="w">
</span><span class="c1"># psavert : personal savings rate(개인 저축률)</span><span class="w">
</span><span class="c1"># pce : personal consumption expenditures(개인소비지출)</span><span class="w">
</span><span class="c1">#       경기선행지수로 사용된다. in billions of dollars(십억달러)</span><span class="w">
</span><span class="c1"># unemploy : number of unemployed in thousands( 실업자 수 - 천단위)</span><span class="w">
</span><span class="c1"># uempmed : median duration of unemployment, in weeks</span><span class="w">
</span><span class="c1">#           비고용기간의 중앙값 (주단위)</span><span class="w">
</span><span class="c1"># pop : total population, in thousands (전체인구 - 천단위)</span><span class="w">

</span><span class="n">help</span><span class="p">(</span><span class="n">economics</span><span class="p">)</span><span class="w">

</span><span class="c1"># 시간에 따른 실업자수 추이를 생성해보자</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">economics</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">unemploy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w">

</span><span class="c1"># 5년을 주기로 등락을 거듭하고 있다.</span><span class="w">
</span><span class="c1"># 2008년 리먼 브라더스 사태로 실업률 대량 증가</span><span class="w">

</span><span class="c1"># scatter를 이용한 산점도를 그린 후 그 위에 선 그래프를</span><span class="w">
</span><span class="c1"># 추가해서 그래프에 그래프를 추가해 보자</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">economics</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">unemploy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"red"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">상자 그래프 - 집단간의 분포 차이 표현</strong></p>

<p><code class="highlighter-rouge">상자 그림</code>(boxplot)은 데이터의 분포를 직사각형 상자 모양으로 표현한 그래프 입니다. 데이터의
분포를 파악할 수 있기 때문에 평균만을 볼 때 보다 데이터 특징을 더 잘 이해할 수 있습니다.</p>

<p>다시 mpg data set으로 돌아와서 drv(구동방식)별 hwy(고속도로 연비)를 상자 그림으로 표현해
보겠습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mpg data set을 이용하여 drv(구동방식)별 hwy(고속도로 연비)를 </span><span class="w">
</span><span class="c1"># 상자 그림으로 표현</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">drv</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w">

</span><span class="c1"># 그래프를 보고 파악할 수 있는 점</span><span class="w">

</span><span class="c1"># 4륜 구동은 hwy가 약 17~22사이에 자동차가 모여있다.</span><span class="w">
</span><span class="c1"># 전륜 구동은 연비가 극단적인 형태의 자동차가 많다.</span><span class="w">
</span><span class="c1"># 후륜 구동은 대부분의 자동차가 사분위 범위에 해당한다.</span><span class="w">
</span></code></pre></div></div>

<p><strong class="subtitle_fontAwesome">그래프에 객체 추가</strong></p>

<p>ggplot2에는 그래프를 그리는 함수와 도형이나 텍스트 같은 다양한 객체를 그리는 함수도
포함되어 있습니다. 그래프에 선이나 도형을 포함시키면 그래프의 가독성이 높아지기 때문에
많이 이용되는 기능입니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ggplot2 그래프에 객체 추가</span><span class="w">

</span><span class="c1"># 사용할 data set은 ecomonics</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">economics</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="c1"># 날짜별 개인 저축률에 대한 선 그래프를 그려보자</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w">

</span><span class="c1"># 직선을 추가해보자</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_abline</span><span class="p">(</span><span class="n">intercept</span><span class="o">=</span><span class="m">12.1</span><span class="p">,</span><span class="w"> </span><span class="n">slope</span><span class="o">=</span><span class="m">-0.0003444</span><span class="p">)</span><span class="w">

</span><span class="c1"># 여기서 잠깐!!</span><span class="w">
</span><span class="c1"># 만약 데이터를 가장 잘 표현하는 직선을 우리가 찾을 수</span><span class="w">
</span><span class="c1"># 있다면 해당 그래프를 이용해서 미래의 값을 예측할 수 있다.</span><span class="w">
</span><span class="c1"># 이 직선을 얻기 위해서는 기울기와 절편의 값을 구해야 하는데</span><span class="w">
</span><span class="c1"># 이 값은 회귀분석을 통해서 얻을 수 있다.</span><span class="w">

</span><span class="c1"># 평행선을 추가해보자</span><span class="w">

</span><span class="c1"># geom_hline()을 이용해서 평행선을 그릴 수 있다.</span><span class="w">
</span><span class="c1"># 기존 시간에 따른 개인저축률 그래프에 개인 저축률의 </span><span class="w">
</span><span class="c1"># 평균값을 이용하여 평행선을 그려보자</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_hline</span><span class="p">(</span><span class="n">yintercept</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">psavert</span><span class="p">))</span><span class="w">

</span><span class="c1"># geom_vline()을 이용하여 수직선을 그릴 수 있다.</span><span class="w">
</span><span class="c1"># 개인 저축률이 가장 낮은 시기를 바로 알 수 있도록 수직선을</span><span class="w">
</span><span class="c1"># 그려보자</span><span class="w">
</span><span class="c1"># 먼저 개인 저축률이 가장 낮은 날짜를 알아야 한다.</span><span class="w">

</span><span class="n">tmp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> 
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">psavert</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="nf">min</span><span class="p">(</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">date</span><span class="p">)</span><span class="w">

</span><span class="n">tmp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span><span class="o">$</span><span class="n">date</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_vline</span><span class="p">(</span><span class="n">xintercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tmp</span><span class="p">)</span><span class="w">

</span><span class="c1">## 만약 날짜를 직접입력하려면??</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_vline</span><span class="p">(</span><span class="n">xintercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"2009-10-01"</span><span class="p">))</span><span class="w">


</span><span class="c1"># 그래프에 텍스트를 추가하려면??</span><span class="w">

</span><span class="c1"># geom_text()를 이용하면 그래프에 텍스트를 입력할 수 있습니다.</span><span class="w">
</span><span class="c1"># 그래프의 범례나 제목과는 다르게 그래프 위에 직접 표현</span><span class="w">

</span><span class="c1"># geom_text(aes(label="라벨명", vjust=세로위치, hjust=가로위치))</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlim</span><span class="p">(</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1990-01-01"</span><span class="p">),</span><span class="w">
       </span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1992-12-01"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="m">7</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="n">psavert</span><span class="p">,</span><span class="w"> </span><span class="n">vjust</span><span class="o">=</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="n">hjust</span><span class="o">=</span><span class="m">-0.5</span><span class="p">))</span><span class="w">
 </span><span class="c1">#geom_text(aes(label=psavert, vjust=0, hjust=0))</span><span class="w">
 </span><span class="c1"># 숫자의 의미 : + 아래, 왼쪽 , - 위 , 오른쪽을 의미  </span><span class="w">


</span><span class="c1"># 도형 및 화살표를 추가하는 annotate() 함수</span><span class="w">

</span><span class="c1"># annotate()함수는 그래프 위에 사각형이나 화살표 등으로</span><span class="w">
</span><span class="c1"># 특정 영역을 강조할 때 많이 사용됩니다.</span><span class="w">

</span><span class="c1"># annotate("모양",</span><span class="w">
</span><span class="c1">#          xmin=x축시작,</span><span class="w">
</span><span class="c1">#          xmax=x축 끝,</span><span class="w">
</span><span class="c1">#          ymin=y축 시작,</span><span class="w">
</span><span class="c1">#          ymax=y축 끝)</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlim</span><span class="p">(</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1990-01-01"</span><span class="p">),</span><span class="w">
       </span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1992-12-01"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="m">7</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
           </span><span class="n">xmin</span><span class="o">=</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1991-01-01"</span><span class="p">),</span><span class="w">
           </span><span class="n">xmax</span><span class="o">=</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1991-12-31"</span><span class="p">),</span><span class="w">
           </span><span class="n">ymin</span><span class="o">=</span><span class="m">8</span><span class="p">,</span><span class="w">
           </span><span class="n">ymax</span><span class="o">=</span><span class="m">9</span><span class="p">,</span><span class="w">
           </span><span class="n">alpha</span><span class="o">=</span><span class="m">0.3</span><span class="p">,</span><span class="w">
           </span><span class="n">fill</span><span class="o">=</span><span class="s2">"red"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 여기에 추가적으로 화살표를 표시할 수 있습니다.</span><span class="w">
</span><span class="c1"># 화살표 역시 annotate()를 이용하여 표현합니다.</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlim</span><span class="p">(</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1990-01-01"</span><span class="p">),</span><span class="w">
       </span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1992-12-01"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="m">7</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
           </span><span class="n">xmin</span><span class="o">=</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1991-01-01"</span><span class="p">),</span><span class="w">
           </span><span class="n">xmax</span><span class="o">=</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1991-12-31"</span><span class="p">),</span><span class="w">
           </span><span class="n">ymin</span><span class="o">=</span><span class="m">8</span><span class="p">,</span><span class="w">
           </span><span class="n">ymax</span><span class="o">=</span><span class="m">9</span><span class="p">,</span><span class="w">
           </span><span class="n">alpha</span><span class="o">=</span><span class="m">0.3</span><span class="p">,</span><span class="w">
           </span><span class="n">fill</span><span class="o">=</span><span class="s2">"red"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"segment"</span><span class="p">,</span><span class="w">
           </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1990-05-01"</span><span class="p">),</span><span class="w">
           </span><span class="n">xend</span><span class="o">=</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1991-05-01"</span><span class="p">),</span><span class="w">
           </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7.5</span><span class="p">,</span><span class="w">
           </span><span class="n">yend</span><span class="o">=</span><span class="m">8.5</span><span class="p">,</span><span class="w">
           </span><span class="n">color</span><span class="o">=</span><span class="s2">"blue"</span><span class="p">,</span><span class="w">
           </span><span class="n">arrow</span><span class="o">=</span><span class="n">arrow</span><span class="p">())</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">annotate</span><span class="p">(</span><span class="s2">"text"</span><span class="p">,</span><span class="w">
           </span><span class="n">x</span><span class="o">=</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1991-05-01"</span><span class="p">),</span><span class="w">
           </span><span class="n">y</span><span class="o">=</span><span class="m">8.5</span><span class="p">,</span><span class="w">
           </span><span class="n">label</span><span class="o">=</span><span class="s2">"글자도 쓸수 있어요!!"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 마지막으로 그래프의 제목과 각 축의 이름, 배경색등을 설정해보자</span><span class="w">
</span><span class="c1"># 테마는 총 8가지를 기본으로 제공하며 기본 테마는 theme_gray()</span><span class="w">

</span><span class="c1"># labs(x=x축 이름, y=y축 이름, title=그래프 제목)</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span><span class="w">
       </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">psavert</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlim</span><span class="p">(</span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1990-01-01"</span><span class="p">),</span><span class="w">
       </span><span class="n">as.Date</span><span class="p">(</span><span class="s2">"1992-12-01"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="m">7</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s2">"연도"</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="s2">"개인저축률"</span><span class="p">,</span><span class="w"> </span><span class="n">title</span><span class="o">=</span><span class="s2">"날짜별 개인 저축률"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(17) - R 기초 통계 함수</title>
	  <link>http://localhost:4000/R-lecture-R-descriptive-statistics</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-17T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-descriptive-statistics</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 기술 통계량</strong></p>

<p>데이터를 분석할 때는 다양한 요약 값으로 데이터의 특성을 파악할 수 있고 요약값을 표나
그래프를 이용하여 시각적으로 표현할 수 있습니다.</p>

<p>이때 특성을 파악하기 위해 데이터를 요약한 값을 기술 통계량(Descriptive Statistics)이라고 
합니다. 즉, 보유한 데이터를 의미 있는 수치로 요약하여 데이터의 특성을 파악할 수 있도록 한 정보를
의미합니다.</p>

<p><strong class="subtitle2_fontAwesome">기술 통계량 분석을 위한 함수</strong></p>
<ul>
  <li><code class="highlighter-rouge">mean()</code> : 일반적인 평균.</li>
  <li><code class="highlighter-rouge">median()</code> : 중간값(중위수)</li>
  <li><code class="highlighter-rouge">max()</code> : 최대값</li>
  <li><code class="highlighter-rouge">min()</code> : 최소값</li>
  <li><code class="highlighter-rouge">range()</code> : 최대값과 최소값의 범위</li>
  <li><code class="highlighter-rouge">quantile()</code> : 분위수</li>
  <li><code class="highlighter-rouge">var()</code> : 분산. 데이터가 평균으로부터 퍼진 정도를 설명하는 통계량</li>
  <li><code class="highlighter-rouge">sd()</code> : 표준편차</li>
  <li><code class="highlighter-rouge">skew()</code> : 왜도. 데이터의 비대칭을 설명하는 통계량. 절대값이 클수록 비대칭이 심하고, 양수이면 
오른쪽으로 꼬리가 길고, 음수이면 왼쪽으로 꼬리가 긴 형태</li>
  <li><code class="highlighter-rouge">kurtosi()</code> : 첨도. 데이터 분포가 뾰족한 정도를 설명하는 통계량. 통계량이 0보다 크면 정규분포대비
뾰족하며, 0보다 작으면 정규분포대비 평평한 형태</li>
</ul>

<p>이런 기술 통계량은 <code class="highlighter-rouge">summary()</code>, <code class="highlighter-rouge">describe()</code>, <code class="highlighter-rouge">stat.desc()</code>함수를 이용하면 한번에 확인이 가능합니다. 단, 
describe() 함수는 <code class="highlighter-rouge">psych</code> package를 설치해야 하고 stat.desc() 함수는 <code class="highlighter-rouge">pastecs</code> package를 설치해야 합니다.</p>

<ul>
  <li>
    <p><a href="https://personality-project.org/r/html/describe.html" target="_blank">psych describe()</a></p>
  </li>
  <li>
    <p><a href="https://cran.r-project.org/web/packages/pastecs/pastecs.pdf" target="_blank">pastecs</a></p>
  </li>
</ul>

<p>많이 사용하는 기능 중 빈도를 계산하는 함수가 있습니다. table()을 이용해도 되지만 <code class="highlighter-rouge">descr</code> package의 <code class="highlighter-rouge">freq()</code> 함수가
많이 사용됩니다.</p>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>
<ul>
  <li>기본 통계함수에 대한 예제를 실습합니다.</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">xlsx</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.xlsx</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"C:/R_workspace/R_Lecture/data/sample_data.xlsx"</span><span class="p">,</span><span class="w">
                </span><span class="n">sheetIndex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="c1"># 기본 통계량</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">

</span><span class="c1"># 기본 통계 함수</span><span class="w">
</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">
</span><span class="n">median</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">
</span><span class="nf">max</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">
</span><span class="nf">min</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">      
</span><span class="nf">range</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">    </span><span class="c1"># 최소값 최대값</span><span class="w">
</span><span class="n">quantile</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w"> </span><span class="c1"># 사분위</span><span class="w">
</span><span class="n">var</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">      </span><span class="c1"># 분산  </span><span class="w">
</span><span class="n">sd</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">       </span><span class="c1"># 표준편차</span><span class="w">
</span><span class="n">skew</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">     </span><span class="c1"># 왜도</span><span class="w">
</span><span class="n">kurtosi</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">  </span><span class="c1"># 첨도</span><span class="w">


</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"psych"</span><span class="p">)</span><span class="w">  </span><span class="c1"># psychometrics(심리측정학)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">psych</span><span class="p">)</span><span class="w">
</span><span class="n">describe</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="c1"># Package for Analysis of Space-Time Ecological Series</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"pastecs"</span><span class="p">)</span><span class="w"> 
</span><span class="n">library</span><span class="p">(</span><span class="n">pastecs</span><span class="p">)</span><span class="w">
</span><span class="n">stat.desc</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">


</span><span class="c1"># 빈도를 구하기 위한 함수</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"descr"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">descr</span><span class="p">)</span><span class="w">

</span><span class="n">freq</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">SEX</span><span class="p">,</span><span class="w"> </span><span class="n">plot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">
</span><span class="n">freq</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">AREA</span><span class="p">,</span><span class="w"> </span><span class="n">plot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(16) - R 데이터 정제</title>
	  <link>http://localhost:4000/R-lecture-R-data-preprocessing</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-16T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-data-preprocessing</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 결측치 정제</strong></p>

<p>현장에서 만들어진 <code class="highlighter-rouge">raw</code> 데이터는 오류를 포함하고 있기 때문에 분석하기 전에 오류를 수정해야 합니다.</p>

<p>결측치는 누락된 값, 즉 비어있는 값을 의미합니다. 이런 결측치가 존재하면 함수가 적용되지 않거나 
분석결과가 왜곡되기 때문에 결측치가 있는지 확인한 후 제거 혹은 정제과정을 거쳐야 합니다.</p>

<p><strong class="subtitle2_fontAwesome"><code class="highlighter-rouge">is.na()</code> 함수</strong></p>

<ul>
  <li>is.na() 함수를 이용하면 데이터에 결측치(NA)가 포함되어 있는지 확인할 수 있습니다.</li>
</ul>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<ul>
  <li>결측치가 포함된 데이터를 생성합니다.</li>
  <li><code class="highlighter-rouge">is.na()</code>와 <code class="highlighter-rouge">table()</code>을 이용하여 결측치가 몇개 있는지 확인합니다.</li>
  <li>dplyr package를 이용하여 결측치가 포함된 행을 제거합니다.</li>
  <li><code class="highlighter-rouge">na.omit()</code>를 이용하여 결측치가 포함된 모든 행을 제거합니다.</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 결측치가 포함된 데이터 생성</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">6</span><span class="p">),</span><span class="w">
                 </span><span class="n">score</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">30</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">50</span><span class="p">,</span><span class="m">67</span><span class="p">,</span><span class="kc">NA</span><span class="p">))</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="c1"># is.na() 함수 이용</span><span class="w">

</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">  </span><span class="c1"># 결과는 logical type의 data frame </span><span class="w">

</span><span class="c1"># table() 함수는 빈도를 계산하는 함수</span><span class="w">

</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="p">))</span><span class="w">      </span><span class="c1"># data frame 전체에 대한 빈도</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">id</span><span class="p">))</span><span class="w">   </span><span class="c1"># 특정 column에 대한 빈도</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">))</span><span class="w">   </span><span class="c1"># 특정 column에 대한 빈도</span><span class="w">

</span><span class="c1"># 결측치가 있는 행 제거</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">

</span><span class="n">result_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">id</span><span class="p">))</span><span class="w"> </span><span class="c1"># id 결측치 제거</span><span class="w">
</span><span class="n">result_df</span><span class="w">

</span><span class="n">result_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">))</span><span class="w"> </span><span class="c1"># score 결측치 제거</span><span class="w">
</span><span class="n">result_df</span><span class="w">

</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">)</span><span class="w">            </span><span class="c1"># NA</span><span class="w">
</span><span class="n">mean</span><span class="p">(</span><span class="n">result_df</span><span class="o">$</span><span class="n">score</span><span class="p">)</span><span class="w">

</span><span class="c1"># 모든 column에 존재하는 결측치 제거</span><span class="w">
</span><span class="n">result_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">),</span><span class="w">
                           </span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">id</span><span class="p">))</span><span class="w">
</span><span class="n">result_df</span><span class="w">

</span><span class="c1"># 결측치가 하나라도 있으면 해당 행 제거</span><span class="w">
</span><span class="n">result_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">na.omit</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">  </span><span class="c1"># 간편하지만 좋은 방식은 아님.</span><span class="w">
</span><span class="n">result_df</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">R 함수의 결측치 제외 기능</strong></p>

<p>mean()과 같은 수치 연산 함수들은 결측치를 제외하고 연산하도록 설정하는 <code class="highlighter-rouge">na.rm</code> 파라미터를
지원합니다. 하지만 모든 수치 연산 함수가 na.rm 파라미터를 지원하는것은 아니기 때문에 
filter() 함수등을 이용하여 결측치를 제거한 후 연산을 해야 합니다.</p>

<p>데이터가 많고 결측치가 많지 않은 경우에는 결측치를 제거하고 분석해도 괜찮지만 데이터가 적고
결측치가 많을 경우 결측치를 제거하면 너무 많은 데이터가 유실될 수 있습니다. 이런 경우 결측치를
제거하는 대신 다른 값으로 대체해서 사용할 수 있습니다.</p>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 함수의 결측치 제외 기능</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">6</span><span class="p">),</span><span class="w">
                 </span><span class="n">score</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">30</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">50</span><span class="p">,</span><span class="m">67</span><span class="p">,</span><span class="kc">NA</span><span class="p">))</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="w">   </span><span class="c1"># 결측치를 제외하고 연산수행</span><span class="w">
</span><span class="nf">sum</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="w">   </span><span class="c1"># 결측치를 제외하고 연산수행</span><span class="w">

</span><span class="c1"># 결측치를 평균 값으로 대체</span><span class="w">

</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">),</span><span class="w"> 
                   </span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">),</span><span class="w">
                   </span><span class="n">df</span><span class="o">$</span><span class="n">score</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">R 이상치 정제</strong></p>

<p>결측치는 아니지만 존재할 수 없는 값이 사용되거나 정상 범주에서 
크게 벗어난 값을 <code class="highlighter-rouge">이상치(outlier)</code>라고 합니다. 이런 이상치 역시 분석 결과를 왜곡 시키기 때문에 
분석에 앞서 이상치를 제거하는 작업이 필요합니다.</p>

<p><strong class="subtitle2_fontAwesome">이상치 제거 실습</strong></p>

<ul>
  <li>이상치 제거 - 존재할 수 없는 값이 존재할 경우</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 이상치 정제</span><span class="w">

</span><span class="c1"># 성별에 존재할 수 없는 값이 있을 경우</span><span class="w">
</span><span class="c1"># table() 함수를 이용하여 빈도수를 알아보면 확인할 수 있다</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">6</span><span class="p">),</span><span class="w">
                 </span><span class="n">score</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">30</span><span class="p">,</span><span class="kc">NA</span><span class="p">,</span><span class="m">50</span><span class="p">,</span><span class="m">67</span><span class="p">,</span><span class="kc">NA</span><span class="p">),</span><span class="w">
                 </span><span class="n">gender</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"^^"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">),</span><span class="w">
                 </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">gender</span><span class="p">)</span><span class="w">

</span><span class="c1"># 이상치를 결측치로 변환</span><span class="w">

</span><span class="n">df</span><span class="o">$</span><span class="n">gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">gender</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">),</span><span class="w">
                   </span><span class="n">df</span><span class="o">$</span><span class="n">gender</span><span class="p">,</span><span class="w">
                   </span><span class="kc">NA</span><span class="p">)</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">gender</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">
</span></code></pre></div></div>

<p>논리적으로 존재할 수 있지만 극단적으로 크거나 작은 값을 <code class="highlighter-rouge">극단치</code>라고 합니다.
극단치 역시 데이터 분석 결과를 왜곡시킬 수 있기 때문에 이 역시 제거해야 합니다.</p>

<p>극단치를 제거하려면 정상 범위를 정해야 합니다. 논리적으로 판단해 정상범위를
지정 할 수 있고 통계적인 기준(표준편차등)을 이용해 정상범위를 지정할 수 있습니다.</p>

<p>또한 <code class="highlighter-rouge">Boxplot</code>을 이용해서 중심에서 크게 벗어난 값을 극단치로 간주하는 방법도 있습니다.</p>

<p><img src="assets/built/images/r_boxplot.png" alt="R boxplot" /></p>

<p>Boxplot을 사용할 때 극단치를 분류하는 기준은 <code class="highlighter-rouge">IQR</code>이라는 단위를 이용합니다.</p>

<p><code class="highlighter-rouge">IQR(interquartile range)</code> : 1사분위와 3사분위 사이의 범위. 1사분위수보다 1.5IQR 초과로 작은 값과
3사분위수보다 1.5IQR 초과로 큰 값은 극단치로 분류됩니다.</p>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>
<ul>
  <li>mpg data set에 대해 boxplot을 이용하여 극단치 처리를 해 보자.</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 극단치를 확인하기 위한 sample code</span><span class="w">
</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">8</span><span class="p">,</span><span class="m">9</span><span class="p">,</span><span class="m">10</span><span class="p">,</span><span class="m">11</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">13</span><span class="p">,</span><span class="m">14</span><span class="p">,</span><span class="m">22.1</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">data</span><span class="p">)</span><span class="w">
</span><span class="c1"># IQR(데이터 중간 위쪽의 mid point - 중간 아래쪽의 mid point)</span><span class="w">
</span><span class="n">median_value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">summary</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="m">3</span><span class="p">];</span><span class="w"> </span><span class="n">median_value</span><span class="w">
</span><span class="n">lower_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">8</span><span class="p">)</span><span class="w">
</span><span class="n">upper_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">8</span><span class="p">,</span><span class="m">9</span><span class="p">,</span><span class="m">10</span><span class="p">,</span><span class="m">11</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">13</span><span class="p">,</span><span class="m">14</span><span class="p">,</span><span class="m">22.1</span><span class="p">)</span><span class="w">
</span><span class="n">mid_lower</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">median</span><span class="p">(</span><span class="n">lower_data</span><span class="p">);</span><span class="w"> </span><span class="n">mid_lower</span><span class="w">
</span><span class="n">mid_upper</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">median</span><span class="p">(</span><span class="n">upper_data</span><span class="p">);</span><span class="w"> </span><span class="n">mid_upper</span><span class="w">

</span><span class="n">IQR_value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mid_upper</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">mid_lower</span><span class="p">;</span><span class="w"> </span><span class="n">IQR_value</span><span class="w">
</span><span class="c1"># 기준치 =&gt; IQR * 1.5</span><span class="w">
</span><span class="n">deter_value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">IQR_value</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">1.5</span><span class="w">
</span><span class="c1"># 3사분위 값 + 기준치 =&gt; summary(data)[5] + deter_value</span><span class="w">
</span><span class="n">outlier_value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">summary</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="m">5</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">deter_value</span><span class="p">;</span><span class="w"> 
</span><span class="n">outlier_value</span><span class="w">
</span><span class="n">boxplot</span><span class="p">(</span><span class="n">data</span><span class="p">)</span><span class="w">


</span><span class="c1"># mpg data를 이용한 극단치 처리</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">mpg</span><span class="w">
</span><span class="nf">class</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">mpg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="nf">class</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">boxplot</span><span class="p">(</span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="p">)</span><span class="w">

</span><span class="c1"># 상자그림의 통계치 추출</span><span class="w">

</span><span class="n">boxplot</span><span class="p">(</span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="p">)</span><span class="o">$</span><span class="n">stats</span><span class="w">

</span><span class="c1"># 통계치의 결과는 위에서 아래 순으로</span><span class="w">
</span><span class="c1"># 아래쪽 극단치 경계, 1산분위수, 중앙값, 3사분위수</span><span class="w">
</span><span class="c1"># 위쪽 극단치 경계를 의미</span><span class="w">
</span><span class="c1"># 즉, 12~37을 벗어나면 극단치로 분류된다</span><span class="w">

</span><span class="c1"># 해당 범위를 벗어난 값을 결측치 처리한다.</span><span class="w">

</span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">12</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">37</span><span class="p">,</span><span class="w">
                  </span><span class="kc">NA</span><span class="p">,</span><span class="w">
                  </span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="p">)</span><span class="w">
</span><span class="n">table</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">mpg</span><span class="o">$</span><span class="n">hwy</span><span class="p">))</span><span class="w">

</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mpg</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">drv</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">hwy_mean</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">hwy</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">실습문제</strong></p>

<p>지금까지 배운 내용을 토대로 간단한 연습문제를 풀어보도록 합니다.</p>

<p>사용하는 data set</p>

<ul>
  <li><a href="https://drive.google.com/open?id=1epkeTgC2Qjut8pbhRtrrYXXSsN-AM3tG" target="_blank">예제 data set</a></li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">####################################</span><span class="w">
</span><span class="c1"># 연습문제!!</span><span class="w">
</span><span class="c1">####################################</span><span class="w">

</span><span class="c1"># data : excel 파일(exec1105.xlsx)</span><span class="w">

</span><span class="c1"># 만약 결측값이 존재하면 결측값은 결측값을 제외한 </span><span class="w">
</span><span class="c1"># 해당 과목의 평균을 이용합니다.</span><span class="w">

</span><span class="c1"># 만약 극단치가 존재하면 하위 극단치는 극단치값을 제외한</span><span class="w">
</span><span class="c1"># 해당 과목의 1사분위 값을 이용하고 상위 극단치는</span><span class="w">
</span><span class="c1"># 해당 과목의 3사분위 값을 이용합니다.</span><span class="w">

</span><span class="c1"># 1. 전체 평균이 가장 높은 사람은 누구이며 평균값은 얼마인가요?</span><span class="w">

</span><span class="c1"># 2. 남자와 여자의 전체 평균은 각각 얼마인가요?</span><span class="w">

</span><span class="c1"># 3. 수학성적이 전체 수학 성적 평균보다 높은 남성은 누구이며</span><span class="w">
</span><span class="c1">#    수학성적은 얼마인가요?</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">xlsx</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">reshape2</span><span class="p">)</span><span class="w">

</span><span class="n">file_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/R_workspace/R_Lecture/data/exec1105.xlsx"</span><span class="w">

</span><span class="n">score_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.xlsx</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="n">file_name</span><span class="p">,</span><span class="w">
                      </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">
                      </span><span class="n">sheetIndex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                      </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">,</span><span class="w">
                      </span><span class="n">stringsAsFactors</span><span class="o">=</span><span class="nb">F</span><span class="p">)</span><span class="w">

</span><span class="nf">names</span><span class="p">(</span><span class="n">score_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"s_num"</span><span class="p">,</span><span class="s2">"subject"</span><span class="p">,</span><span class="s2">"score"</span><span class="p">)</span><span class="w">
</span><span class="n">score_df</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">score_df</span><span class="p">)</span><span class="w">

</span><span class="n">student_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.xlsx</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="n">file_name</span><span class="p">,</span><span class="w">
                        </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w">
                        </span><span class="n">sheetIndex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w">
                        </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">,</span><span class="w">
                        </span><span class="n">stringsAsFactors</span><span class="o">=</span><span class="nb">F</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">student_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"s_num"</span><span class="p">,</span><span class="s2">"s_name"</span><span class="p">,</span><span class="s2">"s_gender"</span><span class="p">)</span><span class="w">
</span><span class="n">student_df</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">student_df</span><span class="p">)</span><span class="w">

</span><span class="n">join_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">student_df</span><span class="p">,</span><span class="w">
                      </span><span class="n">score_df</span><span class="p">,</span><span class="w">
                      </span><span class="n">by</span><span class="o">=</span><span class="s2">"s_num"</span><span class="p">)</span><span class="w">
</span><span class="n">join_df</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dcast</span><span class="p">(</span><span class="n">join_df</span><span class="p">,</span><span class="w">
            </span><span class="n">formula</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">s_num</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">s_name</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">s_gender</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">subject</span><span class="p">,</span><span class="w">
            </span><span class="n">value.var</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"score"</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="c1">## 결측치 처리</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">df</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">col_value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">col_value</span><span class="p">))</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">col_value</span><span class="p">),</span><span class="w">
                     </span><span class="n">mean</span><span class="p">(</span><span class="n">col_value</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">),</span><span class="w">
                     </span><span class="n">col_value</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">df</span><span class="w">

</span><span class="c1">## 극단치 처리</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">df</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"s_num"</span><span class="p">,</span><span class="s2">"s_name"</span><span class="p">,</span><span class="s2">"s_gender"</span><span class="p">)))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">min_val</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">boxplot</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]])</span><span class="o">$</span><span class="n">stats</span><span class="p">[</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">]</span><span class="w">
    </span><span class="n">max_val</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">boxplot</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]])</span><span class="o">$</span><span class="n">stats</span><span class="p">[</span><span class="m">5</span><span class="p">,</span><span class="m">1</span><span class="p">]</span><span class="w">
    
    
    
    </span><span class="n">first_4</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">summary</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]],</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">)[</span><span class="m">2</span><span class="p">]</span><span class="w">  </span><span class="c1"># NA 해결 필요</span><span class="w">
    </span><span class="n">third_4</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">summary</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]],</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">)[</span><span class="m">5</span><span class="p">]</span><span class="w">
    
    </span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">max_val</span><span class="p">,</span><span class="w">
                     </span><span class="n">third_4</span><span class="p">,</span><span class="w">
                     </span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]])</span><span class="w">
    
    </span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">min_val</span><span class="p">,</span><span class="w">
                     </span><span class="n">first_4</span><span class="p">,</span><span class="w">
                     </span><span class="n">df</span><span class="p">[[</span><span class="n">i</span><span class="p">]])</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">df</span><span class="w">


</span><span class="c1"># 1. 전체 평균이 가장 높은 사람은 누구이며 평균값은 얼마인가요?</span><span class="w">
</span><span class="n">answer_1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">avg</span><span class="o">=</span><span class="p">(</span><span class="n">eng</span><span class="o">+</span><span class="n">kor</span><span class="o">+</span><span class="n">math</span><span class="p">)</span><span class="o">/</span><span class="m">3</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">avg</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">

</span><span class="n">answer_1</span><span class="w">
</span><span class="c1"># 김연아 81.11111</span><span class="w">


</span><span class="c1"># 2. 남자와 여자의 전체 평균은 각각 얼마인가요?</span><span class="w">
</span><span class="n">answer_2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">avg</span><span class="o">=</span><span class="p">(</span><span class="n">eng</span><span class="o">+</span><span class="n">kor</span><span class="o">+</span><span class="n">math</span><span class="p">)</span><span class="o">/</span><span class="m">3</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">s_gender</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">total_avg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">avg</span><span class="p">))</span><span class="w">

</span><span class="n">answer_2</span><span class="w">

</span><span class="c1"># 남자 : 40.7</span><span class="w">
</span><span class="c1"># 여자 : 54.6</span><span class="w">

</span><span class="c1"># 3. 수학성적이 전체 수학 성적 평균보다 높은 남성은 누구이며</span><span class="w">
</span><span class="c1">#    수학성적은 얼마인가요?</span><span class="w">
</span><span class="n">answer_3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">filter</span><span class="p">(</span><span class="n">s_gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"남자"</span><span class="p">,</span><span class="w">
         </span><span class="n">math</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">math</span><span class="p">))</span><span class="w">

</span><span class="n">answer_3</span><span class="w">

</span><span class="c1"># 이순신 : 68</span><span class="w">
</span><span class="c1"># 강감찬 : 78.66667</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(15) - R 데이터 조작 실습</title>
	  <link>http://localhost:4000/R-lecture-R-dplyr-exercise</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-15T02:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-dplyr-exercise</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 데이터 조작 실습 1</strong></p>

<p><code class="highlighter-rouge">ggplot2</code> package의 <code class="highlighter-rouge">mpg</code> data set을 이용하여 데이터 셋 조작 실습</p>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ggplot2 package의 mpg data 활용</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">require</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">   </span><span class="c1"># mpg data frame</span><span class="w">

</span><span class="n">View</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">help</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">    </span><span class="c1"># mpg data set reference</span><span class="w">

</span><span class="c1"># 주요컬럼</span><span class="w">
</span><span class="c1"># manufacturer : 제조회사</span><span class="w">
</span><span class="c1"># displ : 배기량</span><span class="w">
</span><span class="c1"># cyl : 실린더 개수</span><span class="w">
</span><span class="c1"># drv : 구동 방식</span><span class="w">
</span><span class="c1"># hwy : 고속도로 연비</span><span class="w">
</span><span class="c1"># class : 자동차 종류</span><span class="w">
</span><span class="c1"># model : 자동차 모델명</span><span class="w">
</span><span class="c1"># year : 생산연도</span><span class="w">
</span><span class="c1"># trans : 변속기 종류</span><span class="w">
</span><span class="c1"># cty : 도시 연비</span><span class="w">
</span><span class="c1"># fl : 연료 종류</span><span class="w">

</span><span class="c1"># 1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려 한다. </span><span class="w">
</span><span class="c1"># displ(배기량)이 4 이하인 자동차와 4 초과인 자동차 중 </span><span class="w">
</span><span class="c1"># 어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 확인하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">mutate</span><span class="p">(</span><span class="n">displ_4_higher</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">displ</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="s2">"배기량4초과"</span><span class="p">,</span><span class="s2">"배기량4이하"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">displ_4_higher</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_hwy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">hwy</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">  

</span><span class="c1"># 2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 한다. </span><span class="w">
</span><span class="c1"># "audi"와 "toyota" 중 어느 manufacturer(제조회사)의 cty(도시 연비)가 </span><span class="w">
</span><span class="c1"># 평균적으로 더 높은지 확인하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">filter</span><span class="p">(</span><span class="n">manufacturer</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"audi"</span><span class="p">,</span><span class="s2">"toyota"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">manufacturer</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_cty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">cty</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">


</span><span class="c1"># 3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 한다. </span><span class="w">
</span><span class="c1"># 이 회사들의 데이터를 추출한 후 hwy(고속도로 연비) 전체 평균을 구하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">filter</span><span class="p">(</span><span class="n">manufacturer</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"chevrolet"</span><span class="p">,</span><span class="s2">"ford"</span><span class="p">,</span><span class="s2">"honda"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_hwy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">hwy</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">


</span><span class="c1"># 4. "audi"에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 </span><span class="w">
</span><span class="c1"># 높은지 알아보려고 한다. "audi"에서 생산한 자동차 중 hwy가 1~5위에 해당하는 </span><span class="w">
</span><span class="c1"># 자동차의 데이터를 출력하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">filter</span><span class="p">(</span><span class="n">manufacturer</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"audi"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">head</span><span class="p">(</span><span class="m">5</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w">


</span><span class="c1"># 5. mpg 데이터는 연비를 나타내는 변수가 2개입니다. </span><span class="w">
</span><span class="c1"># 두 변수를 각각 활용하는 대신 하나의 통합 연비 변수를 만들어 사용하려 합니다. </span><span class="w">
</span><span class="c1"># 평균 연비 변수는 두 연비(고속도로와 도시)의 평균을 이용합니다. </span><span class="w">
</span><span class="c1"># 회사별로 "suv" 자동차의 평균 연비를 구한후 내림차순으로 정렬한 후 1~5위까지 데이터를 출력하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">mutate</span><span class="p">(</span><span class="n">avg_rate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">cty</span><span class="o">+</span><span class="n">hwy</span><span class="p">)</span><span class="o">/</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">filter</span><span class="p">(</span><span class="n">class</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"suv"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">manufacturer</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_avg_rate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">avg_rate</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean_avg_rate</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">head</span><span class="p">(</span><span class="m">5</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w">


</span><span class="c1"># 6. mpg 데이터의 class는 "suv", "compact" 등 자동차의 특징에 따라 </span><span class="w">
</span><span class="c1"># 일곱 종류로 분류한 변수입니다. 어떤 차종의 도시 연비가 높은지 비교하려 합니다. </span><span class="w">
</span><span class="c1"># class별 cty 평균을 구하고 cty 평균이 높은 순으로 정렬해 출력하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">class</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_cty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">cty</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean_cty</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">


</span><span class="c1"># 7. 어떤 회사 자동차의 hwy(고속도로 연비)가 가장 높은지 알아보려 합니다. </span><span class="w">
</span><span class="c1"># hwy(고속도로 연비) 평균이 가장 높은 회사 세 곳을 출력하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">manufacturer</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">mean_hwy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">hwy</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean_hwy</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">select</span><span class="p">(</span><span class="n">manufacturer</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">head</span><span class="p">(</span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w">


</span><span class="c1"># 8. 어떤 회사에서 "compact" 차종을 가장 많이 생산하는지 알아보려고 합니다. </span><span class="w">
</span><span class="c1"># 각 회사별 "compact" 차종 수를 내림차순으로 정렬해 출력하세요.</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">filter</span><span class="p">(</span><span class="n">class</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"compact"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">group_by</span><span class="p">(</span><span class="n">manufacturer</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">summarise</span><span class="p">(</span><span class="n">ncount</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
          </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">ncount</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">

</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">R 데이터 조작 실습 2</strong></p>

<p>MovieLens DataSet을 이용하여 데이터 조작 실습. 
MovieLens DataSet은 Group Lens(미네소타 대학 컴퓨터과의 research lab)에서 수집한 영화 데이터 입니다.
영화의 선호 정보를 1~5사이의 점수로 표현한 데이터입니다.(5에 가까울수록 선호)</p>

<p>아래의 링크를 통해 데이터를 다운로드 할 수 있습니다.</p>

<ul>
  <li><a href="https://grouplens.org/datasets/movielens/" target="_blank">MovieLens DataSet</a></li>
</ul>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># MovieLens DataSet 활용</span><span class="w">

</span><span class="c1"># 1. 사용자가 평가한 모든 영화의 전체 평균 평점</span><span class="w">

</span><span class="c1"># 2. 각 사용자별 평균 평점</span><span class="w">

</span><span class="c1"># 3. 각 영화별 평균 평점</span><span class="w">

</span><span class="c1"># 4. 평균 평점이 가장 높은 영화의 제목</span><span class="w">
</span><span class="c1"># ( 동률이 있을 경우 모두 출력)</span><span class="w">

</span><span class="c1"># 5. Comedy영화 중 가장 평점이 낮은 영화의 제목</span><span class="w">

</span><span class="c1"># 6. 2015년도에 평가된 모든 Romance 영화의 평균 평점은?</span><span class="w">
</span></code></pre></div></div>

<hr />

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(14) - R 데이터 조작</title>
	  <link>http://localhost:4000/R-lecture-R-dplyr</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-14T02:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-dplyr</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R 데이터 조작</strong></p>

<p>데이터 분석 업무에서는 데이터 모델링이나 시각화에 적합한 데이터를 얻기위해
복잡한 과정을 거치게 됩니다. 실제 분석 프로젝트에서 절반 이상의 시간을 
데이터 구축과 변환과 조작, 필터링과 전처리 작업에 할당합니다.</p>

<p>이번에는 데이터 조작에 특화된 몇 가지 package를 살펴보도록 하겠습니다.</p>

<p>데이터 분석을 하기 위해서는 먼저 데이터의 구조를 파악해야 하며 R은 
분석할 데이터의 구조를 쉽게 파악할 수 있도록 몇가지 함수를 제공합니다.</p>

<p><strong class="subtitle2_fontAwesome">데이터 구조를 파악하기 위해 사용하는 기본 함수</strong></p>

<ul>
  <li><code class="highlighter-rouge">class()</code> : 자료구조(메모리구조)를 파악하기 위한 함수.</li>
  <li><code class="highlighter-rouge">head()</code> : 데이터의 앞부분을 추출하는 함수. 기본값은 data frame일 경우 앞에서 6행까지 추출.</li>
  <li><code class="highlighter-rouge">tail()</code> : 데이터의 뒷부분을 추출하는 함수. 기본값은 data frame일 경우 뒤에서 6행까지 추출.</li>
  <li><code class="highlighter-rouge">View()</code> : View 창에서 데이터 출력.</li>
  <li><code class="highlighter-rouge">dim()</code> : data frame의 행과 열의 개수를 구하는 함수. 선형구조에 적용 불가능.</li>
  <li><code class="highlighter-rouge">nrow()</code> : data frame의 행의 개수를 구하는 함수. 선형구조에 적용 불가능.</li>
  <li><code class="highlighter-rouge">ncol()</code> : data frame의 column의 개수를 구하는 함수. 선형구조에 적용 불가능.</li>
  <li><code class="highlighter-rouge">str()</code> : 데이터에 들어있는 column들의 속성을 확인하기 위한 함수.</li>
  <li><code class="highlighter-rouge">summary()</code> : 요약 통계량을 산출하는 함수.</li>
  <li><code class="highlighter-rouge">ls()</code> : data frame의 column 항목을 vector로 추출하는 함수.</li>
  <li><code class="highlighter-rouge">length()</code> : 벡터의 길이, data frame일 경우 column의 개수를 구하는 함수.</li>
</ul>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<ul>
  <li>위에서 언급된 각 함수를 이용해 데이터 구조를 파악해 보자.</li>
  <li>사용하는 데이터 셋은 <code class="highlighter-rouge">ggplot2</code> package의 <code class="highlighter-rouge">mpg data set</code>, <code class="highlighter-rouge">hflights</code> package의 hflights data set, 그리고
간단한 엑셀파일을 사용하자.</li>
  <li><code class="highlighter-rouge">mpg</code> : 1999년에서 2008년 까지 인기 차종 38개에 대한 연비데이터.</li>
  <li><code class="highlighter-rouge">hflights</code> : 2011년도 미국 휴스턴에서 출발하는 모든 비행기의 이륙과 착륙 정보가 기록된
것으로 약 22만건의 관측치와 21개의 column으로 구성된 데이터 셋</li>
  <li><a href="https://www.rdocumentation.org/packages/ggplot2/versions/3.2.1/topics/mpg" target="_blank">mpg reference manual</a></li>
  <li><a href="https://cran.r-project.org/web/packages/hflights/hflights.pdf" target="_blank">hflights package reference manual</a></li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ggplot2 설치</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">

</span><span class="c1"># mpg data set 이용</span><span class="w">
</span><span class="n">mpg</span><span class="w">
</span><span class="n">mpg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">   </span><span class="c1"># mpg data frame</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">ls</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="c1"># 주요컬럼</span><span class="w">
</span><span class="c1"># 컬럼의 명세 : R Document(https://www.rdocumentation.org/)</span><span class="w">

</span><span class="c1"># manufacturer : 제조회사</span><span class="w">
</span><span class="c1"># displ : 배기량(Displacement)</span><span class="w">
</span><span class="c1"># cyl : 실린더 개수</span><span class="w">
</span><span class="c1"># drv : 구동 방식( f: 전륜구동, r : 후륜구동, 4 : 4륜구동)</span><span class="w">
</span><span class="c1"># hwy : 고속도로 연비 (miles per gallon) </span><span class="w">
</span><span class="c1">#                     1gal : 3.8리터, 1mile : 1609.34m</span><span class="w">
</span><span class="c1"># class : 자동차 종류</span><span class="w">
</span><span class="c1"># model : 자동차 모델명</span><span class="w">
</span><span class="c1"># year : 생산연도</span><span class="w">
</span><span class="c1"># trans : 변속기 종류</span><span class="w">
</span><span class="c1"># cty : 도시 연비</span><span class="w">
</span><span class="c1"># fl : 연료 종류</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">tail</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">View</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="nf">dim</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">         </span><span class="c1"># 234행, 11 column</span><span class="w">
</span><span class="n">nrow</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">ncol</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">ls</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="nf">length</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">      </span><span class="c1"># data frame인 경우 column의 개수</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">rev</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">mpg</span><span class="p">))</span><span class="w">   </span><span class="c1"># vector인 경우 원소의 순서를 역순으로</span><span class="w">
</span><span class="c1"># data frame인 경우 column을 역순으로</span><span class="w">

</span><span class="c1"># 여기서 잠깐!! 4분위에 대해서 실습하고 넘어가자</span><span class="w">
</span><span class="c1"># 사분위수 : 측정값을 오름차순으로 정렬한 후 4등분했을 때</span><span class="w">
</span><span class="c1"># 각 등위에 해당하는 값을 의미.</span><span class="w">
</span><span class="c1"># 중앙값(중위수)는 2사분위값에 해당.</span><span class="w">

</span><span class="c1"># 총 13개의 데이터</span><span class="w">
</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">7</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">11</span><span class="p">,</span><span class="w"> </span><span class="m">13</span><span class="p">,</span><span class="w"> </span><span class="m">14</span><span class="p">,</span><span class="w"> </span><span class="m">17</span><span class="p">,</span><span class="w"> </span><span class="m">20</span><span class="p">,</span><span class="w"> </span><span class="m">23</span><span class="p">,</span><span class="w"> </span><span class="m">25</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">data</span><span class="p">)</span><span class="w">
</span><span class="c1"># 1사분위 =&gt; 1 + (0.25 * 12) = 4(번째 값) =&gt; 7</span><span class="w">
</span><span class="c1"># 3사분위 =&gt; 1 + (0.75 * 12) = 10(번째 값) =&gt; 17</span><span class="w">

</span><span class="c1">#########################################################</span><span class="w">
</span><span class="c1"># hflights package설치</span><span class="w">
</span><span class="c1"># 주요컬럼</span><span class="w">
</span><span class="c1"># Year(년), Month(일), DayofMonth(일), DayofWeek(요일)</span><span class="w">
</span><span class="c1"># AirTime(비행시간), DepTime(출발시간), ArrTime(도착시간)</span><span class="w">
</span><span class="c1"># TailNum(항공기 일련번호), DepDelay(출발지연시간)</span><span class="w">
</span><span class="c1"># ArrDelay(도착지연시간), Distance(비행거리)</span><span class="w">
</span><span class="c1"># 다른컬럼의 의미는 reference 참조</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"hflights"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">   </span><span class="c1"># data frame</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">    </span><span class="c1"># 상위 6행 출력</span><span class="w">
</span><span class="n">tail</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">    </span><span class="c1"># 하위 6행 출력</span><span class="w">
</span><span class="n">View</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">    </span><span class="c1"># View 창으로 출력</span><span class="w">
</span><span class="nf">dim</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">     </span><span class="c1"># 행,열 (227496,21)     </span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">     </span><span class="c1"># 변수의 속성확인</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w"> </span><span class="c1"># 요약 통계</span><span class="w">
                  </span><span class="c1"># mean : 평균</span><span class="w">
                  </span><span class="c1"># median : 중앙값</span><span class="w">
</span><span class="c1"># 평균은 편향된 데이터와 이상치 때문에 그릇된 정보를</span><span class="w">
</span><span class="c1"># 제공하는 경우가 있음. 이런 경우 값을 작은수에서</span><span class="w">
</span><span class="c1"># 큰 수로 정렬한 후 중앙에 있는 값을 계산해서 사용</span><span class="w">
</span><span class="n">ls</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">      </span><span class="c1"># column명을 vector로 출력</span><span class="w">
</span><span class="n">nrow</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">    </span><span class="c1"># 행의 개수</span><span class="w">
</span><span class="n">ncol</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">    </span><span class="c1"># 열의 개수</span><span class="w">
</span><span class="nf">length</span><span class="p">(</span><span class="n">hflights</span><span class="p">)</span><span class="w">  </span><span class="c1"># 열의 개수</span><span class="w">
</span><span class="c1"># matrix에 length()를 적용하면 열의 개수가 아니라</span><span class="w">
</span><span class="c1"># 모든 원소의 개수를 리턴한다.</span><span class="w">
</span><span class="n">rev</span><span class="p">()</span><span class="w">             </span><span class="c1"># vector인 경우 원소의 순서를 역순으로</span><span class="w">
</span><span class="c1"># data frame인 경우 column을 역순으로</span><span class="w">

</span><span class="c1">######################################################</span><span class="w">
</span><span class="c1"># iris dataset</span><span class="w">
</span><span class="c1"># 통계학자인 피셔(Fisher) 가 소개한 데이터.</span><span class="w">
</span><span class="c1"># 붓꽃(iris)의 3가지 종(setosa, versicolor, virginica)에 대해 </span><span class="w">
</span><span class="c1"># 꽃받침(sepal)과 꽃잎(petal)의 길이를 정리한 데이터</span><span class="w">

</span><span class="c1"># R에 기본으로 내장</span><span class="w">
</span><span class="c1"># Species : 붓꽃의 종. setosa, versicolor, virginica (Factor)</span><span class="w">
</span><span class="c1"># Sepal.Width : 꽃받침의 너비 (numeric)</span><span class="w">
</span><span class="c1"># Sepal.Length : 꽃받침의 길이 (numeric)</span><span class="w">
</span><span class="c1"># Petal.Width : 꽃잎의 너비 (numeric)</span><span class="w">
</span><span class="c1"># Petal.Length : 꽃잎의 길이 (numeric)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">rev</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">iris</span><span class="p">))</span><span class="w">
</span><span class="n">View</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">rev</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span><span class="w">


</span><span class="c1"># 2016년 2017년 ATM 이용건수와 이용금액</span><span class="w">
</span><span class="c1"># 제공된 2016_2017_이용건수_및_이용금액.xlsx 파일 이용</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"xlsx"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">xlsx</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.xlsx</span><span class="p">(</span><span class="n">file.choose</span><span class="p">(),</span><span class="w">
                </span><span class="n">sheetIndex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">View</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">rev</span><span class="p">(</span><span class="n">ls</span><span class="p">(</span><span class="n">df</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">plyr package</strong></p>

<p><code class="highlighter-rouge">plyr</code> package는 두 개 이상의 data frame을 대상으로 Key 값을 이용하여 하나의 data frame으로
병합하거나 집단변수를 기준으로 data frame 변수에 함수를 적용하여 요약집계 결과를 구할 때 
유용한 함수를 제공하는 package입니다.</p>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plyr package</span><span class="w">

</span><span class="c1"># 1. data frame 병합</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"plyr"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">plyr</span><span class="p">)</span><span class="w">

</span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">6</span><span class="p">),</span><span class="w">
                </span><span class="n">height</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">160</span><span class="p">,</span><span class="m">175</span><span class="p">,</span><span class="m">180</span><span class="p">,</span><span class="m">177</span><span class="p">,</span><span class="m">194</span><span class="p">))</span><span class="w">
</span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">),</span><span class="w">
                </span><span class="n">weight</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">55</span><span class="p">,</span><span class="m">73</span><span class="p">,</span><span class="m">80</span><span class="p">,</span><span class="m">94</span><span class="p">,</span><span class="m">77</span><span class="p">))</span><span class="w">

</span><span class="c1"># join() : key값을 기준으로 두 개의 data frame을 하나로 병합</span><span class="w">
</span><span class="c1"># left join이 default</span><span class="w">

</span><span class="n">inner_df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">join</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"id"</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"inner"</span><span class="p">)</span><span class="w">  </span><span class="c1"># inner join</span><span class="w">
</span><span class="n">inner_df</span><span class="w">

</span><span class="n">left_df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">join</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"id"</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"left"</span><span class="p">)</span><span class="w"> </span><span class="c1"># left join</span><span class="w">
</span><span class="n">left_df</span><span class="w">

</span><span class="n">right_df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">join</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"id"</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"right"</span><span class="p">)</span><span class="w"> </span><span class="c1"># right join</span><span class="w">
</span><span class="n">right_df</span><span class="w">

</span><span class="n">full_df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">join</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"id"</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"full"</span><span class="p">)</span><span class="w"> </span><span class="c1"># full join</span><span class="w">
</span><span class="n">full_df</span><span class="w">


</span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">6</span><span class="p">),</span><span class="w">
                </span><span class="n">gender</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">),</span><span class="w">
                </span><span class="n">height</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">160</span><span class="p">,</span><span class="m">175</span><span class="p">,</span><span class="m">180</span><span class="p">,</span><span class="m">177</span><span class="p">,</span><span class="m">194</span><span class="p">))</span><span class="w">
</span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">),</span><span class="w">
                </span><span class="n">gender</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">,</span><span class="s2">"F"</span><span class="p">,</span><span class="s2">"M"</span><span class="p">),</span><span class="w">
                </span><span class="n">weight</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">55</span><span class="p">,</span><span class="m">73</span><span class="p">,</span><span class="m">80</span><span class="p">,</span><span class="m">94</span><span class="p">,</span><span class="m">77</span><span class="p">))</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">join</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"id"</span><span class="p">,</span><span class="s2">"gender"</span><span class="p">),</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s2">"inner"</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="c1"># 2. 그룹별 기술 통계량 구하기</span><span class="w">
</span><span class="c1"># tapply() : 집단별 통계치를 구해주며 한번에 1개의 통계치만 구할 수 있다.</span><span class="w">

</span><span class="n">str</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">unique</span><span class="p">(</span><span class="n">iris</span><span class="o">$</span><span class="n">Species</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tapply</span><span class="p">(</span><span class="n">iris</span><span class="o">$</span><span class="n">Sepal.Length</span><span class="p">,</span><span class="w"> </span><span class="n">iris</span><span class="o">$</span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="o">=</span><span class="n">mean</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tapply</span><span class="p">(</span><span class="n">iris</span><span class="o">$</span><span class="n">Sepal.Length</span><span class="p">,</span><span class="w"> </span><span class="n">iris</span><span class="o">$</span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="o">=</span><span class="n">sd</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w">

</span><span class="c1"># ddply() : 한번에 여러개의 통계치를 구할 수 있다.</span><span class="w">

</span><span class="n">result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ddply</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span><span class="w"> 
               </span><span class="n">.</span><span class="p">(</span><span class="n">Species</span><span class="p">),</span><span class="w"> 
               </span><span class="n">summarise</span><span class="p">,</span><span class="w">
               </span><span class="n">avg</span><span class="o">=</span><span class="nf">round</span><span class="p">(</span><span class="n">mean</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="p">),</span><span class="m">2</span><span class="p">),</span><span class="w">
               </span><span class="n">sd</span><span class="o">=</span><span class="nf">round</span><span class="p">(</span><span class="n">sd</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="p">),</span><span class="m">2</span><span class="p">),</span><span class="w">
               </span><span class="n">max</span><span class="o">=</span><span class="nf">max</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="p">))</span><span class="w">
</span><span class="n">result</span><span class="w">
</span><span class="n">View</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="w">    </span><span class="c1"># data frame</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">dplyr package</strong></p>

<p><code class="highlighter-rouge">dplyr</code> package는 기존의 plyr package의 성능과 기능을 개선한 package입니다. plyr package는 R 언어로 구현되었기 때문에
속도가 느렸으나 dplyr package는 C++로 개발되어서 속도가 빠른 장점이 있습니다.</p>

<p>또한 data frame을 제어하는데 특화된 함수를 제공함으로 정형화된 데이터를 처리하는데 적합하며 
<code class="highlighter-rouge">%&gt;%</code> 기호를 이용하여 함수들을 나열하는 방식(chaining)으로 코드를 작성할 수 있습니다.</p>

<p><strong class="subtitle2_fontAwesome">dplyr package에서 제공되는 주요 함수</strong></p>

<ul>
  <li><code class="highlighter-rouge">tbl_df()</code> : 데이터 셋에서 console창의 크기만큼 데이터 셋을 추출하는 기능</li>
  <li><code class="highlighter-rouge">rename()</code> : 데이터 셋의 column명을 수정하는 기능</li>
  <li><code class="highlighter-rouge">filter()</code> : 데이터 셋에서 조건에 맞는 데이터 셋을 추출하는 기능</li>
  <li><code class="highlighter-rouge">select()</code> : 데이터 셋을 대상으로 특정 column들을 추출하는 기능</li>
  <li><code class="highlighter-rouge">arrange()</code> : 데이터 셋을 특정 column으로 정렬하는 기능</li>
  <li><code class="highlighter-rouge">mutate()</code> : 데이터 셋에 새로운 column을 추가하는 기능</li>
  <li><code class="highlighter-rouge">group_by()</code> : 데이터 셋의 범주형 column을 대상으로 그룹화하는 기능</li>
  <li><code class="highlighter-rouge">summaries()</code> : 데이터 셋의 특정 column으로 요약 집계하는 기능</li>
  <li><code class="highlighter-rouge">left_join()</code> : 데이터 셋 left join 기능(다른 join도 함수로 제공)</li>
  <li><code class="highlighter-rouge">bind_rows()</code> : 데이터 셋을 행 기준으로 합치는 기능</li>
  <li><code class="highlighter-rouge">bind_cols()</code> : 데이터 셋을 열 기준으로 합치는 기능</li>
</ul>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<ul>
  <li>실습에 사용할 엑셀파일은 아래의 링크에서 다운로드해서 사용합니다.</li>
  <li><a href="https://drive.google.com/open?id=1pRj1JIDHm5qoJWe7CVs9uC-wz7IiJkZv" target="_blank">2016_2017_이용건수_및_이용금액.xlsx</a></li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># dplyr package</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"dplyr"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">xlsx</span><span class="p">)</span><span class="w">

</span><span class="n">excel_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.xlsx</span><span class="p">(</span><span class="n">file.choose</span><span class="p">(),</span><span class="w">
                        </span><span class="n">sheetIndex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                        </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span><span class="n">excel_data</span><span class="w">

</span><span class="c1"># 1. tbl_df()</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tbl_df</span><span class="p">(</span><span class="n">excel_data</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">    </span><span class="c1"># 현재 R의 console 크기에서 볼 수 있는 만큼 결과 출력</span><span class="w">
      
</span><span class="n">View</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">


</span><span class="c1"># 2. rename(data frame, newVar = var, ...)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rename</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">Y</span><span class="m">17</span><span class="err">_</span><span class="n">AMT</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">AMT17</span><span class="p">,</span><span class="w">
             </span><span class="n">Y</span><span class="m">16</span><span class="err">_</span><span class="n">AMT</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">AMT16</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">    </span><span class="c1"># column명 변경</span><span class="w">


</span><span class="c1"># 3. filter(data frame, 조건1, 조건2, ... )</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">AREA</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"서울"</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">AMT17</span><span class="w"> </span><span class="o">&gt;</span><span class="m">500000</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">AREA</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"서울"</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">,</span><span class="w">
             </span><span class="n">AMT16</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">350000</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">AREA</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"서울"</span><span class="p">,</span><span class="s2">"경기"</span><span class="p">),</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">,</span><span class="w">
             </span><span class="n">AMT16</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">350000</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">



</span><span class="c1"># 4. arrange(data frame, column1, desc(column2), ...)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">"M"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">arrange</span><span class="p">(</span><span class="n">AREA</span><span class="p">,</span><span class="w"> 
              </span><span class="n">desc</span><span class="p">(</span><span class="n">AMT17</span><span class="p">))</span><span class="w">
</span><span class="n">df</span><span class="w">


</span><span class="c1"># 5. select(data frame, column1, column2, ...)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">arrange</span><span class="p">(</span><span class="n">AREA</span><span class="p">,</span><span class="w"> 
              </span><span class="n">desc</span><span class="p">(</span><span class="n">AMT17</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">select</span><span class="p">(</span><span class="n">ID</span><span class="p">,</span><span class="n">AREA</span><span class="o">:</span><span class="n">Y</span><span class="m">17</span><span class="err">_</span><span class="n">CNT</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">arrange</span><span class="p">(</span><span class="n">AREA</span><span class="p">,</span><span class="w"> 
              </span><span class="n">desc</span><span class="p">(</span><span class="n">AMT17</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">SEX</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">



</span><span class="c1"># 6. 새로운 column 생성</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">)</span><span class="w"> 

</span><span class="n">df</span><span class="o">$</span><span class="n">AMT15</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">AMT16</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">10000</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="n">df</span><span class="o">$</span><span class="n">VIP</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">AMT15</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">500000</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">df</span><span class="w">


</span><span class="c1"># 7. mutate(data fame, column명1=수식1, column명2=수식2)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">mutate</span><span class="p">(</span><span class="n">AMT15</span><span class="o">=</span><span class="n">AMT16</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">10000</span><span class="p">,</span><span class="w"> 
             </span><span class="n">AMT14</span><span class="o">=</span><span class="n">AMT15</span><span class="m">+10000</span><span class="p">,</span><span class="w">
             </span><span class="n">VIP</span><span class="o">=</span><span class="n">ifelse</span><span class="p">(</span><span class="n">AMT15</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">500000</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">))</span><span class="w">
</span><span class="n">df</span><span class="w">


</span><span class="c1"># 8. summaries(data frame, 추가할column명1=함수(column명))</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">SEX</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"M"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">mutate</span><span class="p">(</span><span class="n">AMT15</span><span class="o">=</span><span class="n">AMT16</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">10000</span><span class="p">,</span><span class="w"> 
             </span><span class="n">AMT14</span><span class="o">=</span><span class="n">AMT15</span><span class="m">+10000</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">summarise</span><span class="p">(</span><span class="n">sum</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">AMT14</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">),</span><span class="w"> </span><span class="n">cnt</span><span class="o">=</span><span class="n">n</span><span class="p">())</span><span class="w">
</span><span class="n">df</span><span class="w">


</span><span class="c1"># 9. group_by(data frame, 범주형 column)</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">excel_data</span><span class="p">,</span><span class="w"> 
             </span><span class="n">AMT17</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">300000</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">group_by</span><span class="p">(</span><span class="n">SEX</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">summarise</span><span class="p">(</span><span class="n">sum</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">AMT17</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">),</span><span class="w"> </span><span class="n">cnt</span><span class="o">=</span><span class="n">n</span><span class="p">())</span><span class="w"> 
</span><span class="n">df</span><span class="w">

</span><span class="c1"># 10. bind_rows(), bind_cols()</span><span class="w">
</span><span class="n">df1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">))</span><span class="w">
</span><span class="n">df1</span><span class="w">
</span><span class="n">df2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">6</span><span class="p">))</span><span class="w">
</span><span class="n">df2</span><span class="w">

</span><span class="n">bind_rows</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span><span class="n">df2</span><span class="p">)</span><span class="w">
</span><span class="n">df2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rename</span><span class="p">(</span><span class="n">df2</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y</span><span class="p">)</span><span class="w">
</span><span class="n">bind_rows</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span><span class="n">df2</span><span class="p">)</span><span class="w">

</span><span class="n">bind_cols</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span><span class="n">df2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">reshape2 package</strong></p>

<p><code class="highlighter-rouge">reshape2</code> package를 설명하기 전에 다음의 파일을 data frame으로 읽어들여보자.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sample_mpg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"C:/R_workspace/R_Lecture/data/sample_mpg.csv"</span><span class="p">,</span><span class="w">
               </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">","</span><span class="p">,</span><span class="w">
               </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">,</span><span class="w">
               </span><span class="n">fileEncoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w"> 

</span><span class="n">sample_mpg</span><span class="w">   </span><span class="c1"># 일반적인 data frame 형태</span><span class="w">

</span><span class="n">melt_sample_mpg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"C:/R_workspace/R_Lecture/data/melt_sample_mpg.csv"</span><span class="p">,</span><span class="w">
                            </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">","</span><span class="p">,</span><span class="w">
                            </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">,</span><span class="w">
                            </span><span class="n">fileEncoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
</span><span class="n">melt_sample_mpg</span><span class="w">   </span><span class="c1"># column이 row로 표현된 형태!!</span><span class="w">


</span><span class="c1"># raw data의 데이터 형태가 읽어들인 형태처럼 되어 있을 경우</span><span class="w">
</span><span class="c1"># 어떻게 처리해야 하는가?</span><span class="w">

</span><span class="c1"># 평균 도시연비는?</span><span class="w">

</span><span class="c1"># 1. 일반적인 data frame인 경우</span><span class="w">
</span><span class="n">mean</span><span class="p">(</span><span class="n">sample_mpg</span><span class="o">$</span><span class="n">cty</span><span class="p">)</span><span class="w">

</span><span class="c1"># 2. column이 row로 표현된 경우</span><span class="w">
</span><span class="n">melt_sample_mpg</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">filter</span><span class="p">(</span><span class="n">variable</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"cty"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">avg_cty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w">

</span><span class="c1"># 평균 연비를 구해서 새로운 column을 구하려면?</span><span class="w">

</span><span class="c1"># 1. 일반적인 data frame인 경우</span><span class="w">
</span><span class="n">sample_mpg</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">avg_rate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">cty</span><span class="o">+</span><span class="n">hwy</span><span class="p">)</span><span class="o">/</span><span class="m">2</span><span class="p">)</span><span class="w">
       
</span><span class="c1"># 2. column이 row로 표현된 경우</span><span class="w">
</span><span class="c1">## 감도 안온다!!</span><span class="w">
</span></code></pre></div></div>

<p><code class="highlighter-rouge">reshape2</code> package는 수집한 데이터를 분석하기 편한 형태로 가공할 때 사용하는
대표적인 package입니다.</p>

<p>reshape2 package안에는 대표적인 2개의 함수가 존재하며 주로 이 함수를 이용합니다.</p>

<p><strong class="subtitle2_fontAwesome">melt() 함수</strong></p>

<ul>
  <li>column을 행(row)으로 바꾸어서 가로로 긴 형태의 데이터를 세로로 길게 전환하는 함수입니다.</li>
  <li>melt는 변수(variable)에 대해 값(value)를 매칭하는 방식으로 넓게 퍼진 데이터를 길게 변형합니다.</li>
  <li>melt의 기본 동작방식은 numeric data를 포함하고 있는 모든 열들을 variable로 만드는 것입니다.</li>
  <li>melt(data frame, id.var=”기준 열”, measure.vars=c(“…”,”…”)</li>
</ul>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>
<ul>
  <li>R에 기본으로 내장되어 있는 data set인 <code class="highlighter-rouge">airquality</code>를 이용하여 melt() 함수를 실습해보자.</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"reshape2"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">reshape2</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">airquality</span><span class="w">
</span><span class="nf">class</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">     </span><span class="c1"># 153행 6열</span><span class="w">
</span><span class="n">df</span><span class="w">

</span><span class="n">View</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="c1"># melt()의 기본은 기준이 될 열을 지정하지 않으면 </span><span class="w">
</span><span class="c1"># numeric data type의 모든 열을 행으로 변환</span><span class="w">
</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">       
</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">         </span><span class="c1"># value값이 NA인 것은 제외</span><span class="w">

</span><span class="n">nrow</span><span class="p">(</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">))</span><span class="w">              </span><span class="c1"># 생성된 총 row수 : 153 * 6 = 918</span><span class="w">

</span><span class="c1"># month를 기준으로 데이터를 행으로 변환</span><span class="w">
</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="n">id.vars</span><span class="o">=</span><span class="s2">"Month"</span><span class="p">)</span><span class="w">    
</span><span class="n">nrow</span><span class="p">(</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="n">id.vars</span><span class="o">=</span><span class="s2">"Month"</span><span class="p">))</span><span class="w">  </span><span class="c1"># 생성된 총 row수 : 153 * 5 = 765</span><span class="w">

</span><span class="c1"># month와 day를 기준으로 데이터를 행으로 변환</span><span class="w">
</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Month"</span><span class="p">,</span><span class="s2">"Day"</span><span class="p">))</span><span class="w">
</span><span class="n">nrow</span><span class="p">(</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Month"</span><span class="p">,</span><span class="s2">"Day"</span><span class="p">)))</span><span class="w"> 
</span><span class="c1"># 생성된 총 row수 : 153 * 4 = 612</span><span class="w">

</span><span class="c1"># month와 day를 기준으로 ozone데이터만 행으로 변환</span><span class="w">
</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w">
     </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Month"</span><span class="p">,</span><span class="s2">"Day"</span><span class="p">),</span><span class="w">
     </span><span class="n">measure.vars</span><span class="o">=</span><span class="s2">"Ozone"</span><span class="p">)</span><span class="w">


</span><span class="c1"># smiths data set을 이용하여 melt를 실습해보자</span><span class="w">

</span><span class="n">smiths</span><span class="w">

</span><span class="n">melt_smiths</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">smiths</span><span class="p">,</span><span class="w">
                    </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"subject"</span><span class="p">))</span><span class="w">
</span><span class="n">melt_smiths</span><span class="w">   </span><span class="c1"># 8행</span><span class="w">


</span><span class="n">melt_smiths</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">smiths</span><span class="p">,</span><span class="w">
                    </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"subject"</span><span class="p">,</span><span class="s2">"time"</span><span class="p">))</span><span class="w">
</span><span class="n">melt_smiths</span><span class="w">   </span><span class="c1"># 6행</span><span class="w">

</span><span class="n">melt_smiths</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">smiths</span><span class="p">,</span><span class="w">
                    </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"subject"</span><span class="p">,</span><span class="s2">"time"</span><span class="p">,</span><span class="s2">"age"</span><span class="p">))</span><span class="w">
</span><span class="n">melt_smiths</span><span class="w">   </span><span class="c1"># 4행</span><span class="w">

</span><span class="n">melt_smiths</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">smiths</span><span class="p">,</span><span class="w">
                    </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"subject"</span><span class="p">,</span><span class="s2">"time"</span><span class="p">,</span><span class="s2">"age"</span><span class="p">),</span><span class="w">
                    </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">
</span><span class="n">melt_smiths</span><span class="w">   </span><span class="c1"># 3행</span><span class="w">


</span><span class="c1"># 다른 데이터 셋으로 실습</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">reshape2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">mpg</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">
</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">

</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">id.vars</span><span class="o">=</span><span class="s2">"model"</span><span class="p">)</span><span class="w">

</span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"manufacturer"</span><span class="p">,</span><span class="s2">"model"</span><span class="p">),</span><span class="w">
     </span><span class="n">measure.vars</span><span class="o">=</span><span class="s2">"cty"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><strong class="subtitle2_fontAwesome">dcast() 함수</strong></p>

<ul>
  <li>세로로 길게 늘어진 데이터(melt된 데이터)를 가로로 변행해야 하는 경우에 사용</li>
  <li>cast() 함수 종류 중 data frame의 형태를 반환하는 경우에는 dcast()를 사용합니다.</li>
  <li>melt된 데이터를 원상 복구하거나 통계 함수를 이용한 변형에 사용됩니다.</li>
</ul>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">airquality</span><span class="p">;</span><span class="w"> </span><span class="n">df</span><span class="w">

</span><span class="n">melt_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Month"</span><span class="p">,</span><span class="s2">"Day"</span><span class="p">));</span><span class="w"> </span><span class="n">head</span><span class="p">(</span><span class="n">melt_df</span><span class="p">)</span><span class="w">


</span><span class="c1"># Month를 기준으로 각 값들의 mean</span><span class="w">
</span><span class="n">dcast_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dcast</span><span class="p">(</span><span class="n">melt_df</span><span class="p">,</span><span class="w">
                  </span><span class="n">formula</span><span class="o">=</span><span class="n">Month</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">variable</span><span class="p">,</span><span class="w">
                  </span><span class="n">fun</span><span class="o">=</span><span class="n">mean</span><span class="p">,</span><span class="w">
                  </span><span class="n">na.rm</span><span class="o">=</span><span class="nb">T</span><span class="p">)</span><span class="w">
</span><span class="n">dcast_df</span><span class="w">


</span><span class="c1"># 모든 column 원상 복구</span><span class="w">
</span><span class="n">dcast_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dcast</span><span class="p">(</span><span class="n">melt_df</span><span class="p">,</span><span class="w">
                  </span><span class="n">formula</span><span class="o">=</span><span class="n">Month</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">Day</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w">
</span><span class="n">dcast_df</span><span class="w">

</span><span class="c1">#############################</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">melt_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">id.vars</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"manufacturer"</span><span class="p">,</span><span class="s2">"model"</span><span class="p">),</span><span class="w">
                </span><span class="n">measure.vars</span><span class="o">=</span><span class="s2">"cty"</span><span class="p">)</span><span class="w">
</span><span class="n">melt_df</span><span class="p">;</span><span class="w">

</span><span class="n">dcast_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dcast</span><span class="p">(</span><span class="n">melt_df</span><span class="p">,</span><span class="w">
                  </span><span class="n">formula</span><span class="o">=</span><span class="n">manufacturer</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">variable</span><span class="p">,</span><span class="w">
                  </span><span class="n">fun</span><span class="o">=</span><span class="n">mean</span><span class="p">)</span><span class="w">
</span><span class="n">dcast_df</span><span class="w">

</span><span class="c1">## cf. 각 제조사별 cty의 평균</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">mpg</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">group_by</span><span class="p">(</span><span class="n">manufacturer</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
       </span><span class="n">summarise</span><span class="p">(</span><span class="n">avg_cty</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">cty</span><span class="p">))</span><span class="w">

</span><span class="c1">## 입력받은 데이터파일을 정상적인 data frame으로 변환</span><span class="w">

</span><span class="n">melt_sample_mpg</span><span class="w">

</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dcast</span><span class="p">(</span><span class="n">melt_audi_df</span><span class="p">,</span><span class="w">
                </span><span class="n">manufacturer</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">model</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">year</span><span class="w"> </span><span class="o">+</span><span class="w"> 
                  </span><span class="n">cyl</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">trans</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">drv</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">fl</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">class</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">d_name</span><span class="p">,</span><span class="w">
                </span><span class="n">value.var</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"d_value"</span><span class="p">)</span><span class="w">

</span><span class="n">result</span><span class="w">
</span></code></pre></div></div>

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>R 기초강의(13) - R Crawling</title>
	  <link>http://localhost:4000/R-lecture-R-crawling</link>
		
				
						<author>moon9342</author>
				
		
	  <pubDate>2019-09-13T01:40:00+09:00</pubDate>
	  <guid>http://localhost:4000/R-lecture-R-crawling</guid>
	  <description><![CDATA[
	     <p><span class="table-of-contents-list">R 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./R-lecture-R-environment">R 기초강의(1) - R 개요</a></li>
    <li><a href="./R-lecture-R-operator">R 기초강의(2) - R Operator</a></li>
    <li><a href="./R-lecture-R-datatype">R 기초강의(3) - R Data Type</a></li>
    <li><a href="./R-lecture-R-function_package">R 기초강의(4) - R 패키지와 함수</a></li>
    <li><a href="./R-lecture-R-vector">R 기초강의(5) - R 자료구조(vector)</a></li>
    <li><a href="./R-lecture-R-matrix">R 기초강의(6) - R 자료구조(matrix)</a></li>
    <li><a href="./R-lecture-R-factor_list">R 기초강의(7) - R 자료구조(factor, list)</a></li>
    <li><a href="./R-lecture-R-dataframe">R 기초강의(8) - R 자료구조(data frame)</a></li>
    <li><a href="./R-lecture-R-stringr_package">R 기초강의(9) - R 문자열 처리</a></li>
    <li><a href="./R-lecture-R-data_io">R 기초강의(10) - R 데이터 입출력</a></li>
    <li><a href="./R-lecture-R-control_function">R 기초강의(11) - R 제어문 및 함수</a></li>
    <li><a href="./R-lecture-R-basic-exercise">R 기초강의(12) - R 기초 Exercise</a></li>
    <li><a href="./R-lecture-R-crawling">R 기초강의(13) - R Crawling</a></li>
    <li><a href="./R-lecture-R-dplyr">R 기초강의(14) - R 데이터 조작</a></li>
    <li><a href="./R-lecture-R-dplyr-exercise">R 기초강의(15) - R 데이터 조작 실습</a></li>
    <li><a href="./R-lecture-R-data-preprocessing">R 기초강의(16) - R 데이터 정제</a></li>
    <li><a href="./R-lecture-R-descriptive-statistics">R 기초강의(17) - R 기초 통계 함수</a></li>
    <li><a href="./R-lecture-R-graph">R 기초강의(18) - R Graph</a></li>
    <li><a href="./R-lecture-R-KoNLP">R 기초강의(19) - R KoNLP</a></li>
    <li><a href="./R-lecture-R-exercise">R 기초강의(20) - R 연습문제</a></li>
    <li><a href="./R-lecture-R-ggmap">R 기초강의(21) - R ggmap</a></li>
    <li><a href="./R-lecture-R-database">R 기초강의(22) - R 정형데이터 처리</a></li>
</ul>

<hr />

<p><strong class="subtitle_fontAwesome">R Crawling</strong></p>

<p>Web Crawling의 일반적인 개념은 인터넷 상에서 필요한 정보를 읽어와서 수집하는 작업이라고 할 수 있습니다.</p>

<p>하지만 좀 더 구체적으로 다음과 같은 두 가지 작업으로 정의할 수 있습니다.</p>

<p><strong class="subtitle2_fontAwesome"><code class="highlighter-rouge">Web Scraping</code> (웹 스크래핑)</strong></p>

<ul>
  <li>웹 스크래핑은 웹사이트상에서 원하는 부분에 위치한 정보를 컴퓨터로 하여금 자동으로 추출하여 
수집하도록 하는 기술을 의미합니다.</li>
</ul>

<p><strong class="subtitle2_fontAwesome"><code class="highlighter-rouge">Web Crawling</code> (웹 크롤링)</strong></p>

<ul>
  <li>자동화 봇인 웹 크롤러가 정해진 규칙에 따라 복수개의 웹페이지를 browsing하는 행위를 의미하며 
다른 말로 Web spidering 이라고도 합니다.</li>
</ul>

<p>여기서는 Web Scraping을 위해 CSS(혹은 jQuery)의 selector와 XPATH를 이용하는 방법을 알아보겠습니다.</p>

<p>아래는 많이 사용되는 Selector에 대한 예시 입니다.</p>

<p><img src="assets/built/images/r_selectors.png" alt="Selectors" /></p>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<ul>
  <li>네이버 영화 사이트 댓글 정보를 Scraping 및 Crawling 처리를 해 보겠습니다.</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 네이버 영화 사이트 댓글정보 스크래핑</span><span class="w">

</span><span class="c1"># 필요한 package 설치 및 loading</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"rvest"</span><span class="p">);</span><span class="w"> 
</span><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">

</span><span class="c1"># 네이버 영화 검색 후 평점,리뷰 부분</span><span class="w">

</span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"http://movie.naver.com/movie/point/af/list.nhn"</span><span class="w">
</span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"page="</span><span class="w">

</span><span class="n">request_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="s2">"?"</span><span class="p">,</span><span class="n">page</span><span class="p">,</span><span class="s2">"1"</span><span class="p">)</span><span class="w">

</span><span class="n">page_html</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">request_url</span><span class="p">,</span><span class="w">  </span><span class="n">encoding</span><span class="o">=</span><span class="s2">"CP949"</span><span class="p">)</span><span class="w">
</span><span class="n">page_html</span><span class="p">;</span><span class="w">

</span><span class="c1"># 영화제목 추출</span><span class="w">
</span><span class="n">nodes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">page_html</span><span class="p">,</span><span class="w"> </span><span class="s2">"td.title &gt; a.movie"</span><span class="p">)</span><span class="w">
</span><span class="n">nodes</span><span class="w">

</span><span class="n">movie_title</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_text</span><span class="p">(</span><span class="n">nodes</span><span class="p">)</span><span class="w">
</span><span class="n">movie_title</span><span class="w">

</span><span class="c1"># 기존에는 영화 평점도 있었지만 지금은 공개하지 않음.</span><span class="w">

</span><span class="c1"># 영화리뷰 추출</span><span class="w">
</span><span class="c1"># CSS를 이용(완전하지 않음-영화제목이 포함됨)</span><span class="w">
</span><span class="c1"># nodes &lt;- html_nodes(page_html, "td.title")</span><span class="w">
</span><span class="c1"># movie_review &lt;- html_text(nodes, trim=TRUE);</span><span class="w">
</span><span class="c1"># movie_review</span><span class="w">
</span><span class="c1"># 문자열 처리필요(데이터 정제)</span><span class="w">
</span><span class="c1"># movie_review &lt;- str_remove_all(movie_review,"\t")</span><span class="w">
</span><span class="c1"># movie_review &lt;- str_remove_all(movie_review,"\n")</span><span class="w">
</span><span class="c1"># movie_review &lt;- str_remove_all(movie_review,"신고")</span><span class="w">
</span><span class="c1"># movie_review</span><span class="w">


</span><span class="c1"># XPATH를 이용</span><span class="w">
</span><span class="n">movie_review</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vector</span><span class="p">(</span><span class="n">mode</span><span class="o">=</span><span class="s2">"character"</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="o">=</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">myPath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="s1">'//*[@id="old_content"]/table/tbody/tr['</span><span class="p">,</span><span class="w">
                 </span><span class="n">i</span><span class="p">,</span><span class="w">
                 </span><span class="s1">']/td[2]/text()'</span><span class="p">)</span><span class="w">
  </span><span class="n">nodes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">page_html</span><span class="p">,</span><span class="w"> </span><span class="n">xpath</span><span class="o">=</span><span class="n">myPath</span><span class="p">)</span><span class="w">
  </span><span class="n">comment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_text</span><span class="p">(</span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">trim</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">);</span><span class="w">
  </span><span class="n">movie_review</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comment</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">movie_review</span><span class="w">

</span><span class="n">result_page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">movie_title</span><span class="p">,</span><span class="w"> </span><span class="n">movie_review</span><span class="p">)</span><span class="w">

</span><span class="n">write.csv</span><span class="p">(</span><span class="n">result_page</span><span class="p">,</span><span class="w"> 
          </span><span class="n">file</span><span class="o">=</span><span class="s2">"C:/R_workspace/R_Lecture/data/movie_reviews.csv"</span><span class="p">,</span><span class="w">
          </span><span class="n">row.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
          </span><span class="n">quote</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
          </span><span class="n">fileEncoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"CP949"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>

<ul>
  <li>위의 코드를 이용해서 Crawling 처리까지 진행해 보겠습니다.</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">extract_comment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">idx</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"http://movie.naver.com/movie/point/af/list.nhn"</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"page="</span><span class="w">
  
  </span><span class="n">request_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="s2">"?"</span><span class="p">,</span><span class="n">page</span><span class="p">,</span><span class="n">idx</span><span class="p">)</span><span class="w">
  
  </span><span class="n">page_html</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">request_url</span><span class="p">,</span><span class="w">  </span><span class="n">encoding</span><span class="o">=</span><span class="s2">"CP949"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 영화제목 추출</span><span class="w">
  </span><span class="n">nodes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">page_html</span><span class="p">,</span><span class="w"> </span><span class="s2">"td.title &gt; a.movie"</span><span class="p">)</span><span class="w">
  </span><span class="n">movie_title</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_text</span><span class="p">(</span><span class="n">nodes</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 영화리뷰 추출</span><span class="w">
  </span><span class="n">movie_review</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vector</span><span class="p">(</span><span class="n">mode</span><span class="o">=</span><span class="s2">"character"</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="o">=</span><span class="m">10</span><span class="p">)</span><span class="w">
  </span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">myPath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="s1">'//*[@id="old_content"]/table/tbody/tr['</span><span class="p">,</span><span class="w">
                   </span><span class="n">i</span><span class="p">,</span><span class="w">
                   </span><span class="s1">']/td[2]/text()'</span><span class="p">)</span><span class="w">
    </span><span class="n">nodes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">page_html</span><span class="p">,</span><span class="w"> </span><span class="n">xpath</span><span class="o">=</span><span class="n">myPath</span><span class="p">)</span><span class="w">
    </span><span class="n">comment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_text</span><span class="p">(</span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">trim</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">);</span><span class="w">
    </span><span class="n">movie_review</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comment</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
  
  </span><span class="n">result_page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">movie_title</span><span class="p">,</span><span class="w"> </span><span class="n">movie_review</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">result_page</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">result_df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data.frame</span><span class="p">();</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">result_df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">result_df</span><span class="p">,</span><span class="n">extract_comment</span><span class="p">(</span><span class="n">i</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">View</span><span class="p">(</span><span class="n">result_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><strong class="subtitle2_fontAwesome">실습</strong></p>
<ul>
  <li>로튼토마토 사이트에서 2019년 가장 인기있는 영화 100개의 
영화제목, User Rating, Genre를 추출해서 data frame으로 구축해보자</li>
</ul>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 개인별 수행</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">R에서 Kakao Open API 활용</strong></p>

<p>이번에는 Kakao 검색 API를 이용하여 이미지 검색을 하고 검색된 이미지를 
파일로 저장하는 R 코드를 작성해 보도록 하겠습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"httr"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">httr</span><span class="p">)</span><span class="w">

</span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"https://dapi.kakao.com/v2/search/image"</span><span class="w">

</span><span class="n">keyword</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"query="</span><span class="w">

</span><span class="c1">#request_url = str_c(url,"?",keyword,scan(what=character()))</span><span class="w">
</span><span class="n">request_url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="s2">"?"</span><span class="p">,</span><span class="n">keyword</span><span class="p">,</span><span class="s2">"아이유"</span><span class="p">)</span><span class="w">
</span><span class="n">request_url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">URLencode</span><span class="p">(</span><span class="n">request_url</span><span class="p">)</span><span class="w">   </span><span class="c1"># 한글처리</span><span class="w">
</span><span class="n">request_url</span><span class="w">

</span><span class="n">apiKey</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"1bf8c91dbc8dd1814aa97f2614a1d730"</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">request_url</span><span class="p">,</span><span class="w">
              </span><span class="n">add_headers</span><span class="p">(</span><span class="n">Authorization</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"KakaoAK"</span><span class="p">,</span><span class="w"> </span><span class="n">apiKey</span><span class="p">)))</span><span class="w">
</span><span class="n">http_status</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="w">   </span><span class="c1"># 접속 상태</span><span class="w">
</span><span class="n">result_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">content</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="w">  </span><span class="c1"># 결과데이터</span><span class="w">
</span><span class="n">View</span><span class="p">(</span><span class="n">result_data</span><span class="p">)</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">result_data</span><span class="o">$</span><span class="n">documents</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">result_data</span><span class="o">$</span><span class="n">documents</span><span class="p">[[</span><span class="n">i</span><span class="p">]][[</span><span class="s2">"thumbnail_url"</span><span class="p">]])</span><span class="w">
  </span><span class="n">writeBin</span><span class="p">(</span><span class="n">content</span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="s1">'raw'</span><span class="p">),</span><span class="w"> 
           </span><span class="n">paste</span><span class="p">(</span><span class="s1">'C:/R_workspace/R_Lecture/img/image'</span><span class="p">,</span><span class="w">
                 </span><span class="n">i</span><span class="p">,</span><span class="w">
                 </span><span class="s2">".png"</span><span class="p">,</span><span class="w">
                 </span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">RSelenium을 이용한 동적 데이터 Crawling</strong></p>

<p>AJAX를 이용해 화면을 Rendering하는 Front-End Web Application은 위의 방법으로는
Crawling이 불가능합니다.</p>

<p>이런 경우 <code class="highlighter-rouge">RSelenium</code>을 이용해 Crawling을 수행할 수 있습니다.</p>

<p><a href="https://www.seleniumhq.org/download/" target="_blank">Selenium Standalone Server</a></p>

<p><a href="https://chromedriver.chromium.org/downloads" target="_blank">Chrome Driver</a></p>

<p>R 코드를 실행하기 전에 다음의 코드를 실행 해 <code class="highlighter-rouge">Selenium Server</code>를 실행해야 합니다.
(Java가 설치되어 있어야 합니다.)</p>

<pre><code class="language-txt">java -jar selenium-server-standalone.jar -port 4445
</code></pre>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Selenium</span><span class="w">

</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"RSelenium"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">RSelenium</span><span class="p">)</span><span class="w">

</span><span class="c1"># Selenium 서버에 접속하고 remoteDriver 객체 리턴</span><span class="w">
</span><span class="n">remDr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">remoteDriver</span><span class="p">(</span><span class="n">remoteServerAddr</span><span class="o">=</span><span class="s2">"localhost"</span><span class="p">,</span><span class="w"> 
                      </span><span class="n">port</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">4445</span><span class="p">,</span><span class="w"> 
                      </span><span class="n">browserName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"chrome"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Chrome browser Open</span><span class="w">
</span><span class="n">remDr</span><span class="o">$</span><span class="n">open</span><span class="p">()</span><span class="w">

</span><span class="c1"># 특정 page 랜더링</span><span class="w">
</span><span class="n">remDr</span><span class="o">$</span><span class="n">navigate</span><span class="p">(</span><span class="s2">"http://localhost:8080/bookSearch/index.html"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 입력 상자를 CSS를 이용해서 찾기</span><span class="w">
</span><span class="n">webElem</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">remDr</span><span class="o">$</span><span class="n">findElement</span><span class="p">(</span><span class="n">using</span><span class="o">=</span><span class="s2">"css"</span><span class="p">,</span><span class="w"> </span><span class="s2">"[type=text]"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 검색어를 입력하고 enter key 입력</span><span class="w">
</span><span class="c1">#webElem$sendKeysToElement(list("여행", key="enter"))</span><span class="w">
</span><span class="n">webElem</span><span class="o">$</span><span class="n">sendKeysToElement</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="s2">"여행"</span><span class="p">))</span><span class="w">

</span><span class="c1"># click을 할element를 xpath를 이용해서 찾기</span><span class="w">
</span><span class="c1"># CSS로 찾으면 잘 수행되지 않음.</span><span class="w">
</span><span class="n">btn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">remDr</span><span class="o">$</span><span class="n">findElement</span><span class="p">(</span><span class="n">using</span><span class="o">=</span><span class="s2">"xpath"</span><span class="p">,</span><span class="w"> 
                         </span><span class="n">value</span><span class="o">=</span><span class="s1">'//*[@id="inputText"]'</span><span class="p">)</span><span class="w">

</span><span class="c1"># 찾은 element click event 처리</span><span class="w">
</span><span class="n">btn</span><span class="o">$</span><span class="n">clickElement</span><span class="p">()</span><span class="w">

</span><span class="c1"># AJAX 호출로 나온 결과 데이터 추출</span><span class="w">
</span><span class="n">liElem</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">remDr</span><span class="o">$</span><span class="n">findElements</span><span class="p">(</span><span class="n">using</span><span class="o">=</span><span class="s2">"xpath"</span><span class="p">,</span><span class="w"> 
                             </span><span class="n">value</span><span class="o">=</span><span class="s1">'//*[@id="myList"]/li'</span><span class="p">)</span><span class="w">

</span><span class="n">myList</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">liElem</span><span class="p">,</span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">){</span><span class="n">x</span><span class="o">$</span><span class="n">getElementText</span><span class="p">()})</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">myList</span><span class="p">)</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">idx</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">myList</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">myList</span><span class="p">[[</span><span class="n">idx</span><span class="p">]])</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<hr />

<p><strong class="subtitle_fontAwesome">공공데이터 포탈의 Open API를 활용한 데이터 구축</strong></p>

<p><a href="https://www.data.go.kr/" target="_blank">공공데이터 포털</a>의 데이터를 이용하여 데이터를 구축할 수 있다.
서울특별시 버스노선경로 목록정보를 제공하는 Open API를 이용하여 데이터를 구축해보자.</p>

<p>REST API를 이용해야 하며 결과가 <code class="highlighter-rouge">XML</code>로 리턴된다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 개인별 수행</span><span class="w">
</span></code></pre></div></div>

<hr />

<p>End.</p>

<hr />

<p><span class="lecture-reference">이 포스트의 내용은 아래의 책과 사이트를 참조했습니다.
    조금 더 자세한 사항을 알고 싶으시면 책을 참조하거나 해당 사이트를 방문하세요!!</span></p>
<ul class="lecture-reference">
    <li><a href="https://github.com/youngwoos/Doit_R/#start_r" target="_blank">Do It! 쉽게 배우는 R 데이터 분석 저자 GitHub</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
